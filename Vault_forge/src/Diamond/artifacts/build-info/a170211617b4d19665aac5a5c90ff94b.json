{
	"id": "a170211617b4d19665aac5a5c90ff94b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"Vault_forge/src/Diamond/DepositFacet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./DiamondStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n\r\n\r\ninterface IUSDC is IERC20 {\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\ninterface ISwapContract {\r\n    function swapExactUSDCForETH(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountOut);\r\n    \r\n    function getETHAmountOut(\r\n        uint usdcAmountIn\r\n    ) external view returns (uint ethAmountOut);\r\n}\r\n\r\ninterface IReceiver {\r\n    function batchStakeWithLido(\r\n        bytes32 batchId\r\n    ) external payable returns (uint256);\r\n}\r\n\r\n// Custom errors\r\nerror DepositsPaused();\r\nerror EmergencyShutdown();\r\nerror ZeroAmount();\r\nerror MinimumDepositNotMet();\r\nerror LargeDepositNotTimelocked();\r\nerror NoSharesMinted();\r\nerror USDCApprovalFailed();\r\nerror NoETHReceived();\r\nerror SwapContractNotSet();\r\nerror AmountTooSmall();\r\nerror BatchAlreadyProcessed();\r\nerror DepositAlreadyQueued();\r\n\r\ncontract DepositFacet is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n    using SafeMath for uint256;\r\n    using Math for uint256;\r\n\r\n    // Storage constants\r\n    uint256 private constant MAX_DEPOSIT_PER_USER = 4999 * 1e6;\r\n    uint256 private constant MIN_DEPOSIT_AMOUNT = 100 * 1e6; \r\n    uint256 private constant STAKED_PORTION = 40; \r\n    uint256 private constant LOCK_PERIOD = 30 days;\r\n    uint256 private constant DEPOSIT_TIMELOCK = 1 hours;\r\n\r\n    // Events\r\n    event Deposit(\r\n        address indexed sender,\r\n        address indexed owner,\r\n        uint256 assets,\r\n        uint256 shares\r\n    );\r\n    \r\n    event StakeInitiated(\r\n        address indexed user,\r\n        uint256 amount,\r\n        uint256 unlockTime\r\n    );\r\n    \r\n    event SwapInitiated(\r\n        address indexed user,\r\n        uint256 stakedAmount,\r\n        uint256 unlockTime\r\n    );\r\n    \r\n    event WstETHBalanceUpdated(\r\n        address indexed user,\r\n        uint256 stakedUSDC,\r\n        uint256 wstETHReceived\r\n    );\r\n\r\n    function deposit(\r\n        uint256 assets,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256) {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        \r\n        // Validations\r\n        if (assets == 0) revert ZeroAmount();\r\n        if (ds.depositsPaused) revert DepositsPaused();\r\n        if (assets < MIN_DEPOSIT_AMOUNT) revert MinimumDepositNotMet();\r\n        if (ds.emergencyShutdown) revert EmergencyShutdown();\r\n        \r\n        // Calculate shares\r\n        uint256 shares = previewDeposit(assets);\r\n        if (shares == 0) revert NoSharesMinted();\r\n        \r\n        // Check for large deposits that need timelock\r\n        if (assets > ds.totalAssets / 10) {\r\n            if (\r\n                ds.largeDepositUnlockTime[msg.sender] == 0 ||\r\n                block.timestamp < ds.largeDepositUnlockTime[msg.sender]\r\n            ) revert LargeDepositNotTimelocked();\r\n            \r\n            delete ds.largeDepositUnlockTime[msg.sender];\r\n        }\r\n        \r\n        // Register new user if needed\r\n        if (!ds.isExistingUser[receiver]) {\r\n            ds.userAddresses.push(receiver);\r\n            ds.isExistingUser[receiver] = true;\r\n        }\r\n        \r\n        // Calculate staking portion (40%)\r\n        uint256 amountToStake = (assets * STAKED_PORTION) / 100;\r\n        \r\n        // Get expected ETH with 1% slippage tolerance\r\n        uint256 expectedEth = ISwapContract(ds.swapContract).getETHAmountOut(amountToStake);\r\n        uint256 minExpectedEth = (expectedEth * 99) / 100;\r\n        \r\n        // Update state\r\n        ds.userDeposits[receiver] += assets;\r\n        ds.balances[receiver] += shares;\r\n        ds.totalAssets += assets;\r\n        ds.totalShares += shares;\r\n        ds.depositTimestamps[receiver] = block.timestamp;\r\n        \r\n        // Transfer assets from user to vault\r\n        IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransferFrom(msg.sender, address(this), assets);\r\n        \r\n        // Automatically initiate staking for 40%\r\n        if (amountToStake > 0) {\r\n            safeTransferAndSwap(minExpectedEth, receiver, amountToStake);\r\n        }\r\n        \r\n        emit Deposit(msg.sender, receiver, assets, shares);\r\n        emit StakeInitiated(\r\n            receiver,\r\n            amountToStake,\r\n            block.timestamp + LOCK_PERIOD\r\n        );\r\n        \r\n        return shares;\r\n    }\r\n    \r\n    // Helper functions\r\n    function previewDeposit(uint256 assets) public view returns (uint256) {\r\n        if (assets == 0) revert ZeroAmount();\r\n        return convertToShares(assets);\r\n    }\r\n    \r\n    function convertToShares(uint256 assets) public view returns (uint256) {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        \r\n        if (ds.totalAssets == 0 || ds.totalShares == 0) {\r\n            return assets;\r\n        }\r\n        return (assets * ds.totalShares) / ds.totalAssets;\r\n    }\r\n    \r\n    function maxDeposit(address receiver) public view returns (uint256) {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        uint256 deposited = ds.userDeposits[receiver];\r\n        return\r\n            deposited >= MAX_DEPOSIT_PER_USER\r\n                ? 0\r\n                : MAX_DEPOSIT_PER_USER - deposited;\r\n    }\r\n    \r\n    function safeTransferAndSwap(\r\n        uint256 amountOutMin,\r\n        address beneficiary,\r\n        uint256 amountToStake\r\n    ) internal returns (uint256) {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        \r\n        if (ds.swapContract == address(0)) revert SwapContractNotSet();\r\n        if (amountToStake == 0) revert AmountTooSmall();\r\n        \r\n        bytes32 batchId = keccak256(\r\n            abi.encodePacked(block.timestamp, beneficiary, amountToStake)\r\n        );\r\n        \r\n        ds.totalStakedValue += amountToStake;\r\n        ds.stakedPortions[beneficiary] += amountToStake;\r\n        \r\n        // Execute swap for staking\r\n        IUSDC usdc = IUSDC(ds.ASSET_TOKEN_ADDRESS);\r\n        bool success = usdc.approve(ds.swapContract, amountToStake);\r\n        if (!success) revert USDCApprovalFailed();\r\n        \r\n        // Calculate deadline (5 minutes from now)\r\n        uint256 deadline = block.timestamp + 300;\r\n        \r\n        // Transfer USDC to swap contract\r\n        usdc.transferFrom(address(this), ds.swapContract, amountToStake);\r\n        \r\n        // Call swap function\r\n        uint256 ethReceived = ISwapContract(ds.swapContract).swapExactUSDCForETH(\r\n            amountToStake,\r\n            amountOutMin,\r\n            ds.receiverContract,\r\n            deadline\r\n        );\r\n        \r\n        if (ethReceived == 0) revert NoETHReceived();\r\n        \r\n        // Store ETH amount for this user\r\n        ds.pendingEthStakes[beneficiary] = ethReceived;\r\n        \r\n        // Add user to current batch\r\n        ds.stakeBatches[batchId].push(beneficiary);\r\n        \r\n        // Call receiver with batch ID\r\n        uint256 wstETHReceived = IReceiver(ds.receiverContract).batchStakeWithLido{\r\n            value: 0\r\n        }(batchId);\r\n        \r\n        if (ds.processedBatches[batchId]) revert BatchAlreadyProcessed();\r\n        ds.processedBatches[batchId] = true;\r\n        \r\n        // Calculate user's share\r\n        uint256 userShare = wstETHReceived;\r\n        ds.userWstETHBalance[beneficiary] += userShare;\r\n        \r\n        // Create staked deposit record\r\n        ds.userStakedDeposits[beneficiary].push(\r\n            DiamondStorage.StakedDeposit({\r\n                amount: amountToStake,\r\n                timestamp: block.timestamp,\r\n                wstETHAmount: userShare,\r\n                withdrawn: false\r\n            })\r\n        );\r\n        \r\n        // Clear pending stake\r\n        ds.pendingEthStakes[beneficiary] = 0;\r\n        \r\n        emit SwapInitiated(\r\n            beneficiary,\r\n            amountToStake,\r\n            block.timestamp + LOCK_PERIOD\r\n        );\r\n        \r\n        emit WstETHBalanceUpdated(beneficiary, amountToStake, wstETHReceived);\r\n        \r\n        // Reset approval\r\n        usdc.approve(ds.swapContract, 0);\r\n        \r\n        return userShare;\r\n    }\r\n    \r\n    function queueLargeDeposit() external {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        if (ds.largeDepositUnlockTime[msg.sender] != 0) revert DepositAlreadyQueued();\r\n        ds.largeDepositUnlockTime[msg.sender] = block.timestamp + DEPOSIT_TIMELOCK;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary DiamondStorage {\r\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.storage.yield.bull\");\r\n    \r\n    // Define the StakedDeposit struct used by the contract\r\n    struct StakedDeposit {\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n        uint256 wstETHAmount;\r\n        bool withdrawn;\r\n    }\r\n    \r\n    struct VaultState {\r\n        // Main state variables\r\n        address owner;\r\n        uint256 totalAssets;\r\n        uint256 totalShares;\r\n        uint256 totalStakedValue;\r\n        \r\n        // Asset addresses\r\n        address ASSET_TOKEN_ADDRESS;\r\n        address swapContract;\r\n        address lidoWithdrawalAddress;\r\n        address wstETHAddress;\r\n        address receiverContract;\r\n        address feeCollector;\r\n        \r\n        // Status flags\r\n        bool emergencyShutdown;\r\n        bool depositsPaused;\r\n        \r\n        // Timestamp tracking\r\n        uint256 lastUpdateTime;\r\n        uint256 lastDailyUpdate;\r\n        uint256 lastProcessedUserIndex;\r\n        uint256 accumulatedFees;\r\n        \r\n        // User data\r\n        address[] userAddresses;\r\n        \r\n        // Mappings\r\n        mapping(address => uint256) balances;\r\n        mapping(address => uint256) userDeposits;\r\n        mapping(address => uint256) depositTimestamps;\r\n        mapping(address => uint256) stakedPortions;\r\n        mapping(address => uint256) lockedAssets;\r\n        mapping(address => bool) isExistingUser;\r\n        mapping(address => uint256) userWstETHBalance;\r\n        mapping(address => bool) withdrawalInProgress;\r\n        mapping(address => uint256) withdrawalRequestIds;\r\n        mapping(address => uint256) largeDepositUnlockTime;\r\n        mapping(address => uint256) pendingEthStakes;\r\n        \r\n        // Batch processing\r\n        mapping(bytes32 => address[]) stakeBatches;\r\n        mapping(bytes32 => bool) processedBatches;\r\n        mapping(bytes32 => uint256) pendingOperations;\r\n        \r\n        // Staked deposits tracking\r\n        mapping(address => StakedDeposit[]) userStakedDeposits;\r\n    }\r\n    \r\n    function getStorage() internal pure returns (VaultState storage ds) {\r\n        bytes32 position = DIAMOND_STORAGE_POSITION;\r\n        assembly {\r\n            ds.slot := position\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE PUSH28 0xC97C7759516C3FC9D1089483F251D3BB0A952AC497317A704ADD0E7D COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE PUSH28 0xC97C7759516C3FC9D1089483F251D3BB0A952AC497317A704ADD0E7D COINBASE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b20e7bc97c7759516c3fc9d1089483f251d3bb0a952ac497317a704add0e7d4164736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c9819e52b8d01db07ac18154a6cc103a795038d9beb2bf74d25bab0113d7face64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c9819e52b8d01db07ac18154a6cc103a795038d9beb2bf74d25bab0113d7face64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 DUP2 SWAP15 MSTORE 0xB8 0xD0 SAR 0xB0 PUSH27 0xC18154A6CC103A795038D9BEB2BF74D25BAB0113D7FACE64736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c9819e52b8d01db07ac18154a6cc103a795038d9beb2bf74d25bab0113d7face64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 DUP2 SWAP15 MSTORE 0xB8 0xD0 SAR 0xB0 PUSH27 0xC18154A6CC103A795038D9BEB2BF74D25BAB0113D7FACE64736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "657:1315:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9819e52b8d01db07ac18154a6cc103a795038d9beb2bf74d25bab0113d7face64736f6c634300081d0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204e8635fb274a8bc0c465f215e293a9dc845dc3c039f4678a1f285cae9a14f2d964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204e8635fb274a8bc0c465f215e293a9dc845dc3c039f4678a1f285cae9a14f2d964736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP7 CALLDATALOAD EXTSTATICCALL 0x27 BLOBBASEFEE DUP12 0xC0 0xC4 PUSH6 0xF215E293A9DC DUP5 TSTORE 0xC3 0xC0 CODECOPY DELEGATECALL PUSH8 0x8A1F285CAE9A14F2 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "281:31863:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204e8635fb274a8bc0c465f215e293a9dc845dc3c039f4678a1f285cae9a14f2d964736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP7 CALLDATALOAD EXTSTATICCALL 0x27 BLOBBASEFEE DUP12 0xC0 0xC4 PUSH6 0xF215E293A9DC DUP5 TSTORE 0xC3 0xC0 CODECOPY DELEGATECALL PUSH8 0x8A1F285CAE9A14F2 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "281:31863:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"add512(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mul512(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"mulShr(uint256,uint256,uint8)": "infinite",
								"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
								"saturatingAdd(uint256,uint256)": "infinite",
								"saturatingMul(uint256,uint256)": "infinite",
								"saturatingSub(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e8635fb274a8bc0c465f215e293a9dc845dc3c039f4678a1f285cae9a14f2d964736f6c634300081d0033",
									".code": [
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203f1a009fcc7702087d87122afad8bf35f6335eedff824b438081909ac18829ee64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f1a009fcc7702087d87122afad8bf35f6335eedff824b438081909ac18829ee64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH BYTE STOP SWAP16 0xCC PUSH24 0x2087D87122AFAD8BF35F6335EEDFF824B438081909AC188 0x29 RETURNCONTRACT 0x64 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "769:34173:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203f1a009fcc7702087d87122afad8bf35f6335eedff824b438081909ac18829ee64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH BYTE STOP SWAP16 0xCC PUSH24 0x2087D87122AFAD8BF35F6335EEDFF824B438081909AC188 0x29 RETURNCONTRACT 0x64 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "769:34173:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f1a009fcc7702087d87122afad8bf35f6335eedff824b438081909ac18829ee64736f6c634300081d0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205999f4fe35c405cd1f8c04c335f68a89e34ff3577ff93ec9b5e60661287d1e4d64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205999f4fe35c405cd1f8c04c335f68a89e34ff3577ff93ec9b5e60661287d1e4d64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE SWAP10 DELEGATECALL INVALID CALLDATALOAD 0xC4 SDIV 0xCD 0x1F DUP13 DIV 0xC3 CALLDATALOAD 0xF6 DUP11 DUP10 CALLF 0x4FF3 JUMPI PUSH32 0xF93EC9B5E60661287D1E4D64736F6C634300081D003300000000000000000000 ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205999f4fe35c405cd1f8c04c335f68a89e34ff3577ff93ec9b5e60661287d1e4d64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE SWAP10 DELEGATECALL INVALID CALLDATALOAD 0xC4 SDIV 0xCD 0x1F DUP13 DIV 0xC3 CALLDATALOAD 0xF6 DUP11 DUP10 CALLF 0x4FF3 JUMPI PUSH32 0xF93EC9B5E60661287D1E4D64736F6C634300081D003300000000000000000000 ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205999f4fe35c405cd1f8c04c335f68a89e34ff3577ff93ec9b5e60661287d1e4d64736f6c634300081d0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Vault_forge/src/Diamond/DepositFacet.sol": {
				"DepositFacet": {
					"abi": [
						{
							"inputs": [],
							"name": "AmountTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BatchAlreadyProcessed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DepositAlreadyQueued",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DepositsPaused",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmergencyShutdown",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LargeDepositNotTimelocked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MinimumDepositNotMet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoETHReceived",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoSharesMinted",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SwapContractNotSet",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "USDCApprovalFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "StakeInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "SwapInitiated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakedUSDC",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wstETHReceived",
									"type": "uint256"
								}
							],
							"name": "WstETHBalanceUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "convertToShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "maxDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "assets",
									"type": "uint256"
								}
							],
							"name": "previewDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "queueLargeDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1319:8788  contract DepositFacet is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1319:8788  contract DepositFacet is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1319:8788  contract DepositFacet is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x402d267d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6e553f65\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x94dddda1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc6e6f592\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xef8b30f7\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5267:5613  function maxDeposit(address receiver) public view returns (uint256) {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2336:4716  function deposit(... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8489:8785  function queueLargeDeposit() external {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4931:5255  function convertToShares(uint256 assets) public view returns (uint256) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4753:4919  function previewDeposit(uint256 assets) public view returns (uint256) {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5267:5613  function maxDeposit(address receiver) public view returns (uint256) {... */\n    tag_11:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5326:5333  uint256 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5346:5382  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5385:5412  DiamondStorage.getStorage() */\n      tag_31\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5385:5410  DiamondStorage.getStorage */\n      tag_32\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5385:5412  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_31:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5346:5412  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5423:5440  uint256 deposited */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5443:5445  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5443:5458  ds.userDeposits */\n      0x10\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5443:5468  ds.userDeposits[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5459:5467  receiver */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5443:5468  ds.userDeposits[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5423:5468  uint256 deposited = ds.userDeposits[receiver] */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1538:1548  4999 * 1e6 */\n      0x0129f6afc0\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5499:5508  deposited */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5499:5532  deposited >= MAX_DEPOSIT_PER_USER */\n      lt\n      iszero\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5499:5605  deposited >= MAX_DEPOSIT_PER_USER... */\n      tag_33\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5596:5605  deposited */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1538:1548  4999 * 1e6 */\n      0x0129f6afc0\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5573:5605  MAX_DEPOSIT_PER_USER - deposited */\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5499:5605  deposited >= MAX_DEPOSIT_PER_USER... */\n      jump(tag_36)\n    tag_33:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5552:5553  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5499:5605  deposited >= MAX_DEPOSIT_PER_USER... */\n    tag_36:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5479:5605  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5267:5613  function maxDeposit(address receiver) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2336:4716  function deposit(... */\n    tag_17:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2443:2450  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_38\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_39\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_38:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2463:2499  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2502:2529  DiamondStorage.getStorage() */\n      tag_41\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2502:2527  DiamondStorage.getStorage */\n      tag_32\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2502:2529  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_41:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2463:2529  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2588:2589  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2578:2584  assets */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2578:2589  assets == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2574:2610  if (assets == 0) revert ZeroAmount() */\n      tag_42\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2598:2610  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2574:2610  if (assets == 0) revert ZeroAmount() */\n    tag_42:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2625:2627  ds */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2625:2642  ds.depositsPaused */\n      0x09\n      add\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2621:2667  if (ds.depositsPaused) revert DepositsPaused() */\n      iszero\n      tag_43\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2651:2667  DepositsPaused() */\n      mload(0x40)\n      0xdeeb694300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2621:2667  if (ds.depositsPaused) revert DepositsPaused() */\n    tag_43:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1601:1610  100 * 1e6 */\n      0x05f5e100\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2682:2688  assets */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2682:2709  assets < MIN_DEPOSIT_AMOUNT */\n      lt\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2678:2740  if (assets < MIN_DEPOSIT_AMOUNT) revert MinimumDepositNotMet() */\n      iszero\n      tag_44\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2718:2740  MinimumDepositNotMet() */\n      mload(0x40)\n      0x20d01f0600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2678:2740  if (assets < MIN_DEPOSIT_AMOUNT) revert MinimumDepositNotMet() */\n    tag_44:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2755:2757  ds */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2755:2775  ds.emergencyShutdown */\n      0x09\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2751:2803  if (ds.emergencyShutdown) revert EmergencyShutdown() */\n      iszero\n      tag_45\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2784:2803  EmergencyShutdown() */\n      mload(0x40)\n      0xf443ecad00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2751:2803  if (ds.emergencyShutdown) revert EmergencyShutdown() */\n    tag_45:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2853:2867  uint256 shares */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2870:2892  previewDeposit(assets) */\n      tag_46\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2885:2891  assets */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2870:2884  previewDeposit */\n      tag_28\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2870:2892  previewDeposit(assets) */\n      jump\t// in\n    tag_46:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2853:2892  uint256 shares = previewDeposit(assets) */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2917:2918  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2907:2913  shares */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2907:2918  shares == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2903:2943  if (shares == 0) revert NoSharesMinted() */\n      tag_47\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2927:2943  NoSharesMinted() */\n      mload(0x40)\n      0x77f43aca00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2903:2943  if (shares == 0) revert NoSharesMinted() */\n    tag_47:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3050:3052  10 */\n      0x0a\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3033:3035  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3033:3047  ds.totalAssets */\n      0x01\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3033:3052  ds.totalAssets / 10 */\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3024:3030  assets */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3024:3052  assets > ds.totalAssets / 10 */\n      gt\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3020:3344  if (assets > ds.totalAssets / 10) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3132:3133  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3093  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3116  ds.largeDepositUnlockTime */\n      0x18\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3128  ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3117:3127  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3128  ds.largeDepositUnlockTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3133  ds.largeDepositUnlockTime[msg.sender] == 0 */\n      eq\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3209  ds.largeDepositUnlockTime[msg.sender] == 0 ||... */\n      dup1\n      tag_51\n      jumpi\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3172:3174  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3172:3197  ds.largeDepositUnlockTime */\n      0x18\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3172:3209  ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3198:3208  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3172:3209  ds.largeDepositUnlockTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3154:3169  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3154:3209  block.timestamp < ds.largeDepositUnlockTime[msg.sender] */\n      lt\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3091:3209  ds.largeDepositUnlockTime[msg.sender] == 0 ||... */\n    tag_51:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3069:3259  if (... */\n      iszero\n      tag_52\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3232:3259  LargeDepositNotTimelocked() */\n      mload(0x40)\n      0x23e4dc4300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3069:3259  if (... */\n    tag_52:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3295:3297  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3295:3320  ds.largeDepositUnlockTime */\n      0x18\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3295:3332  ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3321:3331  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3295:3332  ds.largeDepositUnlockTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3288:3332  delete ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3020:3344  if (assets > ds.totalAssets / 10) {... */\n    tag_50:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3409:3411  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3409:3426  ds.isExistingUser */\n      0x14\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3409:3436  ds.isExistingUser[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3427:3435  receiver */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3409:3436  ds.isExistingUser[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3404:3545  if (!ds.isExistingUser[receiver]) {... */\n      tag_53\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3453:3455  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3453:3469  ds.userAddresses */\n      0x0e\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3475:3483  receiver */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3453:3484  ds.userAddresses.push(receiver) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3529:3533  true */\n      0x01\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3499:3501  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3499:3516  ds.isExistingUser */\n      0x14\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3499:3526  ds.isExistingUser[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3517:3525  receiver */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3499:3526  ds.isExistingUser[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3499:3533  ds.isExistingUser[receiver] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3404:3545  if (!ds.isExistingUser[receiver]) {... */\n    tag_53:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3609:3630  uint256 amountToStake */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3661:3664  100 */\n      0x64\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1660:1662  40 */\n      0x28\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3634:3640  assets */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3634:3657  assets * STAKED_PORTION */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3633:3664  (assets * STAKED_PORTION) / 100 */\n      tag_57\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_57:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3609:3664  uint256 amountToStake = (assets * STAKED_PORTION) / 100 */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3741:3760  uint256 expectedEth */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3777:3779  ds */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3777:3792  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3763:3809  ISwapContract(ds.swapContract).getETHAmountOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcd192db5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3810:3823  amountToStake */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3763:3824  ISwapContract(ds.swapContract).getETHAmountOut(amountToStake) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3741:3824  uint256 expectedEth = ISwapContract(ds.swapContract).getETHAmountOut(amountToStake) */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3835:3857  uint256 minExpectedEth */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3881:3884  100 */\n      0x64\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3875:3877  99 */\n      0x63\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3861:3872  expectedEth */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3861:3877  expectedEth * 99 */\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3860:3884  (expectedEth * 99) / 100 */\n      tag_64\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_64:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3835:3884  uint256 minExpectedEth = (expectedEth * 99) / 100 */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3959:3965  assets */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3930:3932  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3930:3945  ds.userDeposits */\n      0x10\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3930:3955  ds.userDeposits[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3946:3954  receiver */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3930:3955  ds.userDeposits[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3930:3965  ds.userDeposits[receiver] += assets */\n      dup3\n      dup3\n      sload\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4001:4007  shares */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3976:3978  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3976:3987  ds.balances */\n      0x0f\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3976:3997  ds.balances[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3988:3996  receiver */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3976:3997  ds.balances[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":3976:4007  ds.balances[receiver] += shares */\n      dup3\n      dup3\n      sload\n      tag_67\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_67:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4036:4042  assets */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4018:4020  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4018:4032  ds.totalAssets */\n      0x01\n      add\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4018:4042  ds.totalAssets += assets */\n      dup3\n      dup3\n      sload\n      tag_68\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_68:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4071:4077  shares */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4053:4055  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4053:4067  ds.totalShares */\n      0x02\n      add\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4053:4077  ds.totalShares += shares */\n      dup3\n      dup3\n      sload\n      tag_69\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_69:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4121:4136  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4088:4090  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4088:4108  ds.depositTimestamps */\n      0x11\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4088:4118  ds.depositTimestamps[receiver] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4109:4117  receiver */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4088:4118  ds.depositTimestamps[receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4088:4136  ds.depositTimestamps[receiver] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4204:4286  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransferFrom(msg.sender, address(this), assets) */\n      tag_70\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4252:4262  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4272:4276  this */\n      address\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4279:4285  assets */\n      dup11\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4211:4213  ds */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4211:4233  ds.ASSET_TOKEN_ADDRESS */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4204:4251  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_71\n      swap1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4204:4286  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransferFrom(msg.sender, address(this), assets) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4378:4379  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4362:4375  amountToStake */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4362:4379  amountToStake > 0 */\n      gt\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4358:4468  if (amountToStake > 0) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4396:4456  safeTransferAndSwap(minExpectedEth, receiver, amountToStake) */\n      tag_73\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4416:4430  minExpectedEth */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4432:4440  receiver */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4442:4455  amountToStake */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4396:4415  safeTransferAndSwap */\n      tag_74\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4396:4456  safeTransferAndSwap(minExpectedEth, receiver, amountToStake) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4358:4468  if (amountToStake > 0) {... */\n    tag_72:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4513:4521  receiver */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4493:4538  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4501:4511  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4493:4538  Deposit(msg.sender, receiver, assets, shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4523:4529  assets */\n      dup11\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4531:4537  shares */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4493:4538  Deposit(msg.sender, receiver, assets, shares) */\n      mload(0x40)\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4583:4591  receiver */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4554:4674  StakeInitiated(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xca8f7b7916f133917db8d4b2e3566194ad8a65ad8eda78f72f5b9872c059227b\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4606:4619  amountToStake */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1709:1716  30 days */\n      0x278d00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4634:4649  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4634:4663  block.timestamp + LOCK_PERIOD */\n      tag_77\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_77:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4554:4674  StakeInitiated(... */\n      mload(0x40)\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4702:4708  shares */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4695:4708  return shares */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_79\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_80\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_79:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":2336:4716  function deposit(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8489:8785  function queueLargeDeposit() external {... */\n    tag_20:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8538:8574  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8577:8604  DiamondStorage.getStorage() */\n      tag_82\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8577:8602  DiamondStorage.getStorage */\n      tag_32\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8577:8604  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_82:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8538:8604  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8660:8661  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8619:8621  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8619:8644  ds.largeDepositUnlockTime */\n      0x18\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8619:8656  ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8645:8655  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8619:8656  ds.largeDepositUnlockTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8619:8661  ds.largeDepositUnlockTime[msg.sender] != 0 */\n      eq\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8615:8692  if (ds.largeDepositUnlockTime[msg.sender] != 0) revert DepositAlreadyQueued() */\n      tag_83\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8670:8692  DepositAlreadyQueued() */\n      mload(0x40)\n      0x1297a3a700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8615:8692  if (ds.largeDepositUnlockTime[msg.sender] != 0) revert DepositAlreadyQueued() */\n    tag_83:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1767:1774  1 hours */\n      0x0e10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8743:8758  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8743:8777  block.timestamp + DEPOSIT_TIMELOCK */\n      tag_84\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_84:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8703:8705  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8703:8728  ds.largeDepositUnlockTime */\n      0x18\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8703:8740  ds.largeDepositUnlockTime[msg.sender] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8729:8739  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8703:8740  ds.largeDepositUnlockTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8703:8777  ds.largeDepositUnlockTime[msg.sender] = block.timestamp + DEPOSIT_TIMELOCK */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8527:8785  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8489:8785  function queueLargeDeposit() external {... */\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4931:5255  function convertToShares(uint256 assets) public view returns (uint256) {... */\n    tag_24:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4993:5000  uint256 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5013:5049  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5052:5079  DiamondStorage.getStorage() */\n      tag_86\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5052:5077  DiamondStorage.getStorage */\n      tag_32\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5052:5079  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_86:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5013:5079  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5122:5123  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5104:5106  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5104:5118  ds.totalAssets */\n      0x01\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5104:5123  ds.totalAssets == 0 */\n      eq\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5104:5146  ds.totalAssets == 0 || ds.totalShares == 0 */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5145:5146  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5127:5129  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5127:5141  ds.totalShares */\n      0x02\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5127:5146  ds.totalShares == 0 */\n      eq\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5104:5146  ds.totalAssets == 0 || ds.totalShares == 0 */\n    tag_87:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5100:5188  if (ds.totalAssets == 0 || ds.totalShares == 0) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5170:5176  assets */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5163:5176  return assets */\n      swap2\n      pop\n      pop\n      jump(tag_85)\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5100:5188  if (ds.totalAssets == 0 || ds.totalShares == 0) {... */\n    tag_88:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5233:5235  ds */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5233:5247  ds.totalAssets */\n      0x01\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5215:5217  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5215:5229  ds.totalShares */\n      0x02\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5206:5212  assets */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5206:5229  assets * ds.totalShares */\n      tag_89\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_89:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5205:5247  (assets * ds.totalShares) / ds.totalAssets */\n      tag_90\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_90:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5198:5247  return (assets * ds.totalShares) / ds.totalAssets */\n      swap2\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4931:5255  function convertToShares(uint256 assets) public view returns (uint256) {... */\n    tag_85:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4753:4919  function previewDeposit(uint256 assets) public view returns (uint256) {... */\n    tag_28:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4814:4821  uint256 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4848:4849  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4838:4844  assets */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4838:4849  assets == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4834:4870  if (assets == 0) revert ZeroAmount() */\n      tag_92\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4858:4870  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4834:4870  if (assets == 0) revert ZeroAmount() */\n    tag_92:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4888:4911  convertToShares(assets) */\n      tag_93\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4904:4910  assets */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4888:4903  convertToShares */\n      tag_24\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4888:4911  convertToShares(assets) */\n      jump\t// in\n    tag_93:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4881:4911  return convertToShares(assets) */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":4753:4919  function previewDeposit(uint256 assets) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2118:2312  function getStorage() internal pure returns (VaultState storage ds) {... */\n    tag_32:\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2163:2184  VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2197:2213  bytes32 position */\n      0x00\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":135:174  keccak256(\"diamond.storage.yield.bull\") */\n      0x5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2197:2240  bytes32 position = DIAMOND_STORAGE_POSITION */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2286:2294  position */\n      dup1\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2275:2294  ds.slot := position */\n      swap2\n      pop\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2260:2305  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2118:2312  function getStorage() internal pure returns (VaultState storage ds) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_101\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5625:8477  function safeTransferAndSwap(... */\n    tag_74:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5772:5779  uint256 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5792:5828  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5831:5858  DiamondStorage.getStorage() */\n      tag_105\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5831:5856  DiamondStorage.getStorage */\n      tag_32\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5831:5858  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_105:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5792:5858  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5910:5911  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5883:5912  ds.swapContract == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5883:5885  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5883:5898  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5883:5912  ds.swapContract == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5879:5941  if (ds.swapContract == address(0)) revert SwapContractNotSet() */\n      tag_106\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5921:5941  SwapContractNotSet() */\n      mload(0x40)\n      0x567e930e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5879:5941  if (ds.swapContract == address(0)) revert SwapContractNotSet() */\n    tag_106:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5973:5974  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5956:5969  amountToStake */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5956:5974  amountToStake == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5952:5999  if (amountToStake == 0) revert AmountTooSmall() */\n      tag_107\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5983:5999  AmountTooSmall() */\n      mload(0x40)\n      0xc2f5625a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5952:5999  if (amountToStake == 0) revert AmountTooSmall() */\n    tag_107:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6020:6035  bytes32 batchId */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6079:6094  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6096:6107  beneficiary */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6109:6122  amountToStake */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6062:6123  abi.encodePacked(block.timestamp, beneficiary, amountToStake) */\n      add(0x20, mload(0x40))\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6038:6134  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6020:6134  bytes32 batchId = keccak256(... */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6178:6191  amountToStake */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6155:6157  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6155:6174  ds.totalStakedValue */\n      0x03\n      add\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6155:6191  ds.totalStakedValue += amountToStake */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6236:6249  amountToStake */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6202:6204  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6202:6219  ds.stakedPortions */\n      0x12\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6202:6232  ds.stakedPortions[beneficiary] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6220:6231  beneficiary */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6202:6232  ds.stakedPortions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6202:6249  ds.stakedPortions[beneficiary] += amountToStake */\n      dup3\n      dup3\n      sload\n      tag_111\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_111:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6307:6317  IUSDC usdc */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6326:6328  ds */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6326:6348  ds.ASSET_TOKEN_ADDRESS */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6307:6349  IUSDC usdc = IUSDC(ds.ASSET_TOKEN_ADDRESS) */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6360:6372  bool success */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6375:6379  usdc */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6375:6387  usdc.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6388:6390  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6388:6403  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6405:6418  amountToStake */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6375:6419  usdc.approve(ds.swapContract, amountToStake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap3\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6360:6419  bool success = usdc.approve(ds.swapContract, amountToStake) */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6435:6442  success */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6430:6471  if (!success) revert USDCApprovalFailed() */\n      tag_118\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6451:6471  USDCApprovalFailed() */\n      mload(0x40)\n      0x8a2133b500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6430:6471  if (!success) revert USDCApprovalFailed() */\n    tag_118:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6544:6560  uint256 deadline */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6581:6584  300 */\n      0x012c\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6563:6578  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6563:6584  block.timestamp + 300 */\n      tag_119\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_119:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6544:6584  uint256 deadline = block.timestamp + 300 */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6648:6652  usdc */\n      dup3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6648:6665  usdc.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6674:6678  this */\n      address\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6681:6683  ds */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6681:6696  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6698:6711  amountToStake */\n      dup11\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6648:6712  usdc.transferFrom(address(this), ds.swapContract, amountToStake) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_123:\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6764:6783  uint256 ethReceived */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6800:6802  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6800:6815  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6786:6836  ISwapContract(ds.swapContract).swapExactUSDCForETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x64898d23\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6851:6864  amountToStake */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6879:6891  amountOutMin */\n      dup13\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6906:6908  ds */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6906:6925  ds.receiverContract */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6940:6948  deadline */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6786:6959  ISwapContract(ds.swapContract).swapExactUSDCForETH(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_128:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6764:6959  uint256 ethReceived = ISwapContract(ds.swapContract).swapExactUSDCForETH(... */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6999:7000  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6984:6995  ethReceived */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6984:7000  ethReceived == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6980:7024  if (ethReceived == 0) revert NoETHReceived() */\n      tag_129\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7009:7024  NoETHReceived() */\n      mload(0x40)\n      0xa9ffdc9600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":6980:7024  if (ethReceived == 0) revert NoETHReceived() */\n    tag_129:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7123:7134  ethReceived */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7088:7090  ds */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7088:7107  ds.pendingEthStakes */\n      0x19\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7088:7120  ds.pendingEthStakes[beneficiary] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7108:7119  beneficiary */\n      dup12\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7088:7120  ds.pendingEthStakes[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7088:7134  ds.pendingEthStakes[beneficiary] = ethReceived */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7193:7195  ds */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7193:7208  ds.stakeBatches */\n      0x1a\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7193:7217  ds.stakeBatches[batchId] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7209:7216  batchId */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7193:7217  ds.stakeBatches[batchId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7223:7234  beneficiary */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7193:7235  ds.stakeBatches[batchId].push(beneficiary) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7296:7318  uint256 wstETHReceived */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7331:7333  ds */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7331:7350  ds.receiverContract */\n      0x08\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7321:7370  IReceiver(ds.receiverContract).batchStakeWithLido */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3641bd02\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7392:7393  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7405:7412  batchId */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7321:7413  IReceiver(ds.receiverContract).batchStakeWithLido{... */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_135:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7296:7413  uint256 wstETHReceived = IReceiver(ds.receiverContract).batchStakeWithLido{... */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7438:7440  ds */\n      dup7\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7438:7457  ds.processedBatches */\n      0x1b\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7438:7466  ds.processedBatches[batchId] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7458:7465  batchId */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7438:7466  ds.processedBatches[batchId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7434:7498  if (ds.processedBatches[batchId]) revert BatchAlreadyProcessed() */\n      iszero\n      tag_136\n      jumpi\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7475:7498  BatchAlreadyProcessed() */\n      mload(0x40)\n      0xe2b1f19400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7434:7498  if (ds.processedBatches[batchId]) revert BatchAlreadyProcessed() */\n    tag_136:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7540:7544  true */\n      0x01\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7509:7511  ds */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7509:7528  ds.processedBatches */\n      0x1b\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7509:7537  ds.processedBatches[batchId] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7529:7536  batchId */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7509:7537  ds.processedBatches[batchId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7509:7544  ds.processedBatches[batchId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7600:7617  uint256 userShare */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7620:7634  wstETHReceived */\n      dup2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7600:7634  uint256 userShare = wstETHReceived */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7682:7691  userShare */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7645:7647  ds */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7645:7665  ds.userWstETHBalance */\n      0x15\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7645:7678  ds.userWstETHBalance[beneficiary] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7666:7677  beneficiary */\n      dup14\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7645:7678  ds.userWstETHBalance[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7645:7691  ds.userWstETHBalance[beneficiary] += userShare */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7753:7755  ds */\n      dup8\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7753:7774  ds.userStakedDeposits */\n      0x1d\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7753:7787  ds.userStakedDeposits[beneficiary] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7775:7786  beneficiary */\n      dup13\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7753:7787  ds.userStakedDeposits[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7807:8014  DiamondStorage.StakedDeposit({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7863:7876  amountToStake */\n      dup13\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7807:8014  DiamondStorage.StakedDeposit({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7906:7921  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7807:8014  DiamondStorage.StakedDeposit({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7954:7963  userShare */\n      dup4\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7807:8014  DiamondStorage.StakedDeposit({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7993:7998  false */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7807:8014  DiamondStorage.StakedDeposit({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":7753:8025  ds.userStakedDeposits[beneficiary].push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8113:8114  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8078:8080  ds */\n      dup9\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8078:8097  ds.pendingEthStakes */\n      0x19\n      add\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8078:8110  ds.pendingEthStakes[beneficiary] */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8098:8109  beneficiary */\n      dup14\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8078:8110  ds.pendingEthStakes[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8078:8114  ds.pendingEthStakes[beneficiary] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8168:8179  beneficiary */\n      dup11\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8140:8262  SwapInitiated(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x447dbdbfde1cf015fc6f055a0c7a32d270f68eaf5f9ae394c3d3963a1bbc0a75\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8194:8207  amountToStake */\n      dup12\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":1709:1716  30 days */\n      0x278d00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8222:8237  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8222:8251  block.timestamp + LOCK_PERIOD */\n      tag_139\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_139:\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8140:8262  SwapInitiated(... */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8309:8320  beneficiary */\n      dup11\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8288:8352  WstETHBalanceUpdated(beneficiary, amountToStake, wstETHReceived) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x923a5113d2791c84f9eeefac7ed7e03aaf0525bcc930d31be60bd241a5133dcc\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8322:8335  amountToStake */\n      dup12\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8337:8351  wstETHReceived */\n      dup5\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8288:8352  WstETHBalanceUpdated(beneficiary, amountToStake, wstETHReceived) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8400:8404  usdc */\n      dup6\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8400:8412  usdc.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8413:8415  ds */\n      dup10\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8413:8428  ds.swapContract */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8430:8431  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8400:8432  usdc.approve(ds.swapContract, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_146:\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8460:8469  userShare */\n      dup1\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":8453:8469  return userShare */\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/DepositFacet.sol\":5625:8477  function safeTransferAndSwap(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_151)\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_156:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_158:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_159:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_194\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_158\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_160:\n        /* \"#utility.yul\":641:665   */\n      tag_196\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_159\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_197:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_161:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_199\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_160\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_10:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_202\n      tag_156\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":917:1036   */\n    tag_201:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_203\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_161\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_162:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_163:\n        /* \"#utility.yul\":1346:1370   */\n      tag_206\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_13:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_208\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_163\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_164:\n        /* \"#utility.yul\":1684:1708   */\n      tag_210\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_162\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_211:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_165:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_213\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_164\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2358   */\n    tag_16:\n        /* \"#utility.yul\":1952:1958   */\n      0x00\n        /* \"#utility.yul\":1960:1966   */\n      0x00\n        /* \"#utility.yul\":2009:2011   */\n      0x40\n        /* \"#utility.yul\":1997:2006   */\n      dup4\n        /* \"#utility.yul\":1988:1995   */\n      dup6\n        /* \"#utility.yul\":1984:2007   */\n      sub\n        /* \"#utility.yul\":1980:2012   */\n      slt\n        /* \"#utility.yul\":1977:2096   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2015:2094   */\n      tag_216\n      tag_156\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1977:2096   */\n    tag_215:\n        /* \"#utility.yul\":2135:2136   */\n      0x00\n        /* \"#utility.yul\":2160:2213   */\n      tag_217\n        /* \"#utility.yul\":2205:2212   */\n      dup6\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup7\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_165\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2150:2213   */\n      swap3\n      pop\n        /* \"#utility.yul\":2106:2223   */\n      pop\n        /* \"#utility.yul\":2262:2264   */\n      0x20\n        /* \"#utility.yul\":2288:2341   */\n      tag_218\n        /* \"#utility.yul\":2333:2340   */\n      dup6\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup7\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_161\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2233:2351   */\n      pop\n        /* \"#utility.yul\":1884:2358   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2693   */\n    tag_23:\n        /* \"#utility.yul\":2423:2429   */\n      0x00\n        /* \"#utility.yul\":2472:2474   */\n      0x20\n        /* \"#utility.yul\":2460:2469   */\n      dup3\n        /* \"#utility.yul\":2451:2458   */\n      dup5\n        /* \"#utility.yul\":2447:2470   */\n      sub\n        /* \"#utility.yul\":2443:2475   */\n      slt\n        /* \"#utility.yul\":2440:2559   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2478:2557   */\n      tag_221\n      tag_156\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2440:2559   */\n    tag_220:\n        /* \"#utility.yul\":2598:2599   */\n      0x00\n        /* \"#utility.yul\":2623:2676   */\n      tag_222\n        /* \"#utility.yul\":2668:2675   */\n      dup5\n        /* \"#utility.yul\":2659:2665   */\n      dup3\n        /* \"#utility.yul\":2648:2657   */\n      dup6\n        /* \"#utility.yul\":2644:2666   */\n      add\n        /* \"#utility.yul\":2623:2676   */\n      tag_165\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2613:2676   */\n      swap2\n      pop\n        /* \"#utility.yul\":2569:2686   */\n      pop\n        /* \"#utility.yul\":2364:2693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2699:2879   */\n    tag_166:\n        /* \"#utility.yul\":2747:2824   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2744:2745   */\n      0x00\n        /* \"#utility.yul\":2737:2825   */\n      mstore\n        /* \"#utility.yul\":2844:2848   */\n      0x11\n        /* \"#utility.yul\":2841:2842   */\n      0x04\n        /* \"#utility.yul\":2834:2849   */\n      mstore\n        /* \"#utility.yul\":2868:2872   */\n      0x24\n        /* \"#utility.yul\":2865:2866   */\n      0x00\n        /* \"#utility.yul\":2858:2873   */\n      revert\n        /* \"#utility.yul\":2885:3079   */\n    tag_35:\n        /* \"#utility.yul\":2925:2929   */\n      0x00\n        /* \"#utility.yul\":2945:2965   */\n      tag_225\n        /* \"#utility.yul\":2963:2964   */\n      dup3\n        /* \"#utility.yul\":2945:2965   */\n      tag_162\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2940:2965   */\n      swap2\n      pop\n        /* \"#utility.yul\":2979:2999   */\n      tag_226\n        /* \"#utility.yul\":2997:2998   */\n      dup4\n        /* \"#utility.yul\":2979:2999   */\n      tag_162\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2974:2999   */\n      swap3\n      pop\n        /* \"#utility.yul\":3023:3024   */\n      dup3\n        /* \"#utility.yul\":3020:3021   */\n      dup3\n        /* \"#utility.yul\":3016:3025   */\n      sub\n        /* \"#utility.yul\":3008:3025   */\n      swap1\n      pop\n        /* \"#utility.yul\":3047:3048   */\n      dup2\n        /* \"#utility.yul\":3041:3045   */\n      dup2\n        /* \"#utility.yul\":3038:3049   */\n      gt\n        /* \"#utility.yul\":3035:3072   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3052:3070   */\n      tag_228\n      tag_166\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3035:3072   */\n    tag_227:\n        /* \"#utility.yul\":2885:3079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3085:3265   */\n    tag_167:\n        /* \"#utility.yul\":3133:3210   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3130:3131   */\n      0x00\n        /* \"#utility.yul\":3123:3211   */\n      mstore\n        /* \"#utility.yul\":3230:3234   */\n      0x12\n        /* \"#utility.yul\":3227:3228   */\n      0x04\n        /* \"#utility.yul\":3220:3235   */\n      mstore\n        /* \"#utility.yul\":3254:3258   */\n      0x24\n        /* \"#utility.yul\":3251:3252   */\n      0x00\n        /* \"#utility.yul\":3244:3259   */\n      revert\n        /* \"#utility.yul\":3271:3456   */\n    tag_49:\n        /* \"#utility.yul\":3311:3312   */\n      0x00\n        /* \"#utility.yul\":3328:3348   */\n      tag_231\n        /* \"#utility.yul\":3346:3347   */\n      dup3\n        /* \"#utility.yul\":3328:3348   */\n      tag_162\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3323:3348   */\n      swap2\n      pop\n        /* \"#utility.yul\":3362:3382   */\n      tag_232\n        /* \"#utility.yul\":3380:3381   */\n      dup4\n        /* \"#utility.yul\":3362:3382   */\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3357:3382   */\n      swap3\n      pop\n        /* \"#utility.yul\":3401:3402   */\n      dup3\n        /* \"#utility.yul\":3391:3426   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":3406:3424   */\n      tag_234\n      tag_167\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3391:3426   */\n    tag_233:\n        /* \"#utility.yul\":3448:3449   */\n      dup3\n        /* \"#utility.yul\":3445:3446   */\n      dup3\n        /* \"#utility.yul\":3441:3450   */\n      div\n        /* \"#utility.yul\":3436:3450   */\n      swap1\n      pop\n        /* \"#utility.yul\":3271:3456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3462:3872   */\n    tag_56:\n        /* \"#utility.yul\":3502:3509   */\n      0x00\n        /* \"#utility.yul\":3525:3545   */\n      tag_236\n        /* \"#utility.yul\":3543:3544   */\n      dup3\n        /* \"#utility.yul\":3525:3545   */\n      tag_162\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3520:3545   */\n      swap2\n      pop\n        /* \"#utility.yul\":3559:3579   */\n      tag_237\n        /* \"#utility.yul\":3577:3578   */\n      dup4\n        /* \"#utility.yul\":3559:3579   */\n      tag_162\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3554:3579   */\n      swap3\n      pop\n        /* \"#utility.yul\":3614:3615   */\n      dup3\n        /* \"#utility.yul\":3611:3612   */\n      dup3\n        /* \"#utility.yul\":3607:3616   */\n      mul\n        /* \"#utility.yul\":3636:3666   */\n      tag_238\n        /* \"#utility.yul\":3654:3665   */\n      dup2\n        /* \"#utility.yul\":3636:3666   */\n      tag_162\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3625:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3815:3816   */\n      dup3\n        /* \"#utility.yul\":3806:3813   */\n      dup3\n        /* \"#utility.yul\":3802:3817   */\n      div\n        /* \"#utility.yul\":3799:3800   */\n      dup5\n        /* \"#utility.yul\":3796:3818   */\n      eq\n        /* \"#utility.yul\":3776:3777   */\n      dup4\n        /* \"#utility.yul\":3769:3778   */\n      iszero\n        /* \"#utility.yul\":3749:3832   */\n      or\n        /* \"#utility.yul\":3726:3865   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":3845:3863   */\n      tag_240\n      tag_166\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3726:3865   */\n    tag_239:\n        /* \"#utility.yul\":3510:3872   */\n      pop\n        /* \"#utility.yul\":3462:3872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:4021   */\n    tag_168:\n        /* \"#utility.yul\":3935:3940   */\n      0x00\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3960:3973   */\n      mload\n        /* \"#utility.yul\":3951:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3982:4015   */\n      tag_242\n        /* \"#utility.yul\":4009:4014   */\n      dup2\n        /* \"#utility.yul\":3982:4015   */\n      tag_164\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3878:4021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4027:4378   */\n    tag_62:\n        /* \"#utility.yul\":4097:4103   */\n      0x00\n        /* \"#utility.yul\":4146:4148   */\n      0x20\n        /* \"#utility.yul\":4134:4143   */\n      dup3\n        /* \"#utility.yul\":4125:4132   */\n      dup5\n        /* \"#utility.yul\":4121:4144   */\n      sub\n        /* \"#utility.yul\":4117:4149   */\n      slt\n        /* \"#utility.yul\":4114:4233   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":4152:4231   */\n      tag_245\n      tag_156\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4114:4233   */\n    tag_244:\n        /* \"#utility.yul\":4272:4273   */\n      0x00\n        /* \"#utility.yul\":4297:4361   */\n      tag_246\n        /* \"#utility.yul\":4353:4360   */\n      dup5\n        /* \"#utility.yul\":4344:4350   */\n      dup3\n        /* \"#utility.yul\":4333:4342   */\n      dup6\n        /* \"#utility.yul\":4329:4351   */\n      add\n        /* \"#utility.yul\":4297:4361   */\n      tag_168\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4287:4361   */\n      swap2\n      pop\n        /* \"#utility.yul\":4243:4371   */\n      pop\n        /* \"#utility.yul\":4027:4378   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4384:4575   */\n    tag_66:\n        /* \"#utility.yul\":4424:4427   */\n      0x00\n        /* \"#utility.yul\":4443:4463   */\n      tag_248\n        /* \"#utility.yul\":4461:4462   */\n      dup3\n        /* \"#utility.yul\":4443:4463   */\n      tag_162\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4438:4463   */\n      swap2\n      pop\n        /* \"#utility.yul\":4477:4497   */\n      tag_249\n        /* \"#utility.yul\":4495:4496   */\n      dup4\n        /* \"#utility.yul\":4477:4497   */\n      tag_162\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4472:4497   */\n      swap3\n      pop\n        /* \"#utility.yul\":4520:4521   */\n      dup3\n        /* \"#utility.yul\":4517:4518   */\n      dup3\n        /* \"#utility.yul\":4513:4522   */\n      add\n        /* \"#utility.yul\":4506:4522   */\n      swap1\n      pop\n        /* \"#utility.yul\":4541:4544   */\n      dup1\n        /* \"#utility.yul\":4538:4539   */\n      dup3\n        /* \"#utility.yul\":4535:4545   */\n      gt\n        /* \"#utility.yul\":4532:4568   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":4548:4566   */\n      tag_251\n      tag_166\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4532:4568   */\n    tag_250:\n        /* \"#utility.yul\":4384:4575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4581:4913   */\n    tag_76:\n        /* \"#utility.yul\":4702:4706   */\n      0x00\n        /* \"#utility.yul\":4740:4742   */\n      0x40\n        /* \"#utility.yul\":4729:4738   */\n      dup3\n        /* \"#utility.yul\":4725:4743   */\n      add\n        /* \"#utility.yul\":4717:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4753:4824   */\n      tag_253\n        /* \"#utility.yul\":4821:4822   */\n      0x00\n        /* \"#utility.yul\":4810:4819   */\n      dup4\n        /* \"#utility.yul\":4806:4823   */\n      add\n        /* \"#utility.yul\":4797:4803   */\n      dup6\n        /* \"#utility.yul\":4753:4824   */\n      tag_163\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4834:4906   */\n      tag_254\n        /* \"#utility.yul\":4902:4904   */\n      0x20\n        /* \"#utility.yul\":4891:4900   */\n      dup4\n        /* \"#utility.yul\":4887:4905   */\n      add\n        /* \"#utility.yul\":4878:4884   */\n      dup5\n        /* \"#utility.yul\":4834:4906   */\n      tag_163\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4581:4913   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4919:5088   */\n    tag_169:\n        /* \"#utility.yul\":5003:5014   */\n      0x00\n        /* \"#utility.yul\":5037:5043   */\n      dup3\n        /* \"#utility.yul\":5032:5035   */\n      dup3\n        /* \"#utility.yul\":5025:5044   */\n      mstore\n        /* \"#utility.yul\":5077:5081   */\n      0x20\n        /* \"#utility.yul\":5072:5075   */\n      dup3\n        /* \"#utility.yul\":5068:5082   */\n      add\n        /* \"#utility.yul\":5053:5082   */\n      swap1\n      pop\n        /* \"#utility.yul\":4919:5088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5094:5275   */\n    tag_170:\n        /* \"#utility.yul\":5234:5267   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5222:5228   */\n      dup3\n        /* \"#utility.yul\":5218:5232   */\n      add\n        /* \"#utility.yul\":5211:5268   */\n      mstore\n        /* \"#utility.yul\":5094:5275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5281:5647   */\n    tag_171:\n        /* \"#utility.yul\":5423:5426   */\n      0x00\n        /* \"#utility.yul\":5444:5511   */\n      tag_258\n        /* \"#utility.yul\":5508:5510   */\n      0x1f\n        /* \"#utility.yul\":5503:5506   */\n      dup4\n        /* \"#utility.yul\":5444:5511   */\n      tag_169\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5437:5511   */\n      swap2\n      pop\n        /* \"#utility.yul\":5520:5613   */\n      tag_259\n        /* \"#utility.yul\":5609:5612   */\n      dup3\n        /* \"#utility.yul\":5520:5613   */\n      tag_170\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5633:5636   */\n      dup3\n        /* \"#utility.yul\":5629:5641   */\n      add\n        /* \"#utility.yul\":5622:5641   */\n      swap1\n      pop\n        /* \"#utility.yul\":5281:5647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5653:6072   */\n    tag_98:\n        /* \"#utility.yul\":5819:5823   */\n      0x00\n        /* \"#utility.yul\":5857:5859   */\n      0x20\n        /* \"#utility.yul\":5846:5855   */\n      dup3\n        /* \"#utility.yul\":5842:5860   */\n      add\n        /* \"#utility.yul\":5834:5860   */\n      swap1\n      pop\n        /* \"#utility.yul\":5906:5915   */\n      dup2\n        /* \"#utility.yul\":5900:5904   */\n      dup2\n        /* \"#utility.yul\":5896:5916   */\n      sub\n        /* \"#utility.yul\":5892:5893   */\n      0x00\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5877:5894   */\n      add\n        /* \"#utility.yul\":5870:5917   */\n      mstore\n        /* \"#utility.yul\":5934:6065   */\n      tag_261\n        /* \"#utility.yul\":6060:6064   */\n      dup2\n        /* \"#utility.yul\":5934:6065   */\n      tag_171\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5926:6065   */\n      swap1\n      pop\n        /* \"#utility.yul\":5653:6072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6078:6196   */\n    tag_172:\n        /* \"#utility.yul\":6165:6189   */\n      tag_263\n        /* \"#utility.yul\":6183:6188   */\n      dup2\n        /* \"#utility.yul\":6165:6189   */\n      tag_159\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6160:6163   */\n      dup3\n        /* \"#utility.yul\":6153:6190   */\n      mstore\n        /* \"#utility.yul\":6078:6196   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6644   */\n    tag_102:\n        /* \"#utility.yul\":6351:6355   */\n      0x00\n        /* \"#utility.yul\":6389:6391   */\n      0x60\n        /* \"#utility.yul\":6378:6387   */\n      dup3\n        /* \"#utility.yul\":6374:6392   */\n      add\n        /* \"#utility.yul\":6366:6392   */\n      swap1\n      pop\n        /* \"#utility.yul\":6402:6473   */\n      tag_265\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6459:6468   */\n      dup4\n        /* \"#utility.yul\":6455:6472   */\n      add\n        /* \"#utility.yul\":6446:6452   */\n      dup7\n        /* \"#utility.yul\":6402:6473   */\n      tag_172\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6483:6555   */\n      tag_266\n        /* \"#utility.yul\":6551:6553   */\n      0x20\n        /* \"#utility.yul\":6540:6549   */\n      dup4\n        /* \"#utility.yul\":6536:6554   */\n      add\n        /* \"#utility.yul\":6527:6533   */\n      dup6\n        /* \"#utility.yul\":6483:6555   */\n      tag_172\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":6565:6637   */\n      tag_267\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6622:6631   */\n      dup4\n        /* \"#utility.yul\":6618:6636   */\n      add\n        /* \"#utility.yul\":6609:6615   */\n      dup5\n        /* \"#utility.yul\":6565:6637   */\n      tag_163\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6202:6644   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6650:6729   */\n    tag_173:\n        /* \"#utility.yul\":6689:6696   */\n      0x00\n        /* \"#utility.yul\":6718:6723   */\n      dup2\n        /* \"#utility.yul\":6707:6723   */\n      swap1\n      pop\n        /* \"#utility.yul\":6650:6729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6735:6892   */\n    tag_174:\n        /* \"#utility.yul\":6840:6885   */\n      tag_270\n        /* \"#utility.yul\":6860:6884   */\n      tag_271\n        /* \"#utility.yul\":6878:6883   */\n      dup3\n        /* \"#utility.yul\":6860:6884   */\n      tag_162\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6840:6885   */\n      tag_173\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":6835:6838   */\n      dup3\n        /* \"#utility.yul\":6828:6886   */\n      mstore\n        /* \"#utility.yul\":6735:6892   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6898:6992   */\n    tag_175:\n        /* \"#utility.yul\":6931:6939   */\n      0x00\n        /* \"#utility.yul\":6979:6984   */\n      dup2\n        /* \"#utility.yul\":6975:6977   */\n      0x60\n        /* \"#utility.yul\":6971:6985   */\n      shl\n        /* \"#utility.yul\":6950:6985   */\n      swap1\n      pop\n        /* \"#utility.yul\":6898:6992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6998:7092   */\n    tag_176:\n        /* \"#utility.yul\":7037:7044   */\n      0x00\n        /* \"#utility.yul\":7066:7086   */\n      tag_274\n        /* \"#utility.yul\":7080:7085   */\n      dup3\n        /* \"#utility.yul\":7066:7086   */\n      tag_175\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7055:7086   */\n      swap1\n      pop\n        /* \"#utility.yul\":6998:7092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7098:7198   */\n    tag_177:\n        /* \"#utility.yul\":7137:7144   */\n      0x00\n        /* \"#utility.yul\":7166:7192   */\n      tag_276\n        /* \"#utility.yul\":7186:7191   */\n      dup3\n        /* \"#utility.yul\":7166:7192   */\n      tag_176\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":7155:7192   */\n      swap1\n      pop\n        /* \"#utility.yul\":7098:7198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7204:7361   */\n    tag_178:\n        /* \"#utility.yul\":7309:7354   */\n      tag_278\n        /* \"#utility.yul\":7329:7353   */\n      tag_279\n        /* \"#utility.yul\":7347:7352   */\n      dup3\n        /* \"#utility.yul\":7329:7353   */\n      tag_159\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7309:7354   */\n      tag_177\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7304:7307   */\n      dup3\n        /* \"#utility.yul\":7297:7355   */\n      mstore\n        /* \"#utility.yul\":7204:7361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7367:7905   */\n    tag_109:\n        /* \"#utility.yul\":7535:7538   */\n      0x00\n        /* \"#utility.yul\":7550:7625   */\n      tag_281\n        /* \"#utility.yul\":7621:7624   */\n      dup3\n        /* \"#utility.yul\":7612:7618   */\n      dup7\n        /* \"#utility.yul\":7550:7625   */\n      tag_174\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":7650:7652   */\n      0x20\n        /* \"#utility.yul\":7645:7648   */\n      dup3\n        /* \"#utility.yul\":7641:7653   */\n      add\n        /* \"#utility.yul\":7634:7653   */\n      swap2\n      pop\n        /* \"#utility.yul\":7663:7738   */\n      tag_282\n        /* \"#utility.yul\":7734:7737   */\n      dup3\n        /* \"#utility.yul\":7725:7731   */\n      dup6\n        /* \"#utility.yul\":7663:7738   */\n      tag_178\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7763:7765   */\n      0x14\n        /* \"#utility.yul\":7758:7761   */\n      dup3\n        /* \"#utility.yul\":7754:7766   */\n      add\n        /* \"#utility.yul\":7747:7766   */\n      swap2\n      pop\n        /* \"#utility.yul\":7776:7851   */\n      tag_283\n        /* \"#utility.yul\":7847:7850   */\n      dup3\n        /* \"#utility.yul\":7838:7844   */\n      dup5\n        /* \"#utility.yul\":7776:7851   */\n      tag_174\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7876:7878   */\n      0x20\n        /* \"#utility.yul\":7871:7874   */\n      dup3\n        /* \"#utility.yul\":7867:7879   */\n      add\n        /* \"#utility.yul\":7860:7879   */\n      swap2\n      pop\n        /* \"#utility.yul\":7896:7899   */\n      dup2\n        /* \"#utility.yul\":7889:7899   */\n      swap1\n      pop\n        /* \"#utility.yul\":7367:7905   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7911:8243   */\n    tag_113:\n        /* \"#utility.yul\":8032:8036   */\n      0x00\n        /* \"#utility.yul\":8070:8072   */\n      0x40\n        /* \"#utility.yul\":8059:8068   */\n      dup3\n        /* \"#utility.yul\":8055:8073   */\n      add\n        /* \"#utility.yul\":8047:8073   */\n      swap1\n      pop\n        /* \"#utility.yul\":8083:8154   */\n      tag_285\n        /* \"#utility.yul\":8151:8152   */\n      0x00\n        /* \"#utility.yul\":8140:8149   */\n      dup4\n        /* \"#utility.yul\":8136:8153   */\n      add\n        /* \"#utility.yul\":8127:8133   */\n      dup6\n        /* \"#utility.yul\":8083:8154   */\n      tag_172\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":8164:8236   */\n      tag_286\n        /* \"#utility.yul\":8232:8234   */\n      0x20\n        /* \"#utility.yul\":8221:8230   */\n      dup4\n        /* \"#utility.yul\":8217:8235   */\n      add\n        /* \"#utility.yul\":8208:8214   */\n      dup5\n        /* \"#utility.yul\":8164:8236   */\n      tag_163\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7911:8243   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8249:8339   */\n    tag_179:\n        /* \"#utility.yul\":8283:8290   */\n      0x00\n        /* \"#utility.yul\":8326:8331   */\n      dup2\n        /* \"#utility.yul\":8319:8332   */\n      iszero\n        /* \"#utility.yul\":8312:8333   */\n      iszero\n        /* \"#utility.yul\":8301:8333   */\n      swap1\n      pop\n        /* \"#utility.yul\":8249:8339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8345:8461   */\n    tag_180:\n        /* \"#utility.yul\":8415:8436   */\n      tag_289\n        /* \"#utility.yul\":8430:8435   */\n      dup2\n        /* \"#utility.yul\":8415:8436   */\n      tag_179\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":8408:8413   */\n      dup2\n        /* \"#utility.yul\":8405:8437   */\n      eq\n        /* \"#utility.yul\":8395:8455   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":8451:8452   */\n      0x00\n        /* \"#utility.yul\":8448:8449   */\n      0x00\n        /* \"#utility.yul\":8441:8453   */\n      revert\n        /* \"#utility.yul\":8395:8455   */\n    tag_290:\n        /* \"#utility.yul\":8345:8461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8467:8604   */\n    tag_181:\n        /* \"#utility.yul\":8521:8526   */\n      0x00\n        /* \"#utility.yul\":8552:8558   */\n      dup2\n        /* \"#utility.yul\":8546:8559   */\n      mload\n        /* \"#utility.yul\":8537:8559   */\n      swap1\n      pop\n        /* \"#utility.yul\":8568:8598   */\n      tag_292\n        /* \"#utility.yul\":8592:8597   */\n      dup2\n        /* \"#utility.yul\":8568:8598   */\n      tag_180\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8467:8604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8610:8955   */\n    tag_117:\n        /* \"#utility.yul\":8677:8683   */\n      0x00\n        /* \"#utility.yul\":8726:8728   */\n      0x20\n        /* \"#utility.yul\":8714:8723   */\n      dup3\n        /* \"#utility.yul\":8705:8712   */\n      dup5\n        /* \"#utility.yul\":8701:8724   */\n      sub\n        /* \"#utility.yul\":8697:8729   */\n      slt\n        /* \"#utility.yul\":8694:8813   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":8732:8811   */\n      tag_295\n      tag_156\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8694:8813   */\n    tag_294:\n        /* \"#utility.yul\":8852:8853   */\n      0x00\n        /* \"#utility.yul\":8877:8938   */\n      tag_296\n        /* \"#utility.yul\":8930:8937   */\n      dup5\n        /* \"#utility.yul\":8921:8927   */\n      dup3\n        /* \"#utility.yul\":8910:8919   */\n      dup6\n        /* \"#utility.yul\":8906:8928   */\n      add\n        /* \"#utility.yul\":8877:8938   */\n      tag_181\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":8867:8938   */\n      swap2\n      pop\n        /* \"#utility.yul\":8823:8948   */\n      pop\n        /* \"#utility.yul\":8610:8955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8961:9514   */\n    tag_125:\n        /* \"#utility.yul\":9138:9142   */\n      0x00\n        /* \"#utility.yul\":9176:9179   */\n      0x80\n        /* \"#utility.yul\":9165:9174   */\n      dup3\n        /* \"#utility.yul\":9161:9180   */\n      add\n        /* \"#utility.yul\":9153:9180   */\n      swap1\n      pop\n        /* \"#utility.yul\":9190:9261   */\n      tag_298\n        /* \"#utility.yul\":9258:9259   */\n      0x00\n        /* \"#utility.yul\":9247:9256   */\n      dup4\n        /* \"#utility.yul\":9243:9260   */\n      add\n        /* \"#utility.yul\":9234:9240   */\n      dup8\n        /* \"#utility.yul\":9190:9261   */\n      tag_163\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":9271:9343   */\n      tag_299\n        /* \"#utility.yul\":9339:9341   */\n      0x20\n        /* \"#utility.yul\":9328:9337   */\n      dup4\n        /* \"#utility.yul\":9324:9342   */\n      add\n        /* \"#utility.yul\":9315:9321   */\n      dup7\n        /* \"#utility.yul\":9271:9343   */\n      tag_163\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9353:9425   */\n      tag_300\n        /* \"#utility.yul\":9421:9423   */\n      0x40\n        /* \"#utility.yul\":9410:9419   */\n      dup4\n        /* \"#utility.yul\":9406:9424   */\n      add\n        /* \"#utility.yul\":9397:9403   */\n      dup6\n        /* \"#utility.yul\":9353:9425   */\n      tag_172\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":9435:9507   */\n      tag_301\n        /* \"#utility.yul\":9503:9505   */\n      0x60\n        /* \"#utility.yul\":9492:9501   */\n      dup4\n        /* \"#utility.yul\":9488:9506   */\n      add\n        /* \"#utility.yul\":9479:9485   */\n      dup5\n        /* \"#utility.yul\":9435:9507   */\n      tag_163\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8961:9514   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9520:9597   */\n    tag_182:\n        /* \"#utility.yul\":9557:9564   */\n      0x00\n        /* \"#utility.yul\":9586:9591   */\n      dup2\n        /* \"#utility.yul\":9575:9591   */\n      swap1\n      pop\n        /* \"#utility.yul\":9520:9597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9603:9721   */\n    tag_183:\n        /* \"#utility.yul\":9690:9714   */\n      tag_304\n        /* \"#utility.yul\":9708:9713   */\n      dup2\n        /* \"#utility.yul\":9690:9714   */\n      tag_182\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":9685:9688   */\n      dup3\n        /* \"#utility.yul\":9678:9715   */\n      mstore\n        /* \"#utility.yul\":9603:9721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9727:9949   */\n    tag_132:\n        /* \"#utility.yul\":9820:9824   */\n      0x00\n        /* \"#utility.yul\":9858:9860   */\n      0x20\n        /* \"#utility.yul\":9847:9856   */\n      dup3\n        /* \"#utility.yul\":9843:9861   */\n      add\n        /* \"#utility.yul\":9835:9861   */\n      swap1\n      pop\n        /* \"#utility.yul\":9871:9942   */\n      tag_306\n        /* \"#utility.yul\":9939:9940   */\n      0x00\n        /* \"#utility.yul\":9928:9937   */\n      dup4\n        /* \"#utility.yul\":9924:9941   */\n      add\n        /* \"#utility.yul\":9915:9921   */\n      dup5\n        /* \"#utility.yul\":9871:9942   */\n      tag_183\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":9727:9949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9955:10040   */\n    tag_184:\n        /* \"#utility.yul\":10000:10007   */\n      0x00\n        /* \"#utility.yul\":10029:10034   */\n      dup2\n        /* \"#utility.yul\":10018:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9955:10040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10046:10106   */\n    tag_185:\n        /* \"#utility.yul\":10074:10077   */\n      0x00\n        /* \"#utility.yul\":10095:10100   */\n      dup2\n        /* \"#utility.yul\":10088:10100   */\n      swap1\n      pop\n        /* \"#utility.yul\":10046:10106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10112:10270   */\n    tag_186:\n        /* \"#utility.yul\":10170:10179   */\n      0x00\n        /* \"#utility.yul\":10203:10264   */\n      tag_310\n        /* \"#utility.yul\":10221:10263   */\n      tag_311\n        /* \"#utility.yul\":10230:10262   */\n      tag_312\n        /* \"#utility.yul\":10256:10261   */\n      dup5\n        /* \"#utility.yul\":10230:10262   */\n      tag_184\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":10221:10263   */\n      tag_185\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":10203:10264   */\n      tag_162\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":10190:10264   */\n      swap1\n      pop\n        /* \"#utility.yul\":10112:10270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10276:10423   */\n    tag_187:\n        /* \"#utility.yul\":10371:10416   */\n      tag_314\n        /* \"#utility.yul\":10410:10415   */\n      dup2\n        /* \"#utility.yul\":10371:10416   */\n      tag_186\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":10366:10369   */\n      dup3\n        /* \"#utility.yul\":10359:10417   */\n      mstore\n        /* \"#utility.yul\":10276:10423   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10429:10777   */\n    tag_143:\n        /* \"#utility.yul\":10558:10562   */\n      0x00\n        /* \"#utility.yul\":10596:10598   */\n      0x40\n        /* \"#utility.yul\":10585:10594   */\n      dup3\n        /* \"#utility.yul\":10581:10599   */\n      add\n        /* \"#utility.yul\":10573:10599   */\n      swap1\n      pop\n        /* \"#utility.yul\":10609:10680   */\n      tag_316\n        /* \"#utility.yul\":10677:10678   */\n      0x00\n        /* \"#utility.yul\":10666:10675   */\n      dup4\n        /* \"#utility.yul\":10662:10679   */\n      add\n        /* \"#utility.yul\":10653:10659   */\n      dup6\n        /* \"#utility.yul\":10609:10680   */\n      tag_172\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":10690:10770   */\n      tag_317\n        /* \"#utility.yul\":10766:10768   */\n      0x20\n        /* \"#utility.yul\":10755:10764   */\n      dup4\n        /* \"#utility.yul\":10751:10769   */\n      add\n        /* \"#utility.yul\":10742:10748   */\n      dup5\n        /* \"#utility.yul\":10690:10770   */\n      tag_187\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":10429:10777   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10783:11005   */\n    tag_154:\n        /* \"#utility.yul\":10876:10880   */\n      0x00\n        /* \"#utility.yul\":10914:10916   */\n      0x20\n        /* \"#utility.yul\":10903:10912   */\n      dup3\n        /* \"#utility.yul\":10899:10917   */\n      add\n        /* \"#utility.yul\":10891:10917   */\n      swap1\n      pop\n        /* \"#utility.yul\":10927:10998   */\n      tag_319\n        /* \"#utility.yul\":10995:10996   */\n      0x00\n        /* \"#utility.yul\":10984:10993   */\n      dup4\n        /* \"#utility.yul\":10980:10997   */\n      add\n        /* \"#utility.yul\":10971:10977   */\n      dup5\n        /* \"#utility.yul\":10927:10998   */\n      tag_172\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10783:11005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cb55f1d24912f2016ba5d0110ea184981837ca77f572895fdb7028c4e11a777664736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5060015f81905550611a21806100235f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063402d267d146100595780636e553f651461008957806394dddda1146100b9578063c6e6f592146100c3578063ef8b30f7146100f3575b5f5ffd5b610073600480360381019061006e919061148b565b610123565b60405161008091906114ce565b60405180910390f35b6100a3600480360381019061009e9190611511565b6101a0565b6040516100b091906114ce565b60405180910390f35b6100c1610861565b005b6100dd60048036038101906100d8919061154f565b610938565b6040516100ea91906114ce565b60405180910390f35b61010d6004803603810190610108919061154f565b61098f565b60405161011a91906114ce565b60405180910390f35b5f5f61012d6109d9565b90505f816010015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050640129f6afc08110156101955780640129f6afc061019091906115a7565b610197565b5f5b92505050919050565b5f6101a9610a05565b5f6101b26109d9565b90505f84036101ed576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060090160159054906101000a900460ff1615610236576040517fdeeb694300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6305f5e100841015610274576040517f20d01f0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060090160149054906101000a900460ff16156102bd576040517ff443ecad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6102c78561098f565b90505f8103610302576040517f77f43aca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a82600101546103139190611607565b85111561041f575f826018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414806103a55750816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442105b156103dc576040517f23e4dc4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f90555b816014015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166105295781600e0184908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001826014015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5f60646028876105399190611637565b6105439190611607565b90505f836005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd192db5836040518263ffffffff1660e01b81526004016105a291906114ce565b602060405180830381865afa1580156105bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e1919061168c565b90505f60646063836105f39190611637565b6105fd9190611607565b905087856010015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461064d91906116b7565b925050819055508385600f015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106a291906116b7565b9250508190555087856001015f8282546106bc91906116b7565b9250508190555083856002015f8282546106d691906116b7565b9250508190555042856011015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061077133308a886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a52909392919063ffffffff16565b5f83111561078657610784818885610ad4565b505b8673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78a876040516107e59291906116ea565b60405180910390a38673ffffffffffffffffffffffffffffffffffffffff167fca8f7b7916f133917db8d4b2e3566194ad8a65ad8eda78f72f5b9872c059227b8462278d004261083591906116b7565b6040516108439291906116ea565b60405180910390a2839550505050505061085b611389565b92915050565b5f61086a6109d9565b90505f816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146108e4576040517f1297a3a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e10426108f291906116b7565b816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f5f6109426109d9565b90505f8160010154148061095957505f8160020154145b15610967578291505061098a565b806001015481600201548461097c9190611637565b6109869190611607565b9150505b919050565b5f5f82036109c9576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d282610938565b9050919050565b5f5f7f5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d5090508091505090565b60025f5403610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a409061176b565b60405180910390fd5b60025f81905550565b610ace848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610a8793929190611798565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611392565b50505050565b5f5f610ade6109d9565b90505f73ffffffffffffffffffffffffffffffffffffffff16816005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b68576040517f567e930e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8303610ba1576040517fc2f5625a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f428585604051602001610bb793929190611832565b60405160208183030381529060405280519060200120905083826003015f828254610be291906116b7565b9250508190555083826012015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3791906116b7565b925050819055505f826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3856005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b8152600401610cc492919061186e565b6020604051808303815f875af1158015610ce0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0491906118ca565b905080610d3d576040517f8a2133b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61012c42610d4c91906116b7565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd30876005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518463ffffffff1660e01b8152600401610dae93929190611798565b6020604051808303815f875af1158015610dca573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dee91906118ca565b505f856005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364898d23898c896008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518563ffffffff1660e01b8152600401610e7594939291906118f5565b6020604051808303815f875af1158015610e91573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb5919061168c565b90505f8103610ef0576040517fa9ffdc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80866019015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555085601a015f8681526020019081526020015f2089908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f866008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633641bd025f886040518363ffffffff1660e01b81526004016110039190611950565b60206040518083038185885af115801561101f573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611044919061168c565b905086601b015f8781526020019081526020015f205f9054906101000a900460ff161561109d576040517fe2b1f19400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600187601b015f8881526020019081526020015f205f6101000a81548160ff0219169083151502179055505f81905080886015015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461111a91906116b7565b9250508190555087601d015f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808c81526020014281526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050505f886019015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508a73ffffffffffffffffffffffffffffffffffffffff167f447dbdbfde1cf015fc6f055a0c7a32d270f68eaf5f9ae394c3d3963a1bbc0a758b62278d004261127291906116b7565b6040516112809291906116ea565b60405180910390a28a73ffffffffffffffffffffffffffffffffffffffff167f923a5113d2791c84f9eeefac7ed7e03aaf0525bcc930d31be60bd241a5133dcc8b846040516112d09291906116ea565b60405180910390a28573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3896005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f6040518363ffffffff1660e01b81526004016113369291906119ab565b6020604051808303815f875af1158015611352573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137691906118ca565b5080985050505050505050509392505050565b60015f81905550565b5f5f60205f8451602086015f885af1806113b1576040513d5f823e3d81fd5b3d92505f519150505f82146113ca5760018114156113e5565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561142757836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161141e91906119d2565b60405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61145a82611431565b9050919050565b61146a81611450565b8114611474575f5ffd5b50565b5f8135905061148581611461565b92915050565b5f602082840312156114a05761149f61142d565b5b5f6114ad84828501611477565b91505092915050565b5f819050919050565b6114c8816114b6565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b6114f0816114b6565b81146114fa575f5ffd5b50565b5f8135905061150b816114e7565b92915050565b5f5f604083850312156115275761152661142d565b5b5f611534858286016114fd565b925050602061154585828601611477565b9150509250929050565b5f602082840312156115645761156361142d565b5b5f611571848285016114fd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b1826114b6565b91506115bc836114b6565b92508282039050818111156115d4576115d361157a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611611826114b6565b915061161c836114b6565b92508261162c5761162b6115da565b5b828204905092915050565b5f611641826114b6565b915061164c836114b6565b925082820261165a816114b6565b915082820484148315176116715761167061157a565b5b5092915050565b5f81519050611686816114e7565b92915050565b5f602082840312156116a1576116a061142d565b5b5f6116ae84828501611678565b91505092915050565b5f6116c1826114b6565b91506116cc836114b6565b92508282019050808211156116e4576116e361157a565b5b92915050565b5f6040820190506116fd5f8301856114bf565b61170a60208301846114bf565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611755601f83611711565b915061176082611721565b602082019050919050565b5f6020820190508181035f83015261178281611749565b9050919050565b61179281611450565b82525050565b5f6060820190506117ab5f830186611789565b6117b86020830185611789565b6117c560408301846114bf565b949350505050565b5f819050919050565b6117e76117e2826114b6565b6117cd565b82525050565b5f8160601b9050919050565b5f611803826117ed565b9050919050565b5f611814826117f9565b9050919050565b61182c61182782611450565b61180a565b82525050565b5f61183d82866117d6565b60208201915061184d828561181b565b60148201915061185d82846117d6565b602082019150819050949350505050565b5f6040820190506118815f830185611789565b61188e60208301846114bf565b9392505050565b5f8115159050919050565b6118a981611895565b81146118b3575f5ffd5b50565b5f815190506118c4816118a0565b92915050565b5f602082840312156118df576118de61142d565b5b5f6118ec848285016118b6565b91505092915050565b5f6080820190506119085f8301876114bf565b61191560208301866114bf565b6119226040830185611789565b61192f60608301846114bf565b95945050505050565b5f819050919050565b61194a81611938565b82525050565b5f6020820190506119635f830184611941565b92915050565b5f819050919050565b5f819050919050565b5f61199561199061198b84611969565b611972565b6114b6565b9050919050565b6119a58161197b565b82525050565b5f6040820190506119be5f830185611789565b6119cb602083018461199c565b9392505050565b5f6020820190506119e55f830184611789565b9291505056fea2646970667358221220cb55f1d24912f2016ba5d0110ea184981837ca77f572895fdb7028c4e11a777664736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x1A21 DUP1 PUSH2 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x402D267D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x94DDDDA1 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x861 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH2 0x12D PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x10 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH5 0x129F6AFC0 DUP2 LT ISZERO PUSH2 0x195 JUMPI DUP1 PUSH5 0x129F6AFC0 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9 PUSH2 0xA05 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 SUB PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDEEB694300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP5 LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x20D01F0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF443ECAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2C7 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x77F43ACA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x41F JUMPI PUSH0 DUP3 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ DUP1 PUSH2 0x3A5 JUMPI POP DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x23E4DC4300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x14 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x529 JUMPI DUP2 PUSH1 0xE ADD DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x14 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x28 DUP8 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD192DB5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x63 DUP4 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x10 ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0xF ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 DUP6 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP6 PUSH1 0x11 ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x771 CALLER ADDRESS DUP11 DUP9 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA52 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x786 JUMPI PUSH2 0x784 DUP2 DUP9 DUP6 PUSH2 0xAD4 JUMP JUMPDEST POP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP11 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCA8F7B7916F133917DB8D4B2E3566194AD8A65AD8EDA78F72F5B9872C059227B DUP5 PUSH3 0x278D00 TIMESTAMP PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x843 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 SWAP6 POP POP POP POP POP POP PUSH2 0x85B PUSH2 0x1389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x86A PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1297A3A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x942 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD EQ DUP1 PUSH2 0x959 JUMPI POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x967 JUMPI DUP3 SWAP2 POP POP PUSH2 0x98A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D2 DUP3 PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50 SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xACE DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1392 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xADE PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x567E930E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC2F5625A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP3 PUSH1 0x12 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP3 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8A2133B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12C TIMESTAMP PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP8 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEE SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST POP PUSH0 DUP6 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64898D23 DUP10 DUP13 DUP10 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB5 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9FFDC9600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP7 PUSH1 0x19 ADD PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1A ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP10 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP7 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3641BD02 PUSH0 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1B ADD PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2B1F19400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x1B ADD PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 SWAP1 POP DUP1 DUP9 PUSH1 0x15 ADD PUSH0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1D ADD PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH0 DUP9 PUSH1 0x19 ADD PUSH0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x447DBDBFDE1CF015FC6F055A0C7A32D270F68EAF5F9AE394C3D3963A1BBC0A75 DUP12 PUSH3 0x278D00 TIMESTAMP PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1280 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x923A5113D2791C84F9EEEFAC7ED7E03AAF0525BCC930D31BE60BD241A5133DCC DUP12 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12D0 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP10 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1336 SWAP3 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1352 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST POP DUP1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x13CA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x13E5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1427 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141E SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145A DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP2 EQ PUSH2 0x1474 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1485 DUP2 PUSH2 0x1461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AD DUP5 DUP3 DUP6 ADD PUSH2 0x1477 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150B DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH2 0x1526 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1534 DUP6 DUP3 DUP7 ADD PUSH2 0x14FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1545 DUP6 DUP3 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1571 DUP5 DUP3 DUP6 ADD PUSH2 0x14FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B1 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x157A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x161C DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x15DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1641 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x165A DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x157A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1686 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C1 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CC DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x157A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH0 DUP4 ADD DUP6 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1755 PUSH1 0x1F DUP4 PUSH2 0x1711 JUMP JUMPDEST SWAP2 POP PUSH2 0x1760 DUP3 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1782 DUP2 PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1792 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17AB PUSH0 DUP4 ADD DUP7 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x17B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x17C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E7 PUSH2 0x17E2 DUP3 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1803 DUP3 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182C PUSH2 0x1827 DUP3 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183D DUP3 DUP7 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x184D DUP3 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x185D DUP3 DUP5 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH0 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x188E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A9 DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18C4 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DF JUMPI PUSH2 0x18DE PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x18B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x1915 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x1922 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x192F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1963 PUSH0 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1995 PUSH2 0x1990 PUSH2 0x198B DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x1972 JUMP JUMPDEST PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A5 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x19CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE CALL 0xD2 BLOBHASH SLT CALLCODE ADD PUSH12 0xA5D0110EA184981837CA77F5 PUSH19 0x895FDB7028C4E11A777664736F6C634300081D STOP CALLER ",
							"sourceMap": "1319:7469:11:-:0;;;;;;;;;;;;;1716:1:3;1821:7;:22;;;;1319:7469:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_654": {
									"entryPoint": 5010,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_142": {
									"entryPoint": 5001,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_134": {
									"entryPoint": 2565,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@convertToShares_4885": {
									"entryPoint": 2360,
									"id": 4885,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@deposit_4827": {
									"entryPoint": 416,
									"id": 4827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getStorage_5316": {
									"entryPoint": 2521,
									"id": 5316,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxDeposit_4918": {
									"entryPoint": 291,
									"id": 4918,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@previewDeposit_4846": {
									"entryPoint": 2447,
									"id": 4846,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@queueLargeDeposit_5188": {
									"entryPoint": 2145,
									"id": 5188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferAndSwap_5152": {
									"entryPoint": 2772,
									"id": 5152,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@safeTransferFrom_304": {
									"entryPoint": 2642,
									"id": 304,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 6556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 6102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6389,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11008:13",
										"nodeType": "YulBlock",
										"src": "0:11008:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "748:87:13",
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nativeSrc": "758:29:13",
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nativeSrc": "767:20:13",
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nativeSrc": "796:33:13",
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nativeSrc": "796:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:13",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:13",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:13",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nativeSrc": "907:263:13",
													"nodeType": "YulBlock",
													"src": "907:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:13",
																"nodeType": "YulBlock",
																"src": "953:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:13"
																			},
																			"nativeSrc": "955:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:13"
																		},
																		"nativeSrc": "955:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:13"
																		},
																		"nativeSrc": "924:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:13",
																		"nodeType": "YulLiteral",
																		"src": "949:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:13"
																},
																"nativeSrc": "920:32:13",
																"nodeType": "YulFunctionCall",
																"src": "920:32:13"
															},
															"nativeSrc": "917:119:13",
															"nodeType": "YulIf",
															"src": "917:119:13"
														},
														{
															"nativeSrc": "1046:117:13",
															"nodeType": "YulBlock",
															"src": "1046:117:13",
															"statements": [
																{
																	"nativeSrc": "1061:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:13"
																				},
																				"nativeSrc": "1121:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:13"
																		},
																		"nativeSrc": "1100:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:13",
														"nodeType": "YulTypedName",
														"src": "877:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:13",
														"nodeType": "YulTypedName",
														"src": "888:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:13",
														"nodeType": "YulTypedName",
														"src": "900:6:13",
														"type": ""
													}
												],
												"src": "841:329:13"
											},
											{
												"body": {
													"nativeSrc": "1221:32:13",
													"nodeType": "YulBlock",
													"src": "1221:32:13",
													"statements": [
														{
															"nativeSrc": "1231:16:13",
															"nodeType": "YulAssignment",
															"src": "1231:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:13",
																"nodeType": "YulIdentifier",
																"src": "1242:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:13",
														"nodeType": "YulTypedName",
														"src": "1203:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:13",
														"nodeType": "YulTypedName",
														"src": "1213:7:13",
														"type": ""
													}
												],
												"src": "1176:77:13"
											},
											{
												"body": {
													"nativeSrc": "1324:53:13",
													"nodeType": "YulBlock",
													"src": "1324:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:13"
																		},
																		"nativeSrc": "1346:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:13"
																},
																"nativeSrc": "1334:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:13"
															},
															"nativeSrc": "1334:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:13",
														"nodeType": "YulTypedName",
														"src": "1312:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:13",
														"nodeType": "YulTypedName",
														"src": "1319:3:13",
														"type": ""
													}
												],
												"src": "1259:118:13"
											},
											{
												"body": {
													"nativeSrc": "1481:124:13",
													"nodeType": "YulBlock",
													"src": "1481:124:13",
													"statements": [
														{
															"nativeSrc": "1491:26:13",
															"nodeType": "YulAssignment",
															"src": "1491:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:13"
																},
																"nativeSrc": "1499:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:13"
																		},
																		"nativeSrc": "1580:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:13"
																},
																"nativeSrc": "1527:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:13"
															},
															"nativeSrc": "1527:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:13",
														"nodeType": "YulTypedName",
														"src": "1453:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:13",
														"nodeType": "YulTypedName",
														"src": "1465:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:13",
														"nodeType": "YulTypedName",
														"src": "1476:4:13",
														"type": ""
													}
												],
												"src": "1383:222:13"
											},
											{
												"body": {
													"nativeSrc": "1654:79:13",
													"nodeType": "YulBlock",
													"src": "1654:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:13",
																"nodeType": "YulBlock",
																"src": "1711:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:13"
																			},
																			"nativeSrc": "1713:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:13"
																		},
																		"nativeSrc": "1713:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:13"
																				},
																				"nativeSrc": "1684:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:13"
																		},
																		"nativeSrc": "1674:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:13"
																},
																"nativeSrc": "1667:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:13"
															},
															"nativeSrc": "1664:63:13",
															"nodeType": "YulIf",
															"src": "1664:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:13",
														"nodeType": "YulTypedName",
														"src": "1647:5:13",
														"type": ""
													}
												],
												"src": "1611:122:13"
											},
											{
												"body": {
													"nativeSrc": "1791:87:13",
													"nodeType": "YulBlock",
													"src": "1791:87:13",
													"statements": [
														{
															"nativeSrc": "1801:29:13",
															"nodeType": "YulAssignment",
															"src": "1801:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:13"
																},
																"nativeSrc": "1810:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:13"
																},
																"nativeSrc": "1839:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:13"
															},
															"nativeSrc": "1839:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:13",
														"nodeType": "YulTypedName",
														"src": "1769:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:13",
														"nodeType": "YulTypedName",
														"src": "1777:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:13",
														"nodeType": "YulTypedName",
														"src": "1785:5:13",
														"type": ""
													}
												],
												"src": "1739:139:13"
											},
											{
												"body": {
													"nativeSrc": "1967:391:13",
													"nodeType": "YulBlock",
													"src": "1967:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2013:83:13",
																"nodeType": "YulBlock",
																"src": "2013:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2015:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2015:77:13"
																			},
																			"nativeSrc": "2015:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2015:79:13"
																		},
																		"nativeSrc": "2015:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2015:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1997:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1997:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1984:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:13"
																		},
																		"nativeSrc": "1984:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2009:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2009:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1980:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1980:3:13"
																},
																"nativeSrc": "1980:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1980:32:13"
															},
															"nativeSrc": "1977:119:13",
															"nodeType": "YulIf",
															"src": "1977:119:13"
														},
														{
															"nativeSrc": "2106:117:13",
															"nodeType": "YulBlock",
															"src": "2106:117:13",
															"statements": [
																{
																	"nativeSrc": "2121:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2121:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2125:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2125:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:13"
																				},
																				"nativeSrc": "2181:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2160:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:13"
																		},
																		"nativeSrc": "2160:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2150:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2233:118:13",
															"nodeType": "YulBlock",
															"src": "2233:118:13",
															"statements": [
																{
																	"nativeSrc": "2248:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2262:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:13"
																				},
																				"nativeSrc": "2309:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:13"
																		},
																		"nativeSrc": "2288:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2278:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "1884:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1929:9:13",
														"nodeType": "YulTypedName",
														"src": "1929:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1940:7:13",
														"nodeType": "YulTypedName",
														"src": "1940:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1952:6:13",
														"nodeType": "YulTypedName",
														"src": "1952:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1960:6:13",
														"nodeType": "YulTypedName",
														"src": "1960:6:13",
														"type": ""
													}
												],
												"src": "1884:474:13"
											},
											{
												"body": {
													"nativeSrc": "2430:263:13",
													"nodeType": "YulBlock",
													"src": "2430:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2476:83:13",
																"nodeType": "YulBlock",
																"src": "2476:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2478:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2478:77:13"
																			},
																			"nativeSrc": "2478:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2478:79:13"
																		},
																		"nativeSrc": "2478:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2451:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2451:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2460:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2460:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2447:3:13"
																		},
																		"nativeSrc": "2447:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2447:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2472:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2443:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2443:3:13"
																},
																"nativeSrc": "2443:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2443:32:13"
															},
															"nativeSrc": "2440:119:13",
															"nodeType": "YulIf",
															"src": "2440:119:13"
														},
														{
															"nativeSrc": "2569:117:13",
															"nodeType": "YulBlock",
															"src": "2569:117:13",
															"statements": [
																{
																	"nativeSrc": "2584:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2584:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2598:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2598:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2588:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2588:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2613:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2613:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2648:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2648:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2659:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2659:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2644:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2644:3:13"
																				},
																				"nativeSrc": "2644:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2644:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2668:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2668:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2623:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2623:20:13"
																		},
																		"nativeSrc": "2623:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2613:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2613:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2364:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2400:9:13",
														"nodeType": "YulTypedName",
														"src": "2400:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2411:7:13",
														"nodeType": "YulTypedName",
														"src": "2411:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2423:6:13",
														"nodeType": "YulTypedName",
														"src": "2423:6:13",
														"type": ""
													}
												],
												"src": "2364:329:13"
											},
											{
												"body": {
													"nativeSrc": "2727:152:13",
													"nodeType": "YulBlock",
													"src": "2727:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2744:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2747:77:13",
																		"nodeType": "YulLiteral",
																		"src": "2747:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2737:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2737:6:13"
																},
																"nativeSrc": "2737:88:13",
																"nodeType": "YulFunctionCall",
																"src": "2737:88:13"
															},
															"nativeSrc": "2737:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "2737:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2841:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2841:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2844:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2844:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2834:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:13"
																},
																"nativeSrc": "2834:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2834:15:13"
															},
															"nativeSrc": "2834:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2834:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2865:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2865:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2868:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2868:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2858:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:13"
																},
																"nativeSrc": "2858:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2858:15:13"
															},
															"nativeSrc": "2858:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2858:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2699:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2699:180:13"
											},
											{
												"body": {
													"nativeSrc": "2930:149:13",
													"nodeType": "YulBlock",
													"src": "2930:149:13",
													"statements": [
														{
															"nativeSrc": "2940:25:13",
															"nodeType": "YulAssignment",
															"src": "2940:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2963:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2963:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2945:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2945:17:13"
																},
																"nativeSrc": "2945:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2945:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2940:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:1:13"
																}
															]
														},
														{
															"nativeSrc": "2974:25:13",
															"nodeType": "YulAssignment",
															"src": "2974:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2997:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "2997:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2979:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2979:17:13"
																},
																"nativeSrc": "2979:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2979:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2974:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "2974:1:13"
																}
															]
														},
														{
															"nativeSrc": "3008:17:13",
															"nodeType": "YulAssignment",
															"src": "3008:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3020:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3020:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3023:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3023:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3016:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:13"
																},
																"nativeSrc": "3016:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3016:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3008:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3008:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3050:22:13",
																"nodeType": "YulBlock",
																"src": "3050:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3052:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3052:16:13"
																			},
																			"nativeSrc": "3052:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3052:18:13"
																		},
																		"nativeSrc": "3052:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3052:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3041:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3041:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3047:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3047:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3038:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3038:2:13"
																},
																"nativeSrc": "3038:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3038:11:13"
															},
															"nativeSrc": "3035:37:13",
															"nodeType": "YulIf",
															"src": "3035:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2885:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2916:1:13",
														"nodeType": "YulTypedName",
														"src": "2916:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2919:1:13",
														"nodeType": "YulTypedName",
														"src": "2919:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2925:4:13",
														"nodeType": "YulTypedName",
														"src": "2925:4:13",
														"type": ""
													}
												],
												"src": "2885:194:13"
											},
											{
												"body": {
													"nativeSrc": "3113:152:13",
													"nodeType": "YulBlock",
													"src": "3113:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3130:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3130:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:77:13",
																		"nodeType": "YulLiteral",
																		"src": "3133:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3123:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:13"
																},
																"nativeSrc": "3123:88:13",
																"nodeType": "YulFunctionCall",
																"src": "3123:88:13"
															},
															"nativeSrc": "3123:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "3123:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3227:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3230:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3230:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:13"
																},
																"nativeSrc": "3220:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3220:15:13"
															},
															"nativeSrc": "3220:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3220:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3251:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3251:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3254:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3244:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3244:6:13"
																},
																"nativeSrc": "3244:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3244:15:13"
															},
															"nativeSrc": "3244:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3244:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "3085:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3085:180:13"
											},
											{
												"body": {
													"nativeSrc": "3313:143:13",
													"nodeType": "YulBlock",
													"src": "3313:143:13",
													"statements": [
														{
															"nativeSrc": "3323:25:13",
															"nodeType": "YulAssignment",
															"src": "3323:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3346:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3346:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3328:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3328:17:13"
																},
																"nativeSrc": "3328:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3328:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3323:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3323:1:13"
																}
															]
														},
														{
															"nativeSrc": "3357:25:13",
															"nodeType": "YulAssignment",
															"src": "3357:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3380:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3380:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3362:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3362:17:13"
																},
																"nativeSrc": "3362:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3362:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3357:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3357:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:22:13",
																"nodeType": "YulBlock",
																"src": "3404:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "3406:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3406:16:13"
																			},
																			"nativeSrc": "3406:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3406:18:13"
																		},
																		"nativeSrc": "3406:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3406:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3401:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3401:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3394:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3394:6:13"
																},
																"nativeSrc": "3394:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3394:9:13"
															},
															"nativeSrc": "3391:35:13",
															"nodeType": "YulIf",
															"src": "3391:35:13"
														},
														{
															"nativeSrc": "3436:14:13",
															"nodeType": "YulAssignment",
															"src": "3436:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3445:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3445:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3448:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:13"
																},
																"nativeSrc": "3441:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3441:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3436:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3436:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3271:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3302:1:13",
														"nodeType": "YulTypedName",
														"src": "3302:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3305:1:13",
														"nodeType": "YulTypedName",
														"src": "3305:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3311:1:13",
														"nodeType": "YulTypedName",
														"src": "3311:1:13",
														"type": ""
													}
												],
												"src": "3271:185:13"
											},
											{
												"body": {
													"nativeSrc": "3510:362:13",
													"nodeType": "YulBlock",
													"src": "3510:362:13",
													"statements": [
														{
															"nativeSrc": "3520:25:13",
															"nodeType": "YulAssignment",
															"src": "3520:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3543:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3543:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3525:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3525:17:13"
																},
																"nativeSrc": "3525:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3525:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3520:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3520:1:13"
																}
															]
														},
														{
															"nativeSrc": "3554:25:13",
															"nodeType": "YulAssignment",
															"src": "3554:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3577:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3577:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3559:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3559:17:13"
																},
																"nativeSrc": "3559:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3559:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3554:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "3554:1:13"
																}
															]
														},
														{
															"nativeSrc": "3588:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3588:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3611:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3611:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3614:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "3614:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3607:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3607:3:13"
																},
																"nativeSrc": "3607:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3607:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "3592:11:13",
																	"nodeType": "YulTypedName",
																	"src": "3592:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3625:41:13",
															"nodeType": "YulAssignment",
															"src": "3625:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "3654:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "3654:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3636:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3636:17:13"
																},
																"nativeSrc": "3636:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3636:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3625:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3625:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3843:22:13",
																"nodeType": "YulBlock",
																"src": "3843:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3845:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3845:16:13"
																			},
																			"nativeSrc": "3845:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3845:18:13"
																		},
																		"nativeSrc": "3845:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3845:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3776:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "3776:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3769:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "3769:6:13"
																				},
																				"nativeSrc": "3769:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3769:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3799:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "3799:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3806:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "3806:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3815:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "3815:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3802:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3802:3:13"
																						},
																						"nativeSrc": "3802:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3802:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3796:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3796:2:13"
																				},
																				"nativeSrc": "3796:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3796:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3749:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3749:2:13"
																		},
																		"nativeSrc": "3749:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3749:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:13"
																},
																"nativeSrc": "3729:113:13",
																"nodeType": "YulFunctionCall",
																"src": "3729:113:13"
															},
															"nativeSrc": "3726:139:13",
															"nodeType": "YulIf",
															"src": "3726:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3462:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3493:1:13",
														"nodeType": "YulTypedName",
														"src": "3493:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3496:1:13",
														"nodeType": "YulTypedName",
														"src": "3496:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3502:7:13",
														"nodeType": "YulTypedName",
														"src": "3502:7:13",
														"type": ""
													}
												],
												"src": "3462:410:13"
											},
											{
												"body": {
													"nativeSrc": "3941:80:13",
													"nodeType": "YulBlock",
													"src": "3941:80:13",
													"statements": [
														{
															"nativeSrc": "3951:22:13",
															"nodeType": "YulAssignment",
															"src": "3951:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3966:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3966:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3960:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3960:5:13"
																},
																"nativeSrc": "3960:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3960:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3951:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3951:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4009:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4009:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3982:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3982:26:13"
																},
																"nativeSrc": "3982:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3982:33:13"
															},
															"nativeSrc": "3982:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3982:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3878:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3919:6:13",
														"nodeType": "YulTypedName",
														"src": "3919:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3927:3:13",
														"nodeType": "YulTypedName",
														"src": "3927:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3935:5:13",
														"nodeType": "YulTypedName",
														"src": "3935:5:13",
														"type": ""
													}
												],
												"src": "3878:143:13"
											},
											{
												"body": {
													"nativeSrc": "4104:274:13",
													"nodeType": "YulBlock",
													"src": "4104:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4150:83:13",
																"nodeType": "YulBlock",
																"src": "4150:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4152:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4152:77:13"
																			},
																			"nativeSrc": "4152:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4152:79:13"
																		},
																		"nativeSrc": "4152:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4152:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4125:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4125:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4134:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4121:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:13"
																		},
																		"nativeSrc": "4121:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4146:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4146:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4117:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:13"
																},
																"nativeSrc": "4117:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4117:32:13"
															},
															"nativeSrc": "4114:119:13",
															"nodeType": "YulIf",
															"src": "4114:119:13"
														},
														{
															"nativeSrc": "4243:128:13",
															"nodeType": "YulBlock",
															"src": "4243:128:13",
															"statements": [
																{
																	"nativeSrc": "4258:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4258:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4272:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4272:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4262:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4262:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4287:74:13",
																	"nodeType": "YulAssignment",
																	"src": "4287:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4333:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4333:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4344:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4344:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4329:3:13"
																				},
																				"nativeSrc": "4329:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4329:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4353:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4353:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4297:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "4297:31:13"
																		},
																		"nativeSrc": "4297:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4287:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4287:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4027:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4074:9:13",
														"nodeType": "YulTypedName",
														"src": "4074:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4085:7:13",
														"nodeType": "YulTypedName",
														"src": "4085:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4097:6:13",
														"nodeType": "YulTypedName",
														"src": "4097:6:13",
														"type": ""
													}
												],
												"src": "4027:351:13"
											},
											{
												"body": {
													"nativeSrc": "4428:147:13",
													"nodeType": "YulBlock",
													"src": "4428:147:13",
													"statements": [
														{
															"nativeSrc": "4438:25:13",
															"nodeType": "YulAssignment",
															"src": "4438:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4461:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4461:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4443:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4443:17:13"
																},
																"nativeSrc": "4443:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4443:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4438:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4438:1:13"
																}
															]
														},
														{
															"nativeSrc": "4472:25:13",
															"nodeType": "YulAssignment",
															"src": "4472:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4495:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4495:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4477:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4477:17:13"
																},
																"nativeSrc": "4477:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4477:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4472:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4472:1:13"
																}
															]
														},
														{
															"nativeSrc": "4506:16:13",
															"nodeType": "YulAssignment",
															"src": "4506:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4517:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4517:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4520:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4520:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4513:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:13"
																},
																"nativeSrc": "4513:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4513:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4506:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4546:22:13",
																"nodeType": "YulBlock",
																"src": "4546:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4548:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4548:16:13"
																			},
																			"nativeSrc": "4548:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4548:18:13"
																		},
																		"nativeSrc": "4548:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4548:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4538:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4538:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4541:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4541:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4535:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4535:2:13"
																},
																"nativeSrc": "4535:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4535:10:13"
															},
															"nativeSrc": "4532:36:13",
															"nodeType": "YulIf",
															"src": "4532:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4384:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4415:1:13",
														"nodeType": "YulTypedName",
														"src": "4415:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4418:1:13",
														"nodeType": "YulTypedName",
														"src": "4418:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4424:3:13",
														"nodeType": "YulTypedName",
														"src": "4424:3:13",
														"type": ""
													}
												],
												"src": "4384:191:13"
											},
											{
												"body": {
													"nativeSrc": "4707:206:13",
													"nodeType": "YulBlock",
													"src": "4707:206:13",
													"statements": [
														{
															"nativeSrc": "4717:26:13",
															"nodeType": "YulAssignment",
															"src": "4717:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:13"
																},
																"nativeSrc": "4725:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4725:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4797:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4797:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4810:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4810:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4821:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4821:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4806:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4806:3:13"
																		},
																		"nativeSrc": "4806:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4806:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4753:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4753:43:13"
																},
																"nativeSrc": "4753:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4753:71:13"
															},
															"nativeSrc": "4753:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4753:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4878:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4878:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4891:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4891:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4902:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4902:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4887:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4887:3:13"
																		},
																		"nativeSrc": "4887:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4887:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4834:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4834:43:13"
																},
																"nativeSrc": "4834:72:13",
																"nodeType": "YulFunctionCall",
																"src": "4834:72:13"
															},
															"nativeSrc": "4834:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "4834:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4581:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4671:9:13",
														"nodeType": "YulTypedName",
														"src": "4671:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4683:6:13",
														"nodeType": "YulTypedName",
														"src": "4683:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4691:6:13",
														"nodeType": "YulTypedName",
														"src": "4691:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4702:4:13",
														"nodeType": "YulTypedName",
														"src": "4702:4:13",
														"type": ""
													}
												],
												"src": "4581:332:13"
											},
											{
												"body": {
													"nativeSrc": "5015:73:13",
													"nodeType": "YulBlock",
													"src": "5015:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5032:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5032:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5037:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5037:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5025:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5025:6:13"
																},
																"nativeSrc": "5025:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5025:19:13"
															},
															"nativeSrc": "5025:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "5025:19:13"
														},
														{
															"nativeSrc": "5053:29:13",
															"nodeType": "YulAssignment",
															"src": "5053:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5072:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5072:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5077:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5077:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5068:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5068:3:13"
																},
																"nativeSrc": "5068:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5068:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5053:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5053:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4919:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4987:3:13",
														"nodeType": "YulTypedName",
														"src": "4987:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4992:6:13",
														"nodeType": "YulTypedName",
														"src": "4992:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5003:11:13",
														"nodeType": "YulTypedName",
														"src": "5003:11:13",
														"type": ""
													}
												],
												"src": "4919:169:13"
											},
											{
												"body": {
													"nativeSrc": "5200:75:13",
													"nodeType": "YulBlock",
													"src": "5200:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5222:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5222:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5230:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5230:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5218:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5218:3:13"
																		},
																		"nativeSrc": "5218:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5218:14:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "5234:33:13",
																		"nodeType": "YulLiteral",
																		"src": "5234:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5211:6:13"
																},
																"nativeSrc": "5211:57:13",
																"nodeType": "YulFunctionCall",
																"src": "5211:57:13"
															},
															"nativeSrc": "5211:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "5211:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "5094:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5192:6:13",
														"nodeType": "YulTypedName",
														"src": "5192:6:13",
														"type": ""
													}
												],
												"src": "5094:181:13"
											},
											{
												"body": {
													"nativeSrc": "5427:220:13",
													"nodeType": "YulBlock",
													"src": "5427:220:13",
													"statements": [
														{
															"nativeSrc": "5437:74:13",
															"nodeType": "YulAssignment",
															"src": "5437:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5503:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5503:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5508:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5444:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5444:58:13"
																},
																"nativeSrc": "5444:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5444:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5437:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5437:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5609:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5609:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "5520:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "5520:88:13"
																},
																"nativeSrc": "5520:93:13",
																"nodeType": "YulFunctionCall",
																"src": "5520:93:13"
															},
															"nativeSrc": "5520:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "5520:93:13"
														},
														{
															"nativeSrc": "5622:19:13",
															"nodeType": "YulAssignment",
															"src": "5622:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5633:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5629:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5629:3:13"
																},
																"nativeSrc": "5629:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5629:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5622:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5622:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5281:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5415:3:13",
														"nodeType": "YulTypedName",
														"src": "5415:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5423:3:13",
														"nodeType": "YulTypedName",
														"src": "5423:3:13",
														"type": ""
													}
												],
												"src": "5281:366:13"
											},
											{
												"body": {
													"nativeSrc": "5824:248:13",
													"nodeType": "YulBlock",
													"src": "5824:248:13",
													"statements": [
														{
															"nativeSrc": "5834:26:13",
															"nodeType": "YulAssignment",
															"src": "5834:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5846:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5846:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5857:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5857:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5842:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5842:3:13"
																},
																"nativeSrc": "5842:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5842:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5834:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5834:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5892:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5892:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:13"
																		},
																		"nativeSrc": "5877:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5900:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5900:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5906:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5906:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5896:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:13"
																		},
																		"nativeSrc": "5896:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:13"
																},
																"nativeSrc": "5870:47:13",
																"nodeType": "YulFunctionCall",
																"src": "5870:47:13"
															},
															"nativeSrc": "5870:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "5870:47:13"
														},
														{
															"nativeSrc": "5926:139:13",
															"nodeType": "YulAssignment",
															"src": "5926:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6060:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6060:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5934:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "5934:124:13"
																},
																"nativeSrc": "5934:131:13",
																"nodeType": "YulFunctionCall",
																"src": "5934:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5926:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5653:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5804:9:13",
														"nodeType": "YulTypedName",
														"src": "5804:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5819:4:13",
														"nodeType": "YulTypedName",
														"src": "5819:4:13",
														"type": ""
													}
												],
												"src": "5653:419:13"
											},
											{
												"body": {
													"nativeSrc": "6143:53:13",
													"nodeType": "YulBlock",
													"src": "6143:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6160:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6160:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6183:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6183:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6165:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6165:17:13"
																		},
																		"nativeSrc": "6165:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6165:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6153:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6153:6:13"
																},
																"nativeSrc": "6153:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6153:37:13"
															},
															"nativeSrc": "6153:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6153:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6078:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6131:5:13",
														"nodeType": "YulTypedName",
														"src": "6131:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6138:3:13",
														"nodeType": "YulTypedName",
														"src": "6138:3:13",
														"type": ""
													}
												],
												"src": "6078:118:13"
											},
											{
												"body": {
													"nativeSrc": "6356:288:13",
													"nodeType": "YulBlock",
													"src": "6356:288:13",
													"statements": [
														{
															"nativeSrc": "6366:26:13",
															"nodeType": "YulAssignment",
															"src": "6366:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6378:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6378:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6389:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:13"
																},
																"nativeSrc": "6374:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6374:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6366:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6366:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6446:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6446:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6459:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6470:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6470:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6455:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:13"
																		},
																		"nativeSrc": "6455:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6455:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6402:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6402:43:13"
																},
																"nativeSrc": "6402:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6402:71:13"
															},
															"nativeSrc": "6402:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6402:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6527:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6527:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6540:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6540:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6551:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6551:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6536:3:13"
																		},
																		"nativeSrc": "6536:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6536:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6483:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6483:43:13"
																},
																"nativeSrc": "6483:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6483:72:13"
															},
															"nativeSrc": "6483:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6483:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6609:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6609:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6622:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6622:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6633:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6633:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6618:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6618:3:13"
																		},
																		"nativeSrc": "6618:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6618:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6565:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6565:43:13"
																},
																"nativeSrc": "6565:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6565:72:13"
															},
															"nativeSrc": "6565:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6565:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6202:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6312:9:13",
														"nodeType": "YulTypedName",
														"src": "6312:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6324:6:13",
														"nodeType": "YulTypedName",
														"src": "6324:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6332:6:13",
														"nodeType": "YulTypedName",
														"src": "6332:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6340:6:13",
														"nodeType": "YulTypedName",
														"src": "6340:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6351:4:13",
														"nodeType": "YulTypedName",
														"src": "6351:4:13",
														"type": ""
													}
												],
												"src": "6202:442:13"
											},
											{
												"body": {
													"nativeSrc": "6697:32:13",
													"nodeType": "YulBlock",
													"src": "6697:32:13",
													"statements": [
														{
															"nativeSrc": "6707:16:13",
															"nodeType": "YulAssignment",
															"src": "6707:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "6718:5:13",
																"nodeType": "YulIdentifier",
																"src": "6718:5:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "6707:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6707:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "6650:79:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6679:5:13",
														"nodeType": "YulTypedName",
														"src": "6679:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "6689:7:13",
														"nodeType": "YulTypedName",
														"src": "6689:7:13",
														"type": ""
													}
												],
												"src": "6650:79:13"
											},
											{
												"body": {
													"nativeSrc": "6818:74:13",
													"nodeType": "YulBlock",
													"src": "6818:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6835:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6835:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6878:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6878:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6860:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6860:17:13"
																				},
																				"nativeSrc": "6860:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6860:24:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "6840:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "6840:19:13"
																		},
																		"nativeSrc": "6840:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6840:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6828:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6828:6:13"
																},
																"nativeSrc": "6828:58:13",
																"nodeType": "YulFunctionCall",
																"src": "6828:58:13"
															},
															"nativeSrc": "6828:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "6828:58:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "6735:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6806:5:13",
														"nodeType": "YulTypedName",
														"src": "6806:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6813:3:13",
														"nodeType": "YulTypedName",
														"src": "6813:3:13",
														"type": ""
													}
												],
												"src": "6735:157:13"
											},
											{
												"body": {
													"nativeSrc": "6940:52:13",
													"nodeType": "YulBlock",
													"src": "6940:52:13",
													"statements": [
														{
															"nativeSrc": "6950:35:13",
															"nodeType": "YulAssignment",
															"src": "6950:35:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6975:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:13",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6979:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6979:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6971:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:13"
																},
																"nativeSrc": "6971:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6971:14:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6950:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "6950:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "6898:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6921:5:13",
														"nodeType": "YulTypedName",
														"src": "6921:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6931:8:13",
														"nodeType": "YulTypedName",
														"src": "6931:8:13",
														"type": ""
													}
												],
												"src": "6898:94:13"
											},
											{
												"body": {
													"nativeSrc": "7045:47:13",
													"nodeType": "YulBlock",
													"src": "7045:47:13",
													"statements": [
														{
															"nativeSrc": "7055:31:13",
															"nodeType": "YulAssignment",
															"src": "7055:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7080:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7080:5:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "7066:13:13",
																	"nodeType": "YulIdentifier",
																	"src": "7066:13:13"
																},
																"nativeSrc": "7066:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7066:20:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "7055:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "7055:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "6998:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7027:5:13",
														"nodeType": "YulTypedName",
														"src": "7027:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "7037:7:13",
														"nodeType": "YulTypedName",
														"src": "7037:7:13",
														"type": ""
													}
												],
												"src": "6998:94:13"
											},
											{
												"body": {
													"nativeSrc": "7145:53:13",
													"nodeType": "YulBlock",
													"src": "7145:53:13",
													"statements": [
														{
															"nativeSrc": "7155:37:13",
															"nodeType": "YulAssignment",
															"src": "7155:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7186:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7186:5:13"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "7166:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "7166:19:13"
																},
																"nativeSrc": "7166:26:13",
																"nodeType": "YulFunctionCall",
																"src": "7166:26:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "7155:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "7155:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "7098:100:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7127:5:13",
														"nodeType": "YulTypedName",
														"src": "7127:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "7137:7:13",
														"nodeType": "YulTypedName",
														"src": "7137:7:13",
														"type": ""
													}
												],
												"src": "7098:100:13"
											},
											{
												"body": {
													"nativeSrc": "7287:74:13",
													"nodeType": "YulBlock",
													"src": "7287:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7304:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7304:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7347:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7347:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "7329:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "7329:17:13"
																				},
																				"nativeSrc": "7329:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7329:24:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "7309:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "7309:19:13"
																		},
																		"nativeSrc": "7309:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7309:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7297:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:13"
																},
																"nativeSrc": "7297:58:13",
																"nodeType": "YulFunctionCall",
																"src": "7297:58:13"
															},
															"nativeSrc": "7297:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "7297:58:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "7204:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7275:5:13",
														"nodeType": "YulTypedName",
														"src": "7275:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7282:3:13",
														"nodeType": "YulTypedName",
														"src": "7282:3:13",
														"type": ""
													}
												],
												"src": "7204:157:13"
											},
											{
												"body": {
													"nativeSrc": "7539:366:13",
													"nodeType": "YulBlock",
													"src": "7539:366:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7612:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7612:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7621:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7621:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "7550:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "7550:61:13"
																},
																"nativeSrc": "7550:75:13",
																"nodeType": "YulFunctionCall",
																"src": "7550:75:13"
															},
															"nativeSrc": "7550:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "7550:75:13"
														},
														{
															"nativeSrc": "7634:19:13",
															"nodeType": "YulAssignment",
															"src": "7634:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7645:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7645:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7650:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7641:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7641:3:13"
																},
																"nativeSrc": "7641:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7641:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7634:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7725:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7725:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7734:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7734:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "7663:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "7663:61:13"
																},
																"nativeSrc": "7663:75:13",
																"nodeType": "YulFunctionCall",
																"src": "7663:75:13"
															},
															"nativeSrc": "7663:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "7663:75:13"
														},
														{
															"nativeSrc": "7747:19:13",
															"nodeType": "YulAssignment",
															"src": "7747:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7758:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7758:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7763:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7763:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7754:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7754:3:13"
																},
																"nativeSrc": "7754:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7754:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7747:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7838:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7838:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7847:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7847:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "7776:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "7776:61:13"
																},
																"nativeSrc": "7776:75:13",
																"nodeType": "YulFunctionCall",
																"src": "7776:75:13"
															},
															"nativeSrc": "7776:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "7776:75:13"
														},
														{
															"nativeSrc": "7860:19:13",
															"nodeType": "YulAssignment",
															"src": "7860:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7871:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7871:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7876:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7876:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7867:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7867:3:13"
																},
																"nativeSrc": "7867:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7867:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7860:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7860:3:13"
																}
															]
														},
														{
															"nativeSrc": "7889:10:13",
															"nodeType": "YulAssignment",
															"src": "7889:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "7896:3:13",
																"nodeType": "YulIdentifier",
																"src": "7896:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7889:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7889:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7367:538:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7502:3:13",
														"nodeType": "YulTypedName",
														"src": "7502:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7508:6:13",
														"nodeType": "YulTypedName",
														"src": "7508:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7516:6:13",
														"nodeType": "YulTypedName",
														"src": "7516:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7524:6:13",
														"nodeType": "YulTypedName",
														"src": "7524:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7535:3:13",
														"nodeType": "YulTypedName",
														"src": "7535:3:13",
														"type": ""
													}
												],
												"src": "7367:538:13"
											},
											{
												"body": {
													"nativeSrc": "8037:206:13",
													"nodeType": "YulBlock",
													"src": "8037:206:13",
													"statements": [
														{
															"nativeSrc": "8047:26:13",
															"nodeType": "YulAssignment",
															"src": "8047:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8059:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8059:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8070:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8070:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8055:3:13"
																},
																"nativeSrc": "8055:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8055:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8047:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8047:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8127:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8127:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8140:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8140:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8136:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8136:3:13"
																		},
																		"nativeSrc": "8136:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8136:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8083:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8083:43:13"
																},
																"nativeSrc": "8083:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8083:71:13"
															},
															"nativeSrc": "8083:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8083:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8208:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8208:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8221:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8221:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8232:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8232:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8217:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8217:3:13"
																		},
																		"nativeSrc": "8217:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8217:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8164:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8164:43:13"
																},
																"nativeSrc": "8164:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8164:72:13"
															},
															"nativeSrc": "8164:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8164:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7911:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8001:9:13",
														"nodeType": "YulTypedName",
														"src": "8001:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8013:6:13",
														"nodeType": "YulTypedName",
														"src": "8013:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8021:6:13",
														"nodeType": "YulTypedName",
														"src": "8021:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8032:4:13",
														"nodeType": "YulTypedName",
														"src": "8032:4:13",
														"type": ""
													}
												],
												"src": "7911:332:13"
											},
											{
												"body": {
													"nativeSrc": "8291:48:13",
													"nodeType": "YulBlock",
													"src": "8291:48:13",
													"statements": [
														{
															"nativeSrc": "8301:32:13",
															"nodeType": "YulAssignment",
															"src": "8301:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8326:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8326:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8319:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8319:6:13"
																		},
																		"nativeSrc": "8319:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8319:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8312:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8312:6:13"
																},
																"nativeSrc": "8312:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8312:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8301:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8301:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8249:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8273:5:13",
														"nodeType": "YulTypedName",
														"src": "8273:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8283:7:13",
														"nodeType": "YulTypedName",
														"src": "8283:7:13",
														"type": ""
													}
												],
												"src": "8249:90:13"
											},
											{
												"body": {
													"nativeSrc": "8385:76:13",
													"nodeType": "YulBlock",
													"src": "8385:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8439:16:13",
																"nodeType": "YulBlock",
																"src": "8439:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8448:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8448:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8451:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8451:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8441:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8441:6:13"
																			},
																			"nativeSrc": "8441:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8441:12:13"
																		},
																		"nativeSrc": "8441:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8441:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8408:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8408:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8430:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8430:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8415:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8415:14:13"
																				},
																				"nativeSrc": "8415:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8415:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8405:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8405:2:13"
																		},
																		"nativeSrc": "8405:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8405:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:13"
																},
																"nativeSrc": "8398:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8398:40:13"
															},
															"nativeSrc": "8395:60:13",
															"nodeType": "YulIf",
															"src": "8395:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8345:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8378:5:13",
														"nodeType": "YulTypedName",
														"src": "8378:5:13",
														"type": ""
													}
												],
												"src": "8345:116:13"
											},
											{
												"body": {
													"nativeSrc": "8527:77:13",
													"nodeType": "YulBlock",
													"src": "8527:77:13",
													"statements": [
														{
															"nativeSrc": "8537:22:13",
															"nodeType": "YulAssignment",
															"src": "8537:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8552:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8552:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8546:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8546:5:13"
																},
																"nativeSrc": "8546:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8546:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8537:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8537:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8592:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8592:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8568:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "8568:23:13"
																},
																"nativeSrc": "8568:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8568:30:13"
															},
															"nativeSrc": "8568:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8568:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8467:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8505:6:13",
														"nodeType": "YulTypedName",
														"src": "8505:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8513:3:13",
														"nodeType": "YulTypedName",
														"src": "8513:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8521:5:13",
														"nodeType": "YulTypedName",
														"src": "8521:5:13",
														"type": ""
													}
												],
												"src": "8467:137:13"
											},
											{
												"body": {
													"nativeSrc": "8684:271:13",
													"nodeType": "YulBlock",
													"src": "8684:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8730:83:13",
																"nodeType": "YulBlock",
																"src": "8730:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8732:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8732:77:13"
																			},
																			"nativeSrc": "8732:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8732:79:13"
																		},
																		"nativeSrc": "8732:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8732:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8705:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8705:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8714:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8714:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8701:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8701:3:13"
																		},
																		"nativeSrc": "8701:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8701:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8726:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8726:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:13"
																},
																"nativeSrc": "8697:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8697:32:13"
															},
															"nativeSrc": "8694:119:13",
															"nodeType": "YulIf",
															"src": "8694:119:13"
														},
														{
															"nativeSrc": "8823:125:13",
															"nodeType": "YulBlock",
															"src": "8823:125:13",
															"statements": [
																{
																	"nativeSrc": "8838:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8838:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8852:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8852:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8842:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8842:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8867:71:13",
																	"nodeType": "YulAssignment",
																	"src": "8867:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8910:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8910:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8921:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8921:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8906:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8906:3:13"
																				},
																				"nativeSrc": "8906:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8906:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8930:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8930:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8877:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "8877:28:13"
																		},
																		"nativeSrc": "8877:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8877:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8867:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8867:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8610:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8654:9:13",
														"nodeType": "YulTypedName",
														"src": "8654:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8665:7:13",
														"nodeType": "YulTypedName",
														"src": "8665:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8677:6:13",
														"nodeType": "YulTypedName",
														"src": "8677:6:13",
														"type": ""
													}
												],
												"src": "8610:345:13"
											},
											{
												"body": {
													"nativeSrc": "9143:371:13",
													"nodeType": "YulBlock",
													"src": "9143:371:13",
													"statements": [
														{
															"nativeSrc": "9153:27:13",
															"nodeType": "YulAssignment",
															"src": "9153:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9165:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9165:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9176:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9176:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9161:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9161:3:13"
																},
																"nativeSrc": "9161:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9161:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9153:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9153:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9234:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9234:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9247:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9247:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9258:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9258:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9243:3:13"
																		},
																		"nativeSrc": "9243:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9243:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9190:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9190:43:13"
																},
																"nativeSrc": "9190:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9190:71:13"
															},
															"nativeSrc": "9190:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9190:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9315:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9315:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9328:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9328:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9339:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9339:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9324:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:13"
																		},
																		"nativeSrc": "9324:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9324:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9271:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9271:43:13"
																},
																"nativeSrc": "9271:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9271:72:13"
															},
															"nativeSrc": "9271:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9271:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9397:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9397:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9410:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9410:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9421:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9421:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9406:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9406:3:13"
																		},
																		"nativeSrc": "9406:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9406:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9353:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9353:43:13"
																},
																"nativeSrc": "9353:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9353:72:13"
															},
															"nativeSrc": "9353:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9353:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9479:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9479:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9492:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9492:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9503:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9488:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9488:3:13"
																		},
																		"nativeSrc": "9488:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9488:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9435:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9435:43:13"
																},
																"nativeSrc": "9435:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9435:72:13"
															},
															"nativeSrc": "9435:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9435:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8961:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9091:9:13",
														"nodeType": "YulTypedName",
														"src": "9091:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9103:6:13",
														"nodeType": "YulTypedName",
														"src": "9103:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9111:6:13",
														"nodeType": "YulTypedName",
														"src": "9111:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9119:6:13",
														"nodeType": "YulTypedName",
														"src": "9119:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9127:6:13",
														"nodeType": "YulTypedName",
														"src": "9127:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9138:4:13",
														"nodeType": "YulTypedName",
														"src": "9138:4:13",
														"type": ""
													}
												],
												"src": "8961:553:13"
											},
											{
												"body": {
													"nativeSrc": "9565:32:13",
													"nodeType": "YulBlock",
													"src": "9565:32:13",
													"statements": [
														{
															"nativeSrc": "9575:16:13",
															"nodeType": "YulAssignment",
															"src": "9575:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "9586:5:13",
																"nodeType": "YulIdentifier",
																"src": "9586:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9575:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "9575:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "9520:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9547:5:13",
														"nodeType": "YulTypedName",
														"src": "9547:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9557:7:13",
														"nodeType": "YulTypedName",
														"src": "9557:7:13",
														"type": ""
													}
												],
												"src": "9520:77:13"
											},
											{
												"body": {
													"nativeSrc": "9668:53:13",
													"nodeType": "YulBlock",
													"src": "9668:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9685:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9685:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9708:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9708:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "9690:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9690:17:13"
																		},
																		"nativeSrc": "9690:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9690:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9678:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:13"
																},
																"nativeSrc": "9678:37:13",
																"nodeType": "YulFunctionCall",
																"src": "9678:37:13"
															},
															"nativeSrc": "9678:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "9678:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "9603:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9656:5:13",
														"nodeType": "YulTypedName",
														"src": "9656:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9663:3:13",
														"nodeType": "YulTypedName",
														"src": "9663:3:13",
														"type": ""
													}
												],
												"src": "9603:118:13"
											},
											{
												"body": {
													"nativeSrc": "9825:124:13",
													"nodeType": "YulBlock",
													"src": "9825:124:13",
													"statements": [
														{
															"nativeSrc": "9835:26:13",
															"nodeType": "YulAssignment",
															"src": "9835:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9847:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9847:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9858:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9858:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9843:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9843:3:13"
																},
																"nativeSrc": "9843:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9843:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9835:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9835:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9915:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9915:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9928:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9939:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9939:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:13"
																		},
																		"nativeSrc": "9924:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9924:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9871:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9871:43:13"
																},
																"nativeSrc": "9871:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9871:71:13"
															},
															"nativeSrc": "9871:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9871:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "9727:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9797:9:13",
														"nodeType": "YulTypedName",
														"src": "9797:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9809:6:13",
														"nodeType": "YulTypedName",
														"src": "9809:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9820:4:13",
														"nodeType": "YulTypedName",
														"src": "9820:4:13",
														"type": ""
													}
												],
												"src": "9727:222:13"
											},
											{
												"body": {
													"nativeSrc": "10008:32:13",
													"nodeType": "YulBlock",
													"src": "10008:32:13",
													"statements": [
														{
															"nativeSrc": "10018:16:13",
															"nodeType": "YulAssignment",
															"src": "10018:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "10029:5:13",
																"nodeType": "YulIdentifier",
																"src": "10029:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10018:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10018:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "9955:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9990:5:13",
														"nodeType": "YulTypedName",
														"src": "9990:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10000:7:13",
														"nodeType": "YulTypedName",
														"src": "10000:7:13",
														"type": ""
													}
												],
												"src": "9955:85:13"
											},
											{
												"body": {
													"nativeSrc": "10078:28:13",
													"nodeType": "YulBlock",
													"src": "10078:28:13",
													"statements": [
														{
															"nativeSrc": "10088:12:13",
															"nodeType": "YulAssignment",
															"src": "10088:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "10095:5:13",
																"nodeType": "YulIdentifier",
																"src": "10095:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10046:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10064:5:13",
														"nodeType": "YulTypedName",
														"src": "10064:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10074:3:13",
														"nodeType": "YulTypedName",
														"src": "10074:3:13",
														"type": ""
													}
												],
												"src": "10046:60:13"
											},
											{
												"body": {
													"nativeSrc": "10180:90:13",
													"nodeType": "YulBlock",
													"src": "10180:90:13",
													"statements": [
														{
															"nativeSrc": "10190:74:13",
															"nodeType": "YulAssignment",
															"src": "10190:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10256:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10256:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "10230:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "10230:25:13"
																				},
																				"nativeSrc": "10230:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10230:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10221:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "10221:8:13"
																		},
																		"nativeSrc": "10221:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10203:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10203:17:13"
																},
																"nativeSrc": "10203:61:13",
																"nodeType": "YulFunctionCall",
																"src": "10203:61:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10190:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "10190:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "10112:158:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10160:5:13",
														"nodeType": "YulTypedName",
														"src": "10160:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10170:9:13",
														"nodeType": "YulTypedName",
														"src": "10170:9:13",
														"type": ""
													}
												],
												"src": "10112:158:13"
											},
											{
												"body": {
													"nativeSrc": "10349:74:13",
													"nodeType": "YulBlock",
													"src": "10349:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10366:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10366:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10410:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10410:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "10371:38:13",
																			"nodeType": "YulIdentifier",
																			"src": "10371:38:13"
																		},
																		"nativeSrc": "10371:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10371:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10359:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:13"
																},
																"nativeSrc": "10359:58:13",
																"nodeType": "YulFunctionCall",
																"src": "10359:58:13"
															},
															"nativeSrc": "10359:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "10359:58:13"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "10276:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10337:5:13",
														"nodeType": "YulTypedName",
														"src": "10337:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10344:3:13",
														"nodeType": "YulTypedName",
														"src": "10344:3:13",
														"type": ""
													}
												],
												"src": "10276:147:13"
											},
											{
												"body": {
													"nativeSrc": "10563:214:13",
													"nodeType": "YulBlock",
													"src": "10563:214:13",
													"statements": [
														{
															"nativeSrc": "10573:26:13",
															"nodeType": "YulAssignment",
															"src": "10573:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10585:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10585:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10596:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10596:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10581:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10581:3:13"
																},
																"nativeSrc": "10581:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10581:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10573:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10573:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10653:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10666:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10666:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10677:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10677:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10662:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:13"
																		},
																		"nativeSrc": "10662:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10662:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10609:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10609:43:13"
																},
																"nativeSrc": "10609:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10609:71:13"
															},
															"nativeSrc": "10609:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10609:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10742:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10742:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10755:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10755:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10766:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10766:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10751:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10751:3:13"
																		},
																		"nativeSrc": "10751:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10751:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "10690:51:13",
																	"nodeType": "YulIdentifier",
																	"src": "10690:51:13"
																},
																"nativeSrc": "10690:80:13",
																"nodeType": "YulFunctionCall",
																"src": "10690:80:13"
															},
															"nativeSrc": "10690:80:13",
															"nodeType": "YulExpressionStatement",
															"src": "10690:80:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10429:348:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10527:9:13",
														"nodeType": "YulTypedName",
														"src": "10527:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10539:6:13",
														"nodeType": "YulTypedName",
														"src": "10539:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10547:6:13",
														"nodeType": "YulTypedName",
														"src": "10547:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10558:4:13",
														"nodeType": "YulTypedName",
														"src": "10558:4:13",
														"type": ""
													}
												],
												"src": "10429:348:13"
											},
											{
												"body": {
													"nativeSrc": "10881:124:13",
													"nodeType": "YulBlock",
													"src": "10881:124:13",
													"statements": [
														{
															"nativeSrc": "10891:26:13",
															"nodeType": "YulAssignment",
															"src": "10891:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10903:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10903:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10914:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10914:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10899:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:13"
																},
																"nativeSrc": "10899:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10899:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10891:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10891:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10971:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10971:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10984:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10984:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10995:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10995:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10980:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10980:3:13"
																		},
																		"nativeSrc": "10980:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10980:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10927:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10927:43:13"
																},
																"nativeSrc": "10927:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10927:71:13"
															},
															"nativeSrc": "10927:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10927:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10783:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10853:9:13",
														"nodeType": "YulTypedName",
														"src": "10853:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10865:6:13",
														"nodeType": "YulTypedName",
														"src": "10865:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10876:4:13",
														"nodeType": "YulTypedName",
														"src": "10876:4:13",
														"type": ""
													}
												],
												"src": "10783:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063402d267d146100595780636e553f651461008957806394dddda1146100b9578063c6e6f592146100c3578063ef8b30f7146100f3575b5f5ffd5b610073600480360381019061006e919061148b565b610123565b60405161008091906114ce565b60405180910390f35b6100a3600480360381019061009e9190611511565b6101a0565b6040516100b091906114ce565b60405180910390f35b6100c1610861565b005b6100dd60048036038101906100d8919061154f565b610938565b6040516100ea91906114ce565b60405180910390f35b61010d6004803603810190610108919061154f565b61098f565b60405161011a91906114ce565b60405180910390f35b5f5f61012d6109d9565b90505f816010015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050640129f6afc08110156101955780640129f6afc061019091906115a7565b610197565b5f5b92505050919050565b5f6101a9610a05565b5f6101b26109d9565b90505f84036101ed576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060090160159054906101000a900460ff1615610236576040517fdeeb694300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6305f5e100841015610274576040517f20d01f0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060090160149054906101000a900460ff16156102bd576040517ff443ecad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f6102c78561098f565b90505f8103610302576040517f77f43aca00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a82600101546103139190611607565b85111561041f575f826018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414806103a55750816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442105b156103dc576040517f23e4dc4300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f90555b816014015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166105295781600e0184908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001826014015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b5f60646028876105399190611637565b6105439190611607565b90505f836005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cd192db5836040518263ffffffff1660e01b81526004016105a291906114ce565b602060405180830381865afa1580156105bd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e1919061168c565b90505f60646063836105f39190611637565b6105fd9190611607565b905087856010015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461064d91906116b7565b925050819055508385600f015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106a291906116b7565b9250508190555087856001015f8282546106bc91906116b7565b9250508190555083856002015f8282546106d691906116b7565b9250508190555042856011015f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061077133308a886004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a52909392919063ffffffff16565b5f83111561078657610784818885610ad4565b505b8673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78a876040516107e59291906116ea565b60405180910390a38673ffffffffffffffffffffffffffffffffffffffff167fca8f7b7916f133917db8d4b2e3566194ad8a65ad8eda78f72f5b9872c059227b8462278d004261083591906116b7565b6040516108439291906116ea565b60405180910390a2839550505050505061085b611389565b92915050565b5f61086a6109d9565b90505f816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146108e4576040517f1297a3a700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e10426108f291906116b7565b816018015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555050565b5f5f6109426109d9565b90505f8160010154148061095957505f8160020154145b15610967578291505061098a565b806001015481600201548461097c9190611637565b6109869190611607565b9150505b919050565b5f5f82036109c9576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109d282610938565b9050919050565b5f5f7f5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d5090508091505090565b60025f5403610a49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a409061176b565b60405180910390fd5b60025f81905550565b610ace848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610a8793929190611798565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611392565b50505050565b5f5f610ade6109d9565b90505f73ffffffffffffffffffffffffffffffffffffffff16816005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b68576040517f567e930e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8303610ba1576040517fc2f5625a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f428585604051602001610bb793929190611832565b60405160208183030381529060405280519060200120905083826003015f828254610be291906116b7565b9250508190555083826012015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610c3791906116b7565b925050819055505f826004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3856005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518363ffffffff1660e01b8152600401610cc492919061186e565b6020604051808303815f875af1158015610ce0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d0491906118ca565b905080610d3d576040517f8a2133b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61012c42610d4c91906116b7565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd30876005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168a6040518463ffffffff1660e01b8152600401610dae93929190611798565b6020604051808303815f875af1158015610dca573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dee91906118ca565b505f856005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166364898d23898c896008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518563ffffffff1660e01b8152600401610e7594939291906118f5565b6020604051808303815f875af1158015610e91573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb5919061168c565b90505f8103610ef0576040517fa9ffdc9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80866019015f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555085601a015f8681526020019081526020015f2089908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f866008015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633641bd025f886040518363ffffffff1660e01b81526004016110039190611950565b60206040518083038185885af115801561101f573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611044919061168c565b905086601b015f8781526020019081526020015f205f9054906101000a900460ff161561109d576040517fe2b1f19400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600187601b015f8881526020019081526020015f205f6101000a81548160ff0219169083151502179055505f81905080886015015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461111a91906116b7565b9250508190555087601d015f8c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060405180608001604052808c81526020014281526020018381526020015f1515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555050505f886019015f8d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508a73ffffffffffffffffffffffffffffffffffffffff167f447dbdbfde1cf015fc6f055a0c7a32d270f68eaf5f9ae394c3d3963a1bbc0a758b62278d004261127291906116b7565b6040516112809291906116ea565b60405180910390a28a73ffffffffffffffffffffffffffffffffffffffff167f923a5113d2791c84f9eeefac7ed7e03aaf0525bcc930d31be60bd241a5133dcc8b846040516112d09291906116ea565b60405180910390a28573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3896005015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f6040518363ffffffff1660e01b81526004016113369291906119ab565b6020604051808303815f875af1158015611352573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137691906118ca565b5080985050505050505050509392505050565b60015f81905550565b5f5f60205f8451602086015f885af1806113b1576040513d5f823e3d81fd5b3d92505f519150505f82146113ca5760018114156113e5565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561142757836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161141e91906119d2565b60405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61145a82611431565b9050919050565b61146a81611450565b8114611474575f5ffd5b50565b5f8135905061148581611461565b92915050565b5f602082840312156114a05761149f61142d565b5b5f6114ad84828501611477565b91505092915050565b5f819050919050565b6114c8816114b6565b82525050565b5f6020820190506114e15f8301846114bf565b92915050565b6114f0816114b6565b81146114fa575f5ffd5b50565b5f8135905061150b816114e7565b92915050565b5f5f604083850312156115275761152661142d565b5b5f611534858286016114fd565b925050602061154585828601611477565b9150509250929050565b5f602082840312156115645761156361142d565b5b5f611571848285016114fd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115b1826114b6565b91506115bc836114b6565b92508282039050818111156115d4576115d361157a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611611826114b6565b915061161c836114b6565b92508261162c5761162b6115da565b5b828204905092915050565b5f611641826114b6565b915061164c836114b6565b925082820261165a816114b6565b915082820484148315176116715761167061157a565b5b5092915050565b5f81519050611686816114e7565b92915050565b5f602082840312156116a1576116a061142d565b5b5f6116ae84828501611678565b91505092915050565b5f6116c1826114b6565b91506116cc836114b6565b92508282019050808211156116e4576116e361157a565b5b92915050565b5f6040820190506116fd5f8301856114bf565b61170a60208301846114bf565b9392505050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611755601f83611711565b915061176082611721565b602082019050919050565b5f6020820190508181035f83015261178281611749565b9050919050565b61179281611450565b82525050565b5f6060820190506117ab5f830186611789565b6117b86020830185611789565b6117c560408301846114bf565b949350505050565b5f819050919050565b6117e76117e2826114b6565b6117cd565b82525050565b5f8160601b9050919050565b5f611803826117ed565b9050919050565b5f611814826117f9565b9050919050565b61182c61182782611450565b61180a565b82525050565b5f61183d82866117d6565b60208201915061184d828561181b565b60148201915061185d82846117d6565b602082019150819050949350505050565b5f6040820190506118815f830185611789565b61188e60208301846114bf565b9392505050565b5f8115159050919050565b6118a981611895565b81146118b3575f5ffd5b50565b5f815190506118c4816118a0565b92915050565b5f602082840312156118df576118de61142d565b5b5f6118ec848285016118b6565b91505092915050565b5f6080820190506119085f8301876114bf565b61191560208301866114bf565b6119226040830185611789565b61192f60608301846114bf565b95945050505050565b5f819050919050565b61194a81611938565b82525050565b5f6020820190506119635f830184611941565b92915050565b5f819050919050565b5f819050919050565b5f61199561199061198b84611969565b611972565b6114b6565b9050919050565b6119a58161197b565b82525050565b5f6040820190506119be5f830185611789565b6119cb602083018461199c565b9392505050565b5f6020820190506119e55f830184611789565b9291505056fea2646970667358221220cb55f1d24912f2016ba5d0110ea184981837ca77f572895fdb7028c4e11a777664736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x402D267D EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x94DDDDA1 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0xF3 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x148B JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB0 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH2 0x861 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH2 0x938 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x154F JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH0 PUSH2 0x12D PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x10 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH5 0x129F6AFC0 DUP2 LT ISZERO PUSH2 0x195 JUMPI DUP1 PUSH5 0x129F6AFC0 PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x15A7 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST PUSH0 JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A9 PUSH2 0xA05 JUMP JUMPDEST PUSH0 PUSH2 0x1B2 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 SUB PUSH2 0x1ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDEEB694300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH4 0x5F5E100 DUP5 LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x20D01F0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xF443ECAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2C7 DUP6 PUSH2 0x98F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x302 JUMPI PUSH1 0x40 MLOAD PUSH32 0x77F43ACA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST DUP6 GT ISZERO PUSH2 0x41F JUMPI PUSH0 DUP3 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ DUP1 PUSH2 0x3A5 JUMPI POP DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x3DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x23E4DC4300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x14 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x529 JUMPI DUP2 PUSH1 0xE ADD DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP3 PUSH1 0x14 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x28 DUP8 PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x543 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xCD192DB5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5BD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x63 DUP4 PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP1 POP DUP8 DUP6 PUSH1 0x10 ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0xF ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 DUP6 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6BC SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP6 PUSH1 0x11 ADD PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x771 CALLER ADDRESS DUP11 DUP9 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA52 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x786 JUMPI PUSH2 0x784 DUP2 DUP9 DUP6 PUSH2 0xAD4 JUMP JUMPDEST POP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP11 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7E5 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCA8F7B7916F133917DB8D4B2E3566194AD8A65AD8EDA78F72F5B9872C059227B DUP5 PUSH3 0x278D00 TIMESTAMP PUSH2 0x835 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x843 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP4 SWAP6 POP POP POP POP POP POP PUSH2 0x85B PUSH2 0x1389 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x86A PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x8E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1297A3A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 TIMESTAMP PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST DUP2 PUSH1 0x18 ADD PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x942 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD EQ DUP1 PUSH2 0x959 JUMPI POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x967 JUMPI DUP3 SWAP2 POP POP PUSH2 0x98A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x986 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x9C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D2 DUP3 PUSH2 0x938 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50 SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA40 SWAP1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xACE DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1392 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xADE PUSH2 0x9D9 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x567E930E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SUB PUSH2 0xBA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC2F5625A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 TIMESTAMP DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBE2 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP3 PUSH1 0x12 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC37 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC4 SWAP3 SWAP2 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xD3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8A2133B500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x12C TIMESTAMP PUSH2 0xD4C SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP8 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEE SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST POP PUSH0 DUP6 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x64898D23 DUP10 DUP13 DUP10 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE75 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE91 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB5 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9FFDC9600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP7 PUSH1 0x19 ADD PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1A ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP10 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP7 PUSH1 0x8 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3641BD02 PUSH0 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1003 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1044 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x1B ADD PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2B1F19400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP8 PUSH1 0x1B ADD PUSH0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP2 SWAP1 POP DUP1 DUP9 PUSH1 0x15 ADD PUSH0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x111A SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1D ADD PUSH0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP13 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH0 DUP9 PUSH1 0x19 ADD PUSH0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x447DBDBFDE1CF015FC6F055A0C7A32D270F68EAF5F9AE394C3D3963A1BBC0A75 DUP12 PUSH3 0x278D00 TIMESTAMP PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1280 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x923A5113D2791C84F9EEEFAC7ED7E03AAF0525BCC930D31BE60BD241A5133DCC DUP12 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12D0 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP10 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1336 SWAP3 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1352 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x18CA JUMP JUMPDEST POP DUP1 SWAP9 POP POP POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x13CA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x13E5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1427 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141E SWAP2 SWAP1 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x145A DUP3 PUSH2 0x1431 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146A DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP2 EQ PUSH2 0x1474 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1485 DUP2 PUSH2 0x1461 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14AD DUP5 DUP3 DUP6 ADD PUSH2 0x1477 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14C8 DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x14FA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150B DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1527 JUMPI PUSH2 0x1526 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1534 DUP6 DUP3 DUP7 ADD PUSH2 0x14FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1545 DUP6 DUP3 DUP7 ADD PUSH2 0x1477 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1564 JUMPI PUSH2 0x1563 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1571 DUP5 DUP3 DUP6 ADD PUSH2 0x14FD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15B1 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x157A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1611 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x161C DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x162C JUMPI PUSH2 0x162B PUSH2 0x15DA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1641 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x164C DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x165A DUP2 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1671 JUMPI PUSH2 0x1670 PUSH2 0x157A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1686 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A1 JUMPI PUSH2 0x16A0 PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1678 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16C1 DUP3 PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16CC DUP4 PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x157A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH0 DUP4 ADD DUP6 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1755 PUSH1 0x1F DUP4 PUSH2 0x1711 JUMP JUMPDEST SWAP2 POP PUSH2 0x1760 DUP3 PUSH2 0x1721 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1782 DUP2 PUSH2 0x1749 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1792 DUP2 PUSH2 0x1450 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17AB PUSH0 DUP4 ADD DUP7 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x17B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x17C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E7 PUSH2 0x17E2 DUP3 PUSH2 0x14B6 JUMP JUMPDEST PUSH2 0x17CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1803 DUP3 PUSH2 0x17ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1814 DUP3 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x182C PUSH2 0x1827 DUP3 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183D DUP3 DUP7 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x184D DUP3 DUP6 PUSH2 0x181B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x185D DUP3 DUP5 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1881 PUSH0 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x188E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18A9 DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x18C4 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DF JUMPI PUSH2 0x18DE PUSH2 0x142D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18EC DUP5 DUP3 DUP6 ADD PUSH2 0x18B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1908 PUSH0 DUP4 ADD DUP8 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x1915 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x14BF JUMP JUMPDEST PUSH2 0x1922 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x192F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14BF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x1938 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1963 PUSH0 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1995 PUSH2 0x1990 PUSH2 0x198B DUP5 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x1972 JUMP JUMPDEST PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A5 DUP2 PUSH2 0x197B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19BE PUSH0 DUP4 ADD DUP6 PUSH2 0x1789 JUMP JUMPDEST PUSH2 0x19CB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x199C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB SSTORE CALL 0xD2 BLOBHASH SLT CALLCODE ADD PUSH12 0xA5D0110EA184981837CA77F5 PUSH19 0x895FDB7028C4E11A777664736F6C634300081D STOP CALLER ",
							"sourceMap": "1319:7469:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5267:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2336:2380;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8489:296;;;:::i;:::-;;4931:324;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4753:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5267:346;5326:7;5346:36;5385:27;:25;:27::i;:::-;5346:66;;5423:17;5443:2;:15;;:25;5459:8;5443:25;;;;;;;;;;;;;;;;5423:45;;1538:10;5499:9;:33;;:106;;5596:9;1538:10;5573:32;;;;:::i;:::-;5499:106;;;5552:1;5499:106;5479:126;;;;5267:346;;;:::o;2336:2380::-;2443:7;2261:21:3;:19;:21::i;:::-;2463:36:11::1;2502:27;:25;:27::i;:::-;2463:66;;2588:1;2578:6;:11:::0;2574:36:::1;;2598:12;;;;;;;;;;;;;;2574:36;2625:2;:17;;;;;;;;;;;;2621:46;;;2651:16;;;;;;;;;;;;;;2621:46;1601:9;2682:6;:27;2678:62;;;2718:22;;;;;;;;;;;;;;2678:62;2755:2;:20;;;;;;;;;;;;2751:52;;;2784:19;;;;;;;;;;;;;;2751:52;2853:14;2870:22;2885:6;2870:14;:22::i;:::-;2853:39;;2917:1;2907:6;:11:::0;2903:40:::1;;2927:16;;;;;;;;;;;;;;2903:40;3050:2;3033;:14;;;:19;;;;:::i;:::-;3024:6;:28;3020:324;;;3132:1;3091:2;:25;;:37;3117:10;3091:37;;;;;;;;;;;;;;;;:42;:118;;;;3172:2;:25;;:37;3198:10;3172:37;;;;;;;;;;;;;;;;3154:15;:55;3091:118;3069:190;;;3232:27;;;;;;;;;;;;;;3069:190;3295:2;:25;;:37;3321:10;3295:37;;;;;;;;;;;;;;;3288:44;;;3020:324;3409:2;:17;;:27;3427:8;3409:27;;;;;;;;;;;;;;;;;;;;;;;;;3404:141;;3453:2;:16;;3475:8;3453:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:4;3499:2;:17;;:27;3517:8;3499:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;3404:141;3609:21;3661:3;1660:2;3634:6;:23;;;;:::i;:::-;3633:31;;;;:::i;:::-;3609:55;;3741:19;3777:2;:15;;;;;;;;;;;;3763:46;;;3810:13;3763:61;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3741:83;;3835:22;3881:3;3875:2;3861:11;:16;;;;:::i;:::-;3860:24;;;;:::i;:::-;3835:49;;3959:6;3930:2;:15;;:25;3946:8;3930:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;4001:6;3976:2;:11;;:21;3988:8;3976:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;4036:6;4018:2;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;4071:6;4053:2;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;4121:15;4088:2;:20;;:30;4109:8;4088:30;;;;;;;;;;;;;;;:48;;;;4204:82;4252:10;4272:4;4279:6;4211:2;:22;;;;;;;;;;;;4204:47;;;;:82;;;;;;:::i;:::-;4378:1;4362:13;:17;4358:110;;;4396:60;4416:14;4432:8;4442:13;4396:19;:60::i;:::-;;4358:110;4513:8;4493:45;;4501:10;4493:45;;;4523:6;4531;4493:45;;;;;;;:::i;:::-;;;;;;;;4583:8;4554:120;;;4606:13;1709:7;4634:15;:29;;;;:::i;:::-;4554:120;;;;;;;:::i;:::-;;;;;;;;4702:6;4695:13;;;;;;;2303:20:3::0;:18;:20::i;:::-;2336:2380:11;;;;:::o;8489:296::-;8538:36;8577:27;:25;:27::i;:::-;8538:66;;8660:1;8619:2;:25;;:37;8645:10;8619:37;;;;;;;;;;;;;;;;:42;8615:77;;8670:22;;;;;;;;;;;;;;8615:77;1767:7;8743:15;:34;;;;:::i;:::-;8703:2;:25;;:37;8729:10;8703:37;;;;;;;;;;;;;;;:74;;;;8527:258;8489:296::o;4931:324::-;4993:7;5013:36;5052:27;:25;:27::i;:::-;5013:66;;5122:1;5104:2;:14;;;:19;:42;;;;5145:1;5127:2;:14;;;:19;5104:42;5100:88;;;5170:6;5163:13;;;;;5100:88;5233:2;:14;;;5215:2;:14;;;5206:6;:23;;;;:::i;:::-;5205:42;;;;:::i;:::-;5198:49;;;4931:324;;;;:::o;4753:166::-;4814:7;4848:1;4838:6;:11;4834:36;;4858:12;;;;;;;;;;;;;;4834:36;4888:23;4904:6;4888:15;:23::i;:::-;4881:30;;4753:166;;;:::o;2118:194:12:-;2163:21;2197:16;135:39;2197:43;;2286:8;2275:19;;2260:45;2118:194;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1618:188:5:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;5625:2852:11:-;5772:7;5792:36;5831:27;:25;:27::i;:::-;5792:66;;5910:1;5883:29;;:2;:15;;;;;;;;;;;;:29;;;5879:62;;5921:20;;;;;;;;;;;;;;5879:62;5973:1;5956:13;:18;5952:47;;5983:16;;;;;;;;;;;;;;5952:47;6020:15;6079;6096:11;6109:13;6062:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6038:96;;;;;;6020:114;;6178:13;6155:2;:19;;;:36;;;;;;;:::i;:::-;;;;;;;;6236:13;6202:2;:17;;:30;6220:11;6202:30;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;6307:10;6326:2;:22;;;;;;;;;;;;6307:42;;6360:12;6375:4;:12;;;6388:2;:15;;;;;;;;;;;;6405:13;6375:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6360:59;;6435:7;6430:41;;6451:20;;;;;;;;;;;;;;6430:41;6544:16;6581:3;6563:15;:21;;;;:::i;:::-;6544:40;;6648:4;:17;;;6674:4;6681:2;:15;;;;;;;;;;;;6698:13;6648:64;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6764:19;6800:2;:15;;;;;;;;;;;;6786:50;;;6851:13;6879:12;6906:2;:19;;;;;;;;;;;;6940:8;6786:173;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6764:195;;6999:1;6984:11;:16;6980:44;;7009:15;;;;;;;;;;;;;;6980:44;7123:11;7088:2;:19;;:32;7108:11;7088:32;;;;;;;;;;;;;;;:46;;;;7193:2;:15;;:24;7209:7;7193:24;;;;;;;;;;;7223:11;7193:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7296:22;7331:2;:19;;;;;;;;;;;;7321:49;;;7392:1;7405:7;7321:92;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7296:117;;7438:2;:19;;:28;7458:7;7438:28;;;;;;;;;;;;;;;;;;;;;7434:64;;;7475:23;;;;;;;;;;;;;;7434:64;7540:4;7509:2;:19;;:28;7529:7;7509:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;7600:17;7620:14;7600:34;;7682:9;7645:2;:20;;:33;7666:11;7645:33;;;;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;;;;;7753:2;:21;;:34;7775:11;7753:34;;;;;;;;;;;;;;;7807:207;;;;;;;;7863:13;7807:207;;;;7906:15;7807:207;;;;7954:9;7807:207;;;;7993:5;7807:207;;;;;7753:272;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8113:1;8078:2;:19;;:32;8098:11;8078:32;;;;;;;;;;;;;;;:36;;;;8168:11;8140:122;;;8194:13;1709:7;8222:15;:29;;;;:::i;:::-;8140:122;;;;;;;:::i;:::-;;;;;;;;8309:11;8288:64;;;8322:13;8337:14;8288:64;;;;;;;:::i;:::-;;;;;;;;8400:4;:12;;;8413:2;:15;;;;;;;;;;;;8430:1;8400:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8460:9;8453:16;;;;;;;;;;5625:2852;;;;;:::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;8370:720:5:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:180::-;2747:77;2744:1;2737:88;2844:4;2841:1;2834:15;2868:4;2865:1;2858:15;2885:194;2925:4;2945:20;2963:1;2945:20;:::i;:::-;2940:25;;2979:20;2997:1;2979:20;:::i;:::-;2974:25;;3023:1;3020;3016:9;3008:17;;3047:1;3041:4;3038:11;3035:37;;;3052:18;;:::i;:::-;3035:37;2885:194;;;;:::o;3085:180::-;3133:77;3130:1;3123:88;3230:4;3227:1;3220:15;3254:4;3251:1;3244:15;3271:185;3311:1;3328:20;3346:1;3328:20;:::i;:::-;3323:25;;3362:20;3380:1;3362:20;:::i;:::-;3357:25;;3401:1;3391:35;;3406:18;;:::i;:::-;3391:35;3448:1;3445;3441:9;3436:14;;3271:185;;;;:::o;3462:410::-;3502:7;3525:20;3543:1;3525:20;:::i;:::-;3520:25;;3559:20;3577:1;3559:20;:::i;:::-;3554:25;;3614:1;3611;3607:9;3636:30;3654:11;3636:30;:::i;:::-;3625:41;;3815:1;3806:7;3802:15;3799:1;3796:22;3776:1;3769:9;3749:83;3726:139;;3845:18;;:::i;:::-;3726:139;3510:362;3462:410;;;;:::o;3878:143::-;3935:5;3966:6;3960:13;3951:22;;3982:33;4009:5;3982:33;:::i;:::-;3878:143;;;;:::o;4027:351::-;4097:6;4146:2;4134:9;4125:7;4121:23;4117:32;4114:119;;;4152:79;;:::i;:::-;4114:119;4272:1;4297:64;4353:7;4344:6;4333:9;4329:22;4297:64;:::i;:::-;4287:74;;4243:128;4027:351;;;;:::o;4384:191::-;4424:3;4443:20;4461:1;4443:20;:::i;:::-;4438:25;;4477:20;4495:1;4477:20;:::i;:::-;4472:25;;4520:1;4517;4513:9;4506:16;;4541:3;4538:1;4535:10;4532:36;;;4548:18;;:::i;:::-;4532:36;4384:191;;;;:::o;4581:332::-;4702:4;4740:2;4729:9;4725:18;4717:26;;4753:71;4821:1;4810:9;4806:17;4797:6;4753:71;:::i;:::-;4834:72;4902:2;4891:9;4887:18;4878:6;4834:72;:::i;:::-;4581:332;;;;;:::o;4919:169::-;5003:11;5037:6;5032:3;5025:19;5077:4;5072:3;5068:14;5053:29;;4919:169;;;;:::o;5094:181::-;5234:33;5230:1;5222:6;5218:14;5211:57;5094:181;:::o;5281:366::-;5423:3;5444:67;5508:2;5503:3;5444:67;:::i;:::-;5437:74;;5520:93;5609:3;5520:93;:::i;:::-;5638:2;5633:3;5629:12;5622:19;;5281:366;;;:::o;5653:419::-;5819:4;5857:2;5846:9;5842:18;5834:26;;5906:9;5900:4;5896:20;5892:1;5881:9;5877:17;5870:47;5934:131;6060:4;5934:131;:::i;:::-;5926:139;;5653:419;;;:::o;6078:118::-;6165:24;6183:5;6165:24;:::i;:::-;6160:3;6153:37;6078:118;;:::o;6202:442::-;6351:4;6389:2;6378:9;6374:18;6366:26;;6402:71;6470:1;6459:9;6455:17;6446:6;6402:71;:::i;:::-;6483:72;6551:2;6540:9;6536:18;6527:6;6483:72;:::i;:::-;6565;6633:2;6622:9;6618:18;6609:6;6565:72;:::i;:::-;6202:442;;;;;;:::o;6650:79::-;6689:7;6718:5;6707:16;;6650:79;;;:::o;6735:157::-;6840:45;6860:24;6878:5;6860:24;:::i;:::-;6840:45;:::i;:::-;6835:3;6828:58;6735:157;;:::o;6898:94::-;6931:8;6979:5;6975:2;6971:14;6950:35;;6898:94;;;:::o;6998:::-;7037:7;7066:20;7080:5;7066:20;:::i;:::-;7055:31;;6998:94;;;:::o;7098:100::-;7137:7;7166:26;7186:5;7166:26;:::i;:::-;7155:37;;7098:100;;;:::o;7204:157::-;7309:45;7329:24;7347:5;7329:24;:::i;:::-;7309:45;:::i;:::-;7304:3;7297:58;7204:157;;:::o;7367:538::-;7535:3;7550:75;7621:3;7612:6;7550:75;:::i;:::-;7650:2;7645:3;7641:12;7634:19;;7663:75;7734:3;7725:6;7663:75;:::i;:::-;7763:2;7758:3;7754:12;7747:19;;7776:75;7847:3;7838:6;7776:75;:::i;:::-;7876:2;7871:3;7867:12;7860:19;;7896:3;7889:10;;7367:538;;;;;;:::o;7911:332::-;8032:4;8070:2;8059:9;8055:18;8047:26;;8083:71;8151:1;8140:9;8136:17;8127:6;8083:71;:::i;:::-;8164:72;8232:2;8221:9;8217:18;8208:6;8164:72;:::i;:::-;7911:332;;;;;:::o;8249:90::-;8283:7;8326:5;8319:13;8312:21;8301:32;;8249:90;;;:::o;8345:116::-;8415:21;8430:5;8415:21;:::i;:::-;8408:5;8405:32;8395:60;;8451:1;8448;8441:12;8395:60;8345:116;:::o;8467:137::-;8521:5;8552:6;8546:13;8537:22;;8568:30;8592:5;8568:30;:::i;:::-;8467:137;;;;:::o;8610:345::-;8677:6;8726:2;8714:9;8705:7;8701:23;8697:32;8694:119;;;8732:79;;:::i;:::-;8694:119;8852:1;8877:61;8930:7;8921:6;8910:9;8906:22;8877:61;:::i;:::-;8867:71;;8823:125;8610:345;;;;:::o;8961:553::-;9138:4;9176:3;9165:9;9161:19;9153:27;;9190:71;9258:1;9247:9;9243:17;9234:6;9190:71;:::i;:::-;9271:72;9339:2;9328:9;9324:18;9315:6;9271:72;:::i;:::-;9353;9421:2;9410:9;9406:18;9397:6;9353:72;:::i;:::-;9435;9503:2;9492:9;9488:18;9479:6;9435:72;:::i;:::-;8961:553;;;;;;;:::o;9520:77::-;9557:7;9586:5;9575:16;;9520:77;;;:::o;9603:118::-;9690:24;9708:5;9690:24;:::i;:::-;9685:3;9678:37;9603:118;;:::o;9727:222::-;9820:4;9858:2;9847:9;9843:18;9835:26;;9871:71;9939:1;9928:9;9924:17;9915:6;9871:71;:::i;:::-;9727:222;;;;:::o;9955:85::-;10000:7;10029:5;10018:16;;9955:85;;;:::o;10046:60::-;10074:3;10095:5;10088:12;;10046:60;;;:::o;10112:158::-;10170:9;10203:61;10221:42;10230:32;10256:5;10230:32;:::i;:::-;10221:42;:::i;:::-;10203:61;:::i;:::-;10190:74;;10112:158;;;:::o;10276:147::-;10371:45;10410:5;10371:45;:::i;:::-;10366:3;10359:58;10276:147;;:::o;10429:348::-;10558:4;10596:2;10585:9;10581:18;10573:26;;10609:71;10677:1;10666:9;10662:17;10653:6;10609:71;:::i;:::-;10690:80;10766:2;10755:9;10751:18;10742:6;10690:80;:::i;:::-;10429:348;;;;;:::o;10783:222::-;10876:4;10914:2;10903:9;10899:18;10891:26;;10927:71;10995:1;10984:9;10980:17;10971:6;10927:71;:::i;:::-;10783:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1337800",
								"executionCost": "23508",
								"totalCost": "1361308"
							},
							"external": {
								"convertToShares(uint256)": "infinite",
								"deposit(uint256,address)": "infinite",
								"maxDeposit(address)": "infinite",
								"previewDeposit(uint256)": "infinite",
								"queueLargeDeposit()": "infinite"
							},
							"internal": {
								"safeTransferAndSwap(uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 8788,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb55f1d24912f2016ba5d0110ea184981837ca77f572895fdb7028c4e11a777664736f6c634300081d0033",
									".code": [
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "402D267D"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "6E553F65"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "94DDDDA1"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "C6E6F592"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "EF8B30F7"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 8788,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5267,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5267,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 5267,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2336,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2336,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 2336,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8489,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4931,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4931,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4931,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 4753,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 4753,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 4753,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5326,
											"end": 5333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5382,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5385,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 5385,
											"end": 5412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5385,
											"end": 5412,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5385,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5346,
											"end": 5412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5445,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5467,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5468,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5468,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5423,
											"end": 5468,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1548,
											"name": "PUSH",
											"source": 11,
											"value": "129F6AFC0"
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5532,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5532,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5596,
											"end": 5605,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1538,
											"end": 1548,
											"name": "PUSH",
											"source": 11,
											"value": "129F6AFC0"
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5573,
											"end": 5605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5573,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5552,
											"end": 5553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 5499,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5479,
											"end": 5605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2443,
											"end": 2450,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2502,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2502,
											"end": 2529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2502,
											"end": 2529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2502,
											"end": 2529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2588,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2584,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2578,
											"end": 2589,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2574,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2574,
											"end": 2610,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2610,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2574,
											"end": 2610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2574,
											"end": 2610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2627,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2625,
											"end": 2642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2667,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2621,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "DEEB694300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2667,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2621,
											"end": 2667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5F5E100"
										},
										{
											"begin": 2682,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2682,
											"end": 2709,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2740,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2678,
											"end": 2740,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20D01F0600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2740,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2740,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2678,
											"end": 2740,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2757,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2803,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2751,
											"end": 2803,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F443ECAD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2784,
											"end": 2803,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2751,
											"end": 2803,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2751,
											"end": 2803,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2885,
											"end": 2891,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2870,
											"end": 2892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2870,
											"end": 2892,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2917,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2918,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2903,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "77F43ACA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2927,
											"end": 2943,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2903,
											"end": 2943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2903,
											"end": 2943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 3033,
											"end": 3035,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3033,
											"end": 3047,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3047,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3033,
											"end": 3052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3033,
											"end": 3052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3024,
											"end": 3030,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3024,
											"end": 3052,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3020,
											"end": 3344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3020,
											"end": 3344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 3020,
											"end": 3344,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3091,
											"end": 3116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3127,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3133,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3172,
											"end": 3197,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3208,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3169,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3209,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3091,
											"end": 3209,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3069,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "23E4DC4300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3069,
											"end": 3259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3069,
											"end": 3259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3297,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 3295,
											"end": 3320,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3331,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3332,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3288,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3288,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3020,
											"end": 3344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 3020,
											"end": 3344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 3409,
											"end": 3426,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3409,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3404,
											"end": 3545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3455,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 3453,
											"end": 3469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3483,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3529,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3499,
											"end": 3501,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 3499,
											"end": 3516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3525,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3499,
											"end": 3533,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 3404,
											"end": 3545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1660,
											"end": 1662,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 3634,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3634,
											"end": 3657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 3634,
											"end": 3657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3633,
											"end": 3664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3633,
											"end": 3664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3609,
											"end": 3664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3779,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3777,
											"end": 3792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "CD192DB5"
										},
										{
											"begin": 3810,
											"end": 3823,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 3763,
											"end": 3824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3763,
											"end": 3824,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3763,
											"end": 3824,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3824,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3824,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3881,
											"end": 3884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3875,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3861,
											"end": 3872,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 3861,
											"end": 3877,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3861,
											"end": 3877,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 3860,
											"end": 3884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3932,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 3930,
											"end": 3945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3954,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3930,
											"end": 3965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4001,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3978,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F"
										},
										{
											"begin": 3976,
											"end": 3987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3996,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 3976,
											"end": 4007,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 4007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4036,
											"end": 4042,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4020,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4018,
											"end": 4032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4018,
											"end": 4042,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4018,
											"end": 4042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4071,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4055,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4053,
											"end": 4067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4053,
											"end": 4077,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4077,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4121,
											"end": 4136,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4090,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4088,
											"end": 4108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4118,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4136,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4136,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4088,
											"end": 4136,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 4252,
											"end": 4262,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4272,
											"end": 4276,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4285,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4213,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4211,
											"end": 4233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4204,
											"end": 4251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4204,
											"end": 4251,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 4204,
											"end": 4286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4378,
											"end": 4379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4375,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4379,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4468,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4358,
											"end": 4468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4416,
											"end": 4430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4455,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 4396,
											"end": 4456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 4396,
											"end": 4456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4456,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4358,
											"end": 4468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4358,
											"end": 4468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4521,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4501,
											"end": 4511,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 4523,
											"end": 4529,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 4531,
											"end": 4537,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 4493,
											"end": 4538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4493,
											"end": 4538,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4591,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "CA8F7B7916F133917DB8D4B2E3566194AD8A65AD8EDA78F72F5B9872C059227B"
										},
										{
											"begin": 4606,
											"end": 4619,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "278D00"
										},
										{
											"begin": 4634,
											"end": 4649,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4634,
											"end": 4663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 4634,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 4554,
											"end": 4674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4554,
											"end": 4674,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4702,
											"end": 4708,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4695,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2336,
											"end": 4716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8489,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 8577,
											"end": 8602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8577,
											"end": 8604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8577,
											"end": 8604,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 8577,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8604,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8660,
											"end": 8661,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8644,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 8619,
											"end": 8644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8655,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8656,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8661,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8615,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 8615,
											"end": 8692,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "PUSH",
											"source": 11,
											"value": "1297A3A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8670,
											"end": 8692,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8615,
											"end": 8692,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 8615,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 11,
											"value": "E10"
										},
										{
											"begin": 8743,
											"end": 8758,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 8743,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8743,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8739,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8740,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8703,
											"end": 8777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8527,
											"end": 8785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8489,
											"end": 8785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4993,
											"end": 5000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5049,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5052,
											"end": 5077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 5052,
											"end": 5079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5079,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 5052,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5013,
											"end": 5079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5013,
											"end": 5079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5106,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5118,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5104,
											"end": 5118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5123,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5145,
											"end": 5146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5127,
											"end": 5141,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5127,
											"end": 5141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5127,
											"end": 5141,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5127,
											"end": 5146,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5188,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5100,
											"end": 5188,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5170,
											"end": 5176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 5163,
											"end": 5176,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5188,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 5100,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5247,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5233,
											"end": 5247,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5215,
											"end": 5229,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5212,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 5206,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 5206,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5205,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5205,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4849,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4834,
											"end": 4870,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4870,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4834,
											"end": 4870,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 4834,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4888,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4888,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 4888,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4881,
											"end": 4911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2312,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2118,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2163,
											"end": 2184,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 174,
											"name": "PUSH",
											"source": 12,
											"value": "5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50"
										},
										{
											"begin": 2197,
											"end": 2240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2286,
											"end": 2294,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2260,
											"end": 2305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2312,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5772,
											"end": 5779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5831,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 5831,
											"end": 5858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 5831,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5858,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5792,
											"end": 5858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5898,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5883,
											"end": 5912,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5879,
											"end": 5941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5879,
											"end": 5941,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 11,
											"value": "567E930E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5879,
											"end": 5941,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 5879,
											"end": 5941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5969,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5956,
											"end": 5974,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5952,
											"end": 5999,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "C2F5625A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5952,
											"end": 5999,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 5952,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6094,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6096,
											"end": 6107,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6122,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 6062,
											"end": 6123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6062,
											"end": 6123,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6038,
											"end": 6134,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6134,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6157,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6174,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6155,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6155,
											"end": 6191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6249,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6219,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 6202,
											"end": 6219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6231,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6232,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6202,
											"end": 6249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6249,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6328,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6326,
											"end": 6348,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6349,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6307,
											"end": 6349,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6379,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6387,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 6388,
											"end": 6390,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6405,
											"end": 6418,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 6375,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6375,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 6375,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6435,
											"end": 6442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "PUSH",
											"source": 11,
											"value": "8A2133B500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6471,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6584,
											"name": "PUSH",
											"source": 11,
											"value": "12C"
										},
										{
											"begin": 6563,
											"end": 6578,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6563,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6683,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6698,
											"end": 6711,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 6648,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6648,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6800,
											"end": 6815,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6836,
											"name": "PUSH",
											"source": 11,
											"value": "64898D23"
										},
										{
											"begin": 6851,
											"end": 6864,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6908,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6906,
											"end": 6925,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6940,
											"end": 6948,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 6786,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 6786,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 6786,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6959,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6764,
											"end": 6959,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6984,
											"end": 6995,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6984,
											"end": 7000,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "PUSH",
											"source": 11,
											"value": "A9FFDC9600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7024,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 6980,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7123,
											"end": 7134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7090,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7107,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 7088,
											"end": 7107,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7119,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7134,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7134,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7195,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7208,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 7193,
											"end": 7208,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7216,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7217,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7223,
											"end": 7234,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7193,
											"end": 7235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7318,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7331,
											"end": 7350,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7370,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7370,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7370,
											"name": "PUSH",
											"source": 11,
											"value": "3641BD02"
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7412,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 7321,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 7321,
											"end": 7413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 7321,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7413,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7440,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7457,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7438,
											"end": 7457,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7465,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "PUSH",
											"source": 11,
											"value": "E2B1F19400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7498,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 7434,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7540,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7536,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7537,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7600,
											"end": 7634,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 7645,
											"end": 7665,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7666,
											"end": 7677,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 7645,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7691,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7774,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 7753,
											"end": 7774,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7786,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7787,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7863,
											"end": 7876,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7906,
											"end": 7921,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7954,
											"end": 7963,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7993,
											"end": 7998,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 8014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 8025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8113,
											"end": 8114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8078,
											"end": 8080,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8097,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8078,
											"end": 8097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8109,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8078,
											"end": 8110,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8114,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8168,
											"end": 8179,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "447DBDBFDE1CF015FC6F055A0C7A32D270F68EAF5F9AE394C3D3963A1BBC0A75"
										},
										{
											"begin": 8194,
											"end": 8207,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1716,
											"name": "PUSH",
											"source": 11,
											"value": "278D00"
										},
										{
											"begin": 8222,
											"end": 8237,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 8222,
											"end": 8251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 8222,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 8140,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8262,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 8309,
											"end": 8320,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH",
											"source": 11,
											"value": "923A5113D2791C84F9EEEFAC7ED7E03AAF0525BCC930D31BE60BD241A5133DCC"
										},
										{
											"begin": 8322,
											"end": 8335,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 8337,
											"end": 8351,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 8288,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8352,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8412,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 8413,
											"end": 8415,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8413,
											"end": 8428,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 8400,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 8400,
											"end": 8432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8400,
											"end": 8432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8460,
											"end": 8469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5625,
											"end": 8477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2006,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 2007,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2012,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2015,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 2015,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 1977,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2135,
											"end": 2136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2264,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2233,
											"end": 2351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2470,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2475,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2478,
											"end": 2557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2478,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2440,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2657,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2623,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2569,
											"end": 2686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2364,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2699,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2699,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2824,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2737,
											"end": 2825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2849,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2873,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2925,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2963,
											"end": 2964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2945,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2945,
											"end": 2965,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2945,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2965,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 2979,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2979,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2974,
											"end": 2999,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2974,
											"end": 2999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3024,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3020,
											"end": 3021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3049,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3072,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 3035,
											"end": 3072,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3052,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3072,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 3035,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 3079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3085,
											"end": 3265,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 3085,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3210,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3130,
											"end": 3131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3211,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3234,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3235,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3259,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3328,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3348,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3323,
											"end": 3348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3362,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3382,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3401,
											"end": 3402,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 3406,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3441,
											"end": 3450,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 3450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3436,
											"end": 3450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3271,
											"end": 3456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3502,
											"end": 3509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3543,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3525,
											"end": 3545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3525,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3545,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3559,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3559,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3579,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3654,
											"end": 3665,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 3636,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3625,
											"end": 3666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3625,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3802,
											"end": 3817,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3796,
											"end": 3818,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3776,
											"end": 3777,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3832,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3845,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3726,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3510,
											"end": 3872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3462,
											"end": 3872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3935,
											"end": 3940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3973,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3982,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3982,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 3982,
											"end": 4015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3982,
											"end": 4015,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 3982,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3878,
											"end": 4021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4125,
											"end": 4132,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4121,
											"end": 4144,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4149,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4233,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 4114,
											"end": 4233,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4152,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 4152,
											"end": 4231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4231,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4152,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4233,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 4114,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4353,
											"end": 4360,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4344,
											"end": 4350,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4329,
											"end": 4351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 4297,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4361,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4297,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4287,
											"end": 4361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4287,
											"end": 4361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4243,
											"end": 4371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4027,
											"end": 4378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4424,
											"end": 4427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4443,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4443,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4495,
											"end": 4496,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4477,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4472,
											"end": 4497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4506,
											"end": 4522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4541,
											"end": 4544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4535,
											"end": 4545,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4548,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4548,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4532,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4384,
											"end": 4575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4740,
											"end": 4742,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4743,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4717,
											"end": 4743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 4821,
											"end": 4822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4806,
											"end": 4823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4753,
											"end": 4824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 4753,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4902,
											"end": 4904,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4887,
											"end": 4905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4878,
											"end": 4884,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4834,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4834,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4581,
											"end": 4913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5037,
											"end": 5043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5032,
											"end": 5035,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5025,
											"end": 5044,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5077,
											"end": 5081,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5072,
											"end": 5075,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5053,
											"end": 5082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5053,
											"end": 5082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4919,
											"end": 5088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5275,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5094,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5267,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5218,
											"end": 5232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5508,
											"end": 5510,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5503,
											"end": 5506,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 5444,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5511,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 5520,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5636,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5629,
											"end": 5641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 5859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5893,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5877,
											"end": 5894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 5917,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 5934,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5926,
											"end": 6065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5926,
											"end": 6065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5653,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6196,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 6078,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6183,
											"end": 6188,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 6165,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6165,
											"end": 6189,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6165,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6153,
											"end": 6190,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6351,
											"end": 6355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6374,
											"end": 6392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6366,
											"end": 6392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6472,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6452,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 6402,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6402,
											"end": 6473,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6402,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6540,
											"end": 6549,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 6483,
											"end": 6555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 6555,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6483,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6622,
											"end": 6631,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6618,
											"end": 6636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 6565,
											"end": 6637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6637,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6565,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6202,
											"end": 6644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6729,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 6650,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6689,
											"end": 6696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6707,
											"end": 6723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6729,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6892,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 6735,
											"end": 6892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6860,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6878,
											"end": 6883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6860,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 6860,
											"end": 6884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6860,
											"end": 6884,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6860,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 6840,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6885,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6840,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6886,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6735,
											"end": 6892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6992,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 6898,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6971,
											"end": 6985,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6985,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6992,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6992,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6992,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6898,
											"end": 6992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7092,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 6998,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7080,
											"end": 7085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 7066,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7086,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7092,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7092,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7092,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6998,
											"end": 7092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7198,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7098,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 7186,
											"end": 7191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 7166,
											"end": 7192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7192,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 7166,
											"end": 7192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7361,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7204,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7329,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7347,
											"end": 7352,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 7329,
											"end": 7353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7329,
											"end": 7353,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7329,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7309,
											"end": 7354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7309,
											"end": 7354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7304,
											"end": 7307,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7535,
											"end": 7538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7550,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7550,
											"end": 7625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7625,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 7550,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7650,
											"end": 7652,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7641,
											"end": 7653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7734,
											"end": 7737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7725,
											"end": 7731,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7663,
											"end": 7738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7663,
											"end": 7738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 7765,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7758,
											"end": 7761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7847,
											"end": 7850,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7844,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7776,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7851,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7776,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7867,
											"end": 7879,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8072,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8047,
											"end": 8073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8149,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8136,
											"end": 8153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 8083,
											"end": 8154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8083,
											"end": 8154,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8083,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8164,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 8232,
											"end": 8234,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8230,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8164,
											"end": 8236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 8164,
											"end": 8236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8164,
											"end": 8236,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 8164,
											"end": 8236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8339,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 8249,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8319,
											"end": 8332,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8333,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8339,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8249,
											"end": 8339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8461,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 8345,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 8430,
											"end": 8435,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 8415,
											"end": 8436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8436,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 8415,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8405,
											"end": 8437,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8395,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 8395,
											"end": 8455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8451,
											"end": 8452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8453,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8395,
											"end": 8455,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 8395,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8552,
											"end": 8558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8559,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 8592,
											"end": 8597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 8568,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8598,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 8568,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8467,
											"end": 8604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8714,
											"end": 8723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8712,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8701,
											"end": 8724,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 8729,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8813,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8694,
											"end": 8813,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 8732,
											"end": 8811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 8732,
											"end": 8811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8811,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 8732,
											"end": 8811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8694,
											"end": 8813,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 8694,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 8930,
											"end": 8937,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8921,
											"end": 8927,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8910,
											"end": 8919,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8906,
											"end": 8928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8877,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 8877,
											"end": 8938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8877,
											"end": 8938,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 8877,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8938,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8823,
											"end": 8948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9176,
											"end": 9179,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9165,
											"end": 9174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9161,
											"end": 9180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 9258,
											"end": 9259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9234,
											"end": 9240,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9190,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9261,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 9190,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9339,
											"end": 9341,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9328,
											"end": 9337,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9315,
											"end": 9321,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9271,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9343,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 9271,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 9421,
											"end": 9423,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9406,
											"end": 9424,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 9353,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9353,
											"end": 9425,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 9353,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9435,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9492,
											"end": 9501,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9485,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9435,
											"end": 9507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9435,
											"end": 9507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9435,
											"end": 9507,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 9435,
											"end": 9507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 9514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9597,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 9520,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9564,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9597,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9520,
											"end": 9597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9721,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 9603,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 9708,
											"end": 9713,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 9690,
											"end": 9714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 9690,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9685,
											"end": 9688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9678,
											"end": 9715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9847,
											"end": 9856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9843,
											"end": 9861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9835,
											"end": 9861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9835,
											"end": 9861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 9939,
											"end": 9940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9937,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9924,
											"end": 9941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9915,
											"end": 9921,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 9871,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9942,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 9871,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9727,
											"end": 9949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10040,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 9955,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10000,
											"end": 10007,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10029,
											"end": 10034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10034,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10040,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9955,
											"end": 10040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10106,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 10046,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10074,
											"end": 10077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10100,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10088,
											"end": 10100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10088,
											"end": 10100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10046,
											"end": 10106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10270,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 10112,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 10221,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 10256,
											"end": 10261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 10230,
											"end": 10262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 10230,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 10221,
											"end": 10263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10263,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 10221,
											"end": 10263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10203,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 10203,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10203,
											"end": 10264,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 10203,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10190,
											"end": 10264,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10190,
											"end": 10264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10270,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10112,
											"end": 10270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10423,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 10276,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 10410,
											"end": 10415,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 10371,
											"end": 10416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10416,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 10371,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10366,
											"end": 10369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10359,
											"end": 10417,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10558,
											"end": 10562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10596,
											"end": 10598,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10585,
											"end": 10594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10573,
											"end": 10599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10573,
											"end": 10599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10662,
											"end": 10679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 10659,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 10609,
											"end": 10680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 10609,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 10690,
											"end": 10770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10770,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 10690,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10876,
											"end": 10880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 10916,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10903,
											"end": 10912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10899,
											"end": 10917,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10891,
											"end": 10917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10891,
											"end": 10917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10995,
											"end": 10996,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10984,
											"end": 10993,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10980,
											"end": 10997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10971,
											"end": 10977,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10998,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 10927,
											"end": 10998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10998,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10927,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 11005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"convertToShares(uint256)": "c6e6f592",
							"deposit(uint256,address)": "6e553f65",
							"maxDeposit(address)": "402d267d",
							"previewDeposit(uint256)": "ef8b30f7",
							"queueLargeDeposit()": "94dddda1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AmountTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BatchAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DepositsPaused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyShutdown\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LargeDepositNotTimelocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MinimumDepositNotMet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoETHReceived\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSharesMinted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapContractNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"USDCApprovalFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"StakeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedUSDC\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wstETHReceived\",\"type\":\"uint256\"}],\"name\":\"WstETHBalanceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queueLargeDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DepositFacet.sol\":\"DepositFacet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Vault_forge/src/Diamond/DepositFacet.sol\":{\"keccak256\":\"0xfe4267ae5d09e482eb36894fa95a05419cdd0019e0881e52ca248b83eb49efd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fe705136a1f4cfbcca697808eb65cbc7e13555d2e5b50e3e70f278f2b3450a8\",\"dweb:/ipfs/QmZmoEGca4Zbu1Ai7HMD67gNHdiJGpSVvDhj4KdUDPTiro\"]},\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "Vault_forge/src/Diamond/DepositFacet.sol:DepositFacet",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "batchId",
									"type": "bytes32"
								}
							],
							"name": "batchStakeWithLido",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchStakeWithLido(bytes32)": "3641bd02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"batchId\",\"type\":\"bytes32\"}],\"name\":\"batchStakeWithLido\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DepositFacet.sol\":\"IReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Vault_forge/src/Diamond/DepositFacet.sol\":{\"keccak256\":\"0xfe4267ae5d09e482eb36894fa95a05419cdd0019e0881e52ca248b83eb49efd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fe705136a1f4cfbcca697808eb65cbc7e13555d2e5b50e3e70f278f2b3450a8\",\"dweb:/ipfs/QmZmoEGca4Zbu1Ai7HMD67gNHdiJGpSVvDhj4KdUDPTiro\"]},\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISwapContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdcAmountIn",
									"type": "uint256"
								}
							],
							"name": "getETHAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethAmountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactUSDCForETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getETHAmountOut(uint256)": "cd192db5",
							"swapExactUSDCForETH(uint256,uint256,address,uint256)": "64898d23"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdcAmountIn\",\"type\":\"uint256\"}],\"name\":\"getETHAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactUSDCForETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DepositFacet.sol\":\"ISwapContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Vault_forge/src/Diamond/DepositFacet.sol\":{\"keccak256\":\"0xfe4267ae5d09e482eb36894fa95a05419cdd0019e0881e52ca248b83eb49efd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fe705136a1f4cfbcca697808eb65cbc7e13555d2e5b50e3e70f278f2b3450a8\",\"dweb:/ipfs/QmZmoEGca4Zbu1Ai7HMD67gNHdiJGpSVvDhj4KdUDPTiro\"]},\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUSDC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DepositFacet.sol\":\"IUSDC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"Vault_forge/src/Diamond/DepositFacet.sol\":{\"keccak256\":\"0xfe4267ae5d09e482eb36894fa95a05419cdd0019e0881e52ca248b83eb49efd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fe705136a1f4cfbcca697808eb65cbc7e13555d2e5b50e3e70f278f2b3450a8\",\"dweb:/ipfs/QmZmoEGca4Zbu1Ai7HMD67gNHdiJGpSVvDhj4KdUDPTiro\"]},\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"DiamondStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":61:2315  library DiamondStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":61:2315  library DiamondStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b4d059a456c85bc73ee973b845766a2f89f8d6fa8abc36a0abff8b04b4ad640764736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4d059a456c85bc73ee973b845766a2f89f8d6fa8abc36a0abff8b04b4ad640764736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD0 MSIZE LOG4 JUMP 0xC8 JUMPDEST 0xC7 RETURNDATACOPY 0xE9 PUSH20 0xB845766A2F89F8D6FA8ABC36A0ABFF8B04B4AD64 SMOD PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "61:2254:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4d059a456c85bc73ee973b845766a2f89f8d6fa8abc36a0abff8b04b4ad640764736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xD0 MSIZE LOG4 JUMP 0xC8 JUMPDEST 0xC7 RETURNDATACOPY 0xE9 PUSH20 0xB845766A2F89F8D6FA8ABC36A0ABFF8B04B4AD64 SMOD PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "61:2254:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getStorage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4d059a456c85bc73ee973b845766a2f89f8d6fa8abc36a0abff8b04b4ad640764736f6c634300081d0033",
									".code": [
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Vault_forge/src/Diamond/DepositFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DiamondStorage.sol\":\"DiamondStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							760
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 760,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 760,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								760,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							760
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 761,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 760,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 232,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 232,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 232,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 232,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 232,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 232,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							748
						]
					},
					"id": 749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:6",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 748,
							"linearizedBaseContracts": [
								748
							],
							"name": "Panic",
							"nameLocation": "665:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:6",
										"text": "@dev generic / unspecified error"
									},
									"id": 703,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "718:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 701,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 702,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:6",
										"text": "@dev used by the assert() builtin"
									},
									"id": 707,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "806:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 706,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:6",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 711,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "897:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 709,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 710,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:6",
										"text": "@dev division or modulo by zero"
									},
									"id": 715,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "990:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 713,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 714,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:6",
										"text": "@dev enum conversion error"
									},
									"id": 719,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1080:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 717,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 718,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:6",
										"text": "@dev invalid encoding in storage"
									},
									"id": 723,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1181:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 721,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 722,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:6",
										"text": "@dev empty array pop"
									},
									"id": 727,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1271:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 725,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 726,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:6",
										"text": "@dev array out of bounds access"
									},
									"id": 731,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1365:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 729,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 730,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:6",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 735,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1493:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 733,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 734,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:6",
										"text": "@dev calling invalid internal function"
									},
									"id": 739,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1593:58:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1819:151:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:6",
													"nodeType": "YulBlock",
													"src": "1854:110:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:6",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:6",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:6",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:6"
																},
																"nativeSrc": "1868:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:6"
															},
															"nativeSrc": "1868:24:6",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:6",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:6"
																},
																"nativeSrc": "1905:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:6"
															},
															"nativeSrc": "1905:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:6",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:6"
																},
																"nativeSrc": "1936:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:6"
															},
															"nativeSrc": "1936:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:6"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 745,
												"nodeType": "InlineAssembly",
												"src": "1829:135:6"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:6",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1791:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:6"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:6"
									},
									"scope": 748,
									"src": "1776:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 749,
							"src": "657:1315:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							760
						]
					},
					"id": 761,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 751,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 760,
							"linearizedBaseContracts": [
								760
							],
							"name": "IERC165",
							"nameLocation": "432:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 759,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "818:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 753,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:7"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "861:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:7"
									},
									"scope": 760,
									"src": "791:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 761,
							"src": "422:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2381
						],
						"Panic": [
							748
						],
						"SafeCast": [
							4146
						]
					},
					"id": 2382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 762,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 764,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2382,
							"sourceUnit": 749,
							"src": "129:35:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 763,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 748,
										"src": "137:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2382,
							"sourceUnit": 4147,
							"src": "165:40:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 765,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4146,
										"src": "173:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 767,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2381,
							"linearizedBaseContracts": [
								2381
							],
							"name": "Math",
							"nameLocation": "289:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 772,
									"members": [
										{
											"id": 768,
											"name": "Floor",
											"nameLocation": "324:5:8",
											"nodeType": "EnumValue",
											"src": "324:5:8"
										},
										{
											"id": 769,
											"name": "Ceil",
											"nameLocation": "367:4:8",
											"nodeType": "EnumValue",
											"src": "367:4:8"
										},
										{
											"id": 770,
											"name": "Trunc",
											"nameLocation": "409:5:8",
											"nodeType": "EnumValue",
											"src": "409:5:8"
										},
										{
											"id": 771,
											"name": "Expand",
											"nameLocation": "439:6:8",
											"nodeType": "EnumValue",
											"src": "439:6:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:8",
									"nodeType": "EnumDefinition",
									"src": "300:169:8"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "731:112:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "766:71:8",
													"nodeType": "YulBlock",
													"src": "766:71:8",
													"statements": [
														{
															"nativeSrc": "780:16:8",
															"nodeType": "YulAssignment",
															"src": "780:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "791:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "791:1:8"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "794:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "794:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:8"
																},
																"nativeSrc": "787:9:8",
																"nodeType": "YulFunctionCall",
																"src": "787:9:8"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "780:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:8"
																}
															]
														},
														{
															"nativeSrc": "809:18:8",
															"nodeType": "YulAssignment",
															"src": "809:18:8",
															"value": {
																"arguments": [
																	{
																		"name": "low",
																		"nativeSrc": "820:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "820:3:8"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "825:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "817:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "817:2:8"
																},
																"nativeSrc": "817:10:8",
																"nodeType": "YulFunctionCall",
																"src": "817:10:8"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "809:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "791:1:8",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "825:1:8",
														"valueSize": 1
													},
													{
														"declaration": 777,
														"isOffset": false,
														"isSlot": false,
														"src": "794:1:8",
														"valueSize": 1
													},
													{
														"declaration": 780,
														"isOffset": false,
														"isSlot": false,
														"src": "809:4:8",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "780:3:8",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "820:3:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 784,
												"nodeType": "InlineAssembly",
												"src": "741:96:8"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "475:163:8",
										"text": " @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add512",
									"nameLocation": "652:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "667:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "659:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "678:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "670:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:22:8"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "712:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "704:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "726:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "718:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:27:8"
									},
									"scope": 2381,
									"src": "643:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "1115:462:8",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1437:134:8",
													"nodeType": "YulBlock",
													"src": "1437:134:8",
													"statements": [
														{
															"nativeSrc": "1451:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1468:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1468:1:8"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1471:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1478:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1478:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:8"
																		},
																		"nativeSrc": "1474:6:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:6:8"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1461:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:8"
																},
																"nativeSrc": "1461:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1461:20:8"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1455:2:8",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1494:16:8",
															"nodeType": "YulAssignment",
															"src": "1494:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1505:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1505:1:8"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1508:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1501:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1501:3:8"
																},
																"nativeSrc": "1501:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1501:9:8"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "1494:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:8"
																}
															]
														},
														{
															"nativeSrc": "1523:38:8",
															"nodeType": "YulAssignment",
															"src": "1523:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1539:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1539:2:8"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1543:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1535:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:8"
																		},
																		"nativeSrc": "1535:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:12:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1552:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:8"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1556:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1556:3:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1549:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1549:2:8"
																		},
																		"nativeSrc": "1549:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:11:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1531:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1531:3:8"
																},
																"nativeSrc": "1531:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1531:30:8"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "1523:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1523:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "1468:1:8",
														"valueSize": 1
													},
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:1:8",
														"valueSize": 1
													},
													{
														"declaration": 791,
														"isOffset": false,
														"isSlot": false,
														"src": "1471:1:8",
														"valueSize": 1
													},
													{
														"declaration": 791,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:1:8",
														"valueSize": 1
													},
													{
														"declaration": 794,
														"isOffset": false,
														"isSlot": false,
														"src": "1523:4:8",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:3:8",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "1543:3:8",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "1556:3:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 798,
												"nodeType": "InlineAssembly",
												"src": "1412:159:8"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "849:173:8",
										"text": " @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul512",
									"nameLocation": "1036:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1051:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1043:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1062:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1054:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:22:8"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "1096:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1088:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "1110:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "1102:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:27:8"
									},
									"scope": 2381,
									"src": "1027:550:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1784:149:8",
										"statements": [
											{
												"id": 833,
												"nodeType": "UncheckedBlock",
												"src": "1794:133:8",
												"statements": [
													{
														"assignments": [
															813
														],
														"declarations": [
															{
																"constant": false,
																"id": 813,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1826:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 833,
																"src": "1818:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 812,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1818:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 817,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "1830:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 815,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1834:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1830:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1818:17:8"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 818,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "1849:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 819,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1859:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 820,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "1864:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1859:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1849:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "1849:16:8"
													},
													{
														"expression": {
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "1879:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1888:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 828,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "1908:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 826,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4146,
																			"src": "1892:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1901:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4145,
																		"src": "1892:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:24:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1888:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 832,
														"nodeType": "ExpressionStatement",
														"src": "1879:37:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "1583:105:8",
										"text": " @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1702:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1717:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1709:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1728:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1720:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:22:8"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1759:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1754:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1776:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1768:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:30:8"
									},
									"scope": 2381,
									"src": "1693:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "2143:149:8",
										"statements": [
											{
												"id": 868,
												"nodeType": "UncheckedBlock",
												"src": "2153:133:8",
												"statements": [
													{
														"assignments": [
															848
														],
														"declarations": [
															{
																"constant": false,
																"id": 848,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2185:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 868,
																"src": "2177:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 847,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2177:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 852,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 849,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 838,
																"src": "2189:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 850,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 840,
																"src": "2193:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2177:17:8"
													},
													{
														"expression": {
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 853,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "2208:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 854,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "2218:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 855,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "2223:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2218:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "ExpressionStatement",
														"src": "2208:16:8"
													},
													{
														"expression": {
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 859,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "2238:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 860,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "2247:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 863,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 843,
																			"src": "2267:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 861,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4146,
																			"src": "2251:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2260:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4145,
																		"src": "2251:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2251:24:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2238:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 867,
														"nodeType": "ExpressionStatement",
														"src": "2238:37:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1939:108:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2061:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2076:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2068:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2087:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2079:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:22:8"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2118:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2113:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2135:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "2127:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:30:8"
									},
									"scope": 2381,
									"src": "2052:240:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2505:391:8",
										"statements": [
											{
												"id": 898,
												"nodeType": "UncheckedBlock",
												"src": "2515:375:8",
												"statements": [
													{
														"assignments": [
															883
														],
														"declarations": [
															{
																"constant": false,
																"id": 883,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2547:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 898,
																"src": "2539:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 882,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 887,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 884,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "2551:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 885,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "2555:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2539:17:8"
													},
													{
														"AST": {
															"nativeSrc": "2595:188:8",
															"nodeType": "YulBlock",
															"src": "2595:188:8",
															"statements": [
																{
																	"nativeSrc": "2727:42:8",
																	"nodeType": "YulAssignment",
																	"src": "2727:42:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "c",
																								"nativeSrc": "2748:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "2748:1:8"
																							},
																							{
																								"name": "a",
																								"nativeSrc": "2751:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "2751:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2744:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:8"
																						},
																						"nativeSrc": "2744:9:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:9:8"
																					},
																					{
																						"name": "b",
																						"nativeSrc": "2755:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "2755:1:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2741:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2741:2:8"
																				},
																				"nativeSrc": "2741:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "a",
																						"nativeSrc": "2766:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "2766:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2759:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2759:6:8"
																				},
																				"nativeSrc": "2759:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:9:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2738:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2738:2:8"
																		},
																		"nativeSrc": "2738:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "success",
																			"nativeSrc": "2727:7:8",
																			"nodeType": "YulIdentifier",
																			"src": "2727:7:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "2751:1:8",
																"valueSize": 1
															},
															{
																"declaration": 873,
																"isOffset": false,
																"isSlot": false,
																"src": "2766:1:8",
																"valueSize": 1
															},
															{
																"declaration": 875,
																"isOffset": false,
																"isSlot": false,
																"src": "2755:1:8",
																"valueSize": 1
															},
															{
																"declaration": 883,
																"isOffset": false,
																"isSlot": false,
																"src": "2748:1:8",
																"valueSize": 1
															},
															{
																"declaration": 878,
																"isOffset": false,
																"isSlot": false,
																"src": "2727:7:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 888,
														"nodeType": "InlineAssembly",
														"src": "2570:213:8"
													},
													{
														"expression": {
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 889,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "2842:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 890,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "2851:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 893,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 878,
																			"src": "2871:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 891,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4146,
																			"src": "2855:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2864:6:8",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4145,
																		"src": "2855:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:24:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2851:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2842:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 897,
														"nodeType": "ExpressionStatement",
														"src": "2842:37:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "2298:111:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2423:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2438:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2430:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2449:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2441:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:22:8"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2480:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2475:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2475:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2497:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2489:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:8"
									},
									"scope": 2381,
									"src": "2414:482:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "3111:231:8",
										"statements": [
											{
												"id": 919,
												"nodeType": "UncheckedBlock",
												"src": "3121:215:8",
												"statements": [
													{
														"expression": {
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 912,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "3145:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 913,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "3155:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3155:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3145:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 917,
														"nodeType": "ExpressionStatement",
														"src": "3145:15:8"
													},
													{
														"AST": {
															"nativeSrc": "3199:127:8",
															"nodeType": "YulBlock",
															"src": "3199:127:8",
															"statements": [
																{
																	"nativeSrc": "3293:19:8",
																	"nodeType": "YulAssignment",
																	"src": "3293:19:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3307:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3307:1:8"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3310:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3310:1:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3303:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:8"
																		},
																		"nativeSrc": "3303:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3293:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3293:6:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 903,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:1:8",
																"valueSize": 1
															},
															{
																"declaration": 905,
																"isOffset": false,
																"isSlot": false,
																"src": "3310:1:8",
																"valueSize": 1
															},
															{
																"declaration": 910,
																"isOffset": false,
																"isSlot": false,
																"src": "3293:6:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 918,
														"nodeType": "InlineAssembly",
														"src": "3174:152:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2902:113:8",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3029:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3044:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "3036:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3055:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "3047:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:22:8"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3086:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "3081:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3103:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "3095:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:30:8"
									},
									"scope": 2381,
									"src": "3020:322:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "3567:231:8",
										"statements": [
											{
												"id": 940,
												"nodeType": "UncheckedBlock",
												"src": "3577:215:8",
												"statements": [
													{
														"expression": {
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 933,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "3601:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3611:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3611:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3601:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "ExpressionStatement",
														"src": "3601:15:8"
													},
													{
														"AST": {
															"nativeSrc": "3655:127:8",
															"nodeType": "YulBlock",
															"src": "3655:127:8",
															"statements": [
																{
																	"nativeSrc": "3749:19:8",
																	"nodeType": "YulAssignment",
																	"src": "3749:19:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3763:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3763:1:8"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3766:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3766:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mod",
																			"nativeSrc": "3759:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:8"
																		},
																		"nativeSrc": "3759:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3749:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 924,
																"isOffset": false,
																"isSlot": false,
																"src": "3763:1:8",
																"valueSize": 1
															},
															{
																"declaration": 926,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:1:8",
																"valueSize": 1
															},
															{
																"declaration": 931,
																"isOffset": false,
																"isSlot": false,
																"src": "3749:6:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 939,
														"nodeType": "InlineAssembly",
														"src": "3630:152:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "3348:123:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3485:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "3492:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "3503:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:8"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3542:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "3537:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 928,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3537:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3559:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "3551:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:30:8"
									},
									"scope": 2381,
									"src": "3476:322:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "3989:122:8",
										"statements": [
											{
												"assignments": [
													953,
													955
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4005:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "4000:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 952,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4000:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 955,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4022:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 971,
														"src": "4014:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 954,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4014:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"id": 957,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4039:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "4042:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 956,
														"name": "tryAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "4032:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3999:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 962,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4069:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 963,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4078:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4091:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 965,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4091:7:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 964,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4086:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4100:3:8",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4086:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 961,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "4061:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 951,
												"id": 970,
												"nodeType": "Return",
												"src": "4054:50:8"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "3804:103:8",
										"text": " @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingAdd",
									"nameLocation": "3921:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3943:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3935:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3954:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3946:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:22:8"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "3980:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:9:8"
									},
									"scope": 2381,
									"src": "3912:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "4294:73:8",
										"statements": [
											{
												"assignments": [
													null,
													983
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4315:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "4307:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"initialValue": {
													"arguments": [
														{
															"id": 985,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "4332:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 986,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "4335:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 984,
														"name": "trySub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "4325:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:33:8"
											},
											{
												"expression": {
													"id": 989,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 983,
													"src": "4354:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 981,
												"id": 990,
												"nodeType": "Return",
												"src": "4347:13:8"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "4117:95:8",
										"text": " @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingSub",
									"nameLocation": "4226:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4248:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4240:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4259:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4251:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:22:8"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "4285:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:9:8"
									},
									"scope": 2381,
									"src": "4217:150:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "4564:122:8",
										"statements": [
											{
												"assignments": [
													1003,
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4580:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "4575:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1002,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4575:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4597:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "4589:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "4614:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1008,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "4617:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"name": "tryMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "4607:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:45:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "4644:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1013,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "4653:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4666:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1015,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4666:7:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1014,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4661:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4661:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4675:3:8",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4661:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "4636:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1020,
												"nodeType": "Return",
												"src": "4629:50:8"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "4373:109:8",
										"text": " @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingMul",
									"nameLocation": "4496:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4518:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4510:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4529:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4521:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:22:8"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "4555:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:8"
									},
									"scope": 2381,
									"src": "4487:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "5158:207:8",
										"statements": [
											{
												"id": 1047,
												"nodeType": "UncheckedBlock",
												"src": "5168:191:8",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "5306:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1037,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1035,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1027,
																						"src": "5312:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1036,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1029,
																						"src": "5316:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5312:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1038,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5311:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1041,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5337:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1039,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4146,
																					"src": "5321:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1040,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5330:6:8",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4145,
																				"src": "5321:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5321:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5311:36:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5310:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5306:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1033,
														"id": 1046,
														"nodeType": "Return",
														"src": "5299:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "4692:374:8",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "5080:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "5093:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5088:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1024,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5112:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5104:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5123:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5115:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:38:8"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "5149:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:9:8"
									},
									"scope": 2381,
									"src": "5071:294:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "5502:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "5527:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1061,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5531:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5527:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1063,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "5534:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1064,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "5537:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "5519:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1066,
												"nodeType": "Return",
												"src": "5512:27:8"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "5371:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5444:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5467:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5459:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:22:8"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "5493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:8"
									},
									"scope": 2381,
									"src": "5435:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "5684:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1079,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "5709:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1080,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "5713:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5709:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1082,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "5716:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1083,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "5719:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "5701:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1077,
												"id": 1085,
												"nodeType": "Return",
												"src": "5694:27:8"
											}
										]
									},
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "5552:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5626:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5638:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5630:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5649:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5641:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:22:8"
									},
									"returnParameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "5675:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:8"
									},
									"scope": 2381,
									"src": "5617:111:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "5912:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1097,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "5967:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1098,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1092,
																	"src": "5971:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1100,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5966:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1101,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "5977:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1102,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "5981:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5977:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1104,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5976:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5986:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5976:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5966:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1108,
												"nodeType": "Return",
												"src": "5959:28:8"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "5734:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "5850:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5866:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5858:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5877:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5869:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:22:8"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "5903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:9:8"
									},
									"scope": 2381,
									"src": "5841:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "6286:633:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "6300:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6300:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "6296:150:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "6308:138:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1126,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "6412:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6418:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 715,
																		"src": "6412:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1123,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "6400:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6406:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 747,
																	"src": "6400:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6400:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "6400:35:8"
														}
													]
												}
											},
											{
												"id": 1149,
												"nodeType": "UncheckedBlock",
												"src": "6829:84:8",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1134,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "6876:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6876:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1132,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "6860:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6869:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "6860:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6860:22:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1140,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1138,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1113,
																							"src": "6887:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1139,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6891:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6887:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1141,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6886:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1142,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1115,
																				"src": "6896:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6900:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6886:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1146,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6885:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6860:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1119,
														"id": 1148,
														"nodeType": "Return",
														"src": "6853:49:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "6000:210:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "6224:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6240:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "6232:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6251:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "6243:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:22:8"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "6277:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:8"
									},
									"scope": 2381,
									"src": "6215:704:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "7340:3585:8",
										"statements": [
											{
												"id": 1285,
												"nodeType": "UncheckedBlock",
												"src": "7350:3569:8",
												"statements": [
													{
														"assignments": [
															1164,
															1166
														],
														"declarations": [
															{
																"constant": false,
																"id": 1164,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "7383:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "7375:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1163,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7375:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1166,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "7397:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "7389:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1165,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1171,
														"initialValue": {
															"arguments": [
																{
																	"id": 1168,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "7411:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1169,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "7414:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1167,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "7404:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7404:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7374:42:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "7498:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7498:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1180,
														"nodeType": "IfStatement",
														"src": "7494:365:8",
														"trueBody": {
															"id": 1179,
															"nodeType": "Block",
															"src": "7509:350:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1175,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "7827:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1176,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "7833:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7827:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1162,
																	"id": 1178,
																	"nodeType": "Return",
																	"src": "7820:24:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "7969:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1182,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "7984:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7969:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1199,
														"nodeType": "IfStatement",
														"src": "7965:142:8",
														"trueBody": {
															"id": 1198,
															"nodeType": "Block",
															"src": "7990:117:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1188,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1158,
																							"src": "8028:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8043:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8028:16:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1191,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 748,
																							"src": "8046:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8052:16:8",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 715,
																						"src": "8046:22:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1193,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 748,
																							"src": "8070:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8076:14:8",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 711,
																						"src": "8070:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1187,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "8020:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8020:71:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1184,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "8008:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8014:5:8",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 747,
																			"src": "8008:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8008:84:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1197,
																	"nodeType": "ExpressionStatement",
																	"src": "8008:84:8"
																}
															]
														}
													},
													{
														"assignments": [
															1201
														],
														"declarations": [
															{
																"constant": false,
																"id": 1201,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "8367:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "8359:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8359:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1202,
														"nodeType": "VariableDeclarationStatement",
														"src": "8359:17:8"
													},
													{
														"AST": {
															"nativeSrc": "8415:283:8",
															"nodeType": "YulBlock",
															"src": "8415:283:8",
															"statements": [
																{
																	"nativeSrc": "8484:38:8",
																	"nodeType": "YulAssignment",
																	"src": "8484:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8504:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "8504:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "8507:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "8507:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "8510:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "8510:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "8497:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:8"
																		},
																		"nativeSrc": "8497:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "8484:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "8484:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "8604:37:8",
																	"nodeType": "YulAssignment",
																	"src": "8604:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "high",
																				"nativeSrc": "8616:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "8625:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:8"
																					},
																					{
																						"name": "low",
																						"nativeSrc": "8636:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8636:3:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "8622:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "8622:2:8"
																				},
																				"nativeSrc": "8622:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8622:18:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:8"
																		},
																		"nativeSrc": "8612:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:29:8"
																	},
																	"variableNames": [
																		{
																			"name": "high",
																			"nativeSrc": "8604:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "8604:4:8"
																		}
																	]
																},
																{
																	"nativeSrc": "8658:26:8",
																	"nodeType": "YulAssignment",
																	"src": "8658:26:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "8669:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "8674:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8665:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:8"
																		},
																		"nativeSrc": "8665:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:19:8"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "8658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1158,
																"isOffset": false,
																"isSlot": false,
																"src": "8510:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1164,
																"isOffset": false,
																"isSlot": false,
																"src": "8604:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1164,
																"isOffset": false,
																"isSlot": false,
																"src": "8616:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "8636:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "8658:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "8669:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1201,
																"isOffset": false,
																"isSlot": false,
																"src": "8484:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1201,
																"isOffset": false,
																"isSlot": false,
																"src": "8625:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1201,
																"isOffset": false,
																"isSlot": false,
																"src": "8674:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1154,
																"isOffset": false,
																"isSlot": false,
																"src": "8504:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1156,
																"isOffset": false,
																"isSlot": false,
																"src": "8507:1:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1203,
														"nodeType": "InlineAssembly",
														"src": "8390:308:8"
													},
													{
														"assignments": [
															1205
														],
														"declarations": [
															{
																"constant": false,
																"id": 1205,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "8910:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "8902:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1204,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1212,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "8917:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8932:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1208,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "8936:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8932:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8931:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8917:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8902:46:8"
													},
													{
														"AST": {
															"nativeSrc": "8987:359:8",
															"nodeType": "YulBlock",
															"src": "8987:359:8",
															"statements": [
																{
																	"nativeSrc": "9052:37:8",
																	"nodeType": "YulAssignment",
																	"src": "9052:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "9071:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "9071:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9084:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9084:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9067:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:8"
																		},
																		"nativeSrc": "9067:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "9052:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "9052:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "9153:21:8",
																	"nodeType": "YulAssignment",
																	"src": "9153:21:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "9164:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9169:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9169:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9160:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:8"
																		},
																		"nativeSrc": "9160:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:8"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "9153:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:8"
																		}
																	]
																},
																{
																	"nativeSrc": "9293:39:8",
																	"nodeType": "YulAssignment",
																	"src": "9293:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9313:1:8",
																								"nodeType": "YulLiteral",
																								"src": "9313:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "9316:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "9316:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "9309:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9309:3:8"
																						},
																						"nativeSrc": "9309:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "9309:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "9323:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9305:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:8"
																				},
																				"nativeSrc": "9305:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9330:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:8"
																		},
																		"nativeSrc": "9301:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "9293:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "9293:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1158,
																"isOffset": false,
																"isSlot": false,
																"src": "9052:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1158,
																"isOffset": false,
																"isSlot": false,
																"src": "9071:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "9153:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1166,
																"isOffset": false,
																"isSlot": false,
																"src": "9164:3:8",
																"valueSize": 1
															},
															{
																"declaration": 1205,
																"isOffset": false,
																"isSlot": false,
																"src": "9084:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1205,
																"isOffset": false,
																"isSlot": false,
																"src": "9169:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1205,
																"isOffset": false,
																"isSlot": false,
																"src": "9293:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1205,
																"isOffset": false,
																"isSlot": false,
																"src": "9316:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1205,
																"isOffset": false,
																"isSlot": false,
																"src": "9323:4:8",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1213,
														"nodeType": "InlineAssembly",
														"src": "8962:384:8"
													},
													{
														"expression": {
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1214,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "9409:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "high",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "9416:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1216,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "9423:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9416:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9409:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1219,
														"nodeType": "ExpressionStatement",
														"src": "9409:18:8"
													},
													{
														"assignments": [
															1221
														],
														"declarations": [
															{
																"constant": false,
																"id": 1221,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "9770:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1285,
																"src": "9762:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1220,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9762:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1228,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9781:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1223,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "9785:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9781:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9780:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9800:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "9780:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9762:39:8"
													},
													{
														"expression": {
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1229,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10018:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10029:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1231,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10033:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1232,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10047:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10033:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10018:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1236,
														"nodeType": "ExpressionStatement",
														"src": "10018:36:8"
													},
													{
														"expression": {
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1237,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10088:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1239,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10103:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1240,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10117:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10103:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1244,
														"nodeType": "ExpressionStatement",
														"src": "10088:36:8"
													},
													{
														"expression": {
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1245,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10160:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10171:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1247,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10175:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1248,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10189:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10175:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10171:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10160:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1252,
														"nodeType": "ExpressionStatement",
														"src": "10160:36:8"
													},
													{
														"expression": {
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1253,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10231:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1255,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10246:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1256,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10260:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10246:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10242:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1260,
														"nodeType": "ExpressionStatement",
														"src": "10231:36:8"
													},
													{
														"expression": {
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1261,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10304:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10319:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1264,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10333:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10319:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10315:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1268,
														"nodeType": "ExpressionStatement",
														"src": "10304:36:8"
													},
													{
														"expression": {
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1269,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "10378:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10389:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1271,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10393:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1272,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "10407:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10393:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10389:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10378:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1276,
														"nodeType": "ExpressionStatement",
														"src": "10378:36:8"
													},
													{
														"expression": {
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "10859:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "10868:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1279,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "10874:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10868:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10859:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1282,
														"nodeType": "ExpressionStatement",
														"src": "10859:22:8"
													},
													{
														"expression": {
															"id": 1283,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "10902:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1162,
														"id": 1284,
														"nodeType": "Return",
														"src": "10895:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "6925:312:8",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7251:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7266:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "7258:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7277:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "7269:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7288:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "7280:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:43:8"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7332:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "7324:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:16:8"
									},
									"scope": 2381,
									"src": "7242:3683:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "11164:128:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1303,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "11188:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1304,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "11191:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1305,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "11194:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1302,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1287,
																1324
															],
															"referencedDeclaration": 1287,
															"src": "11181:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11181:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1310,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1297,
																			"src": "11242:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$772",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$772",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1309,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "11225:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11225:26:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1313,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "11262:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1314,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1292,
																				"src": "11265:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1315,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "11268:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1312,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "11255:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11255:25:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11255:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11225:59:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1307,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4146,
																"src": "11209:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11218:6:8",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4145,
															"src": "11209:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11209:76:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11181:104:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1322,
												"nodeType": "Return",
												"src": "11174:111:8"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "10931:118:8",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11063:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11078:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11070:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11089:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11081:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11100:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11092:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11122:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11113:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1296,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1295,
														"name": "Rounding",
														"nameLocations": [
															"11113:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "11113:8:8"
													},
													"referencedDeclaration": 772,
													"src": "11113:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:62:8"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "11155:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:9:8"
									},
									"scope": 2381,
									"src": "11054:238:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "11500:245:8",
										"statements": [
											{
												"id": 1372,
												"nodeType": "UncheckedBlock",
												"src": "11510:229:8",
												"statements": [
													{
														"assignments": [
															1337,
															1339
														],
														"declarations": [
															{
																"constant": false,
																"id": 1337,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "11543:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1372,
																"src": "11535:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1336,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11535:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1339,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "11557:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1372,
																"src": "11549:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1338,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1344,
														"initialValue": {
															"arguments": [
																{
																	"id": 1341,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "11571:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1342,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "11574:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1340,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "11564:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11534:42:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "11594:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11602:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1347,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "11607:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11602:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11594:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "11590:86:8",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "11610:66:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1353,
																					"name": "Panic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "11640:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																						"typeString": "type(library Panic)"
																					}
																				},
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "11646:14:8",
																				"memberName": "UNDER_OVERFLOW",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 711,
																				"src": "11640:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1350,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "11628:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11634:5:8",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 747,
																			"src": "11628:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11628:33:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "11628:33:8"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1359,
																			"name": "high",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1337,
																			"src": "11697:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 1360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11706:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1361,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1331,
																						"src": "11712:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "11706:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"id": 1363,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11705:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "11697:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1365,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11696:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1366,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1339,
																			"src": "11719:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"id": 1367,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1331,
																			"src": "11726:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11719:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11718:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11696:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1335,
														"id": 1371,
														"nodeType": "Return",
														"src": "11689:39:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "11298:111:8",
										"text": " @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11423:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11438:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11430:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11430:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11449:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11441:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11458:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11452:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1330,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11452:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11429:31:8"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11492:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "11484:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:16:8"
									},
									"scope": 2381,
									"src": "11414:331:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "11963:113:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1390,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "11987:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1391,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "11990:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1392,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "11993:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1389,
															"name": "mulShr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1374,
																1413
															],
															"referencedDeclaration": 1374,
															"src": "11980:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11980:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1397,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "12031:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$772",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$772",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1396,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "12014:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12014:26:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1400,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "12051:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1401,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "12054:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1402,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12057:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1403,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1381,
																					"src": "12062:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12057:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1399,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "12044:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12044:20:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12067:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12044:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12014:54:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1394,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4146,
																"src": "11998:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12007:6:8",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4145,
															"src": "11998:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11998:71:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11980:89:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1388,
												"id": 1411,
												"nodeType": "Return",
												"src": "11973:96:8"
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "11751:109:8",
										"text": " @dev Calculates x * y >> n with full precision, following the selected rounding direction."
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11874:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11889:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11881:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11900:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11892:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11909:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11903:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1380,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11903:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11921:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11912:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1382,
														"name": "Rounding",
														"nameLocations": [
															"11912:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "11912:8:8"
													},
													"referencedDeclaration": 772,
													"src": "11912:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:50:8"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "11954:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:9:8"
									},
									"scope": 2381,
									"src": "11865:211:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "12710:1849:8",
										"statements": [
											{
												"id": 1508,
												"nodeType": "UncheckedBlock",
												"src": "12720:1833:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "12748:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12753:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12748:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1428,
														"nodeType": "IfStatement",
														"src": "12744:20:8",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12763:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1422,
															"id": 1427,
															"nodeType": "Return",
															"src": "12756:8:8"
														}
													},
													{
														"assignments": [
															1430
														],
														"declarations": [
															{
																"constant": false,
																"id": 1430,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13243:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1508,
																"src": "13235:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13235:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1434,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "13255:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1432,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "13259:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13255:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13235:25:8"
													},
													{
														"assignments": [
															1436
														],
														"declarations": [
															{
																"constant": false,
																"id": 1436,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "13282:3:8",
																"nodeType": "VariableDeclaration",
																"scope": 1508,
																"src": "13274:11:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1435,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13274:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1438,
														"initialValue": {
															"id": 1437,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1418,
															"src": "13288:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13274:15:8"
													},
													{
														"assignments": [
															1440
														],
														"declarations": [
															{
																"constant": false,
																"id": 1440,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "13432:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1508,
																"src": "13425:8:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1439,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13425:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1442,
														"initialValue": {
															"hexValue": "30",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13436:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13425:12:8"
													},
													{
														"assignments": [
															1444
														],
														"declarations": [
															{
																"constant": false,
																"id": 1444,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "13458:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1508,
																"src": "13451:8:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1443,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13451:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1446,
														"initialValue": {
															"hexValue": "31",
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13462:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13451:12:8"
													},
													{
														"body": {
															"id": 1483,
															"nodeType": "Block",
															"src": "13501:882:8",
															"statements": [
																{
																	"assignments": [
																		1451
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1451,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "13527:8:8",
																			"nodeType": "VariableDeclaration",
																			"scope": 1483,
																			"src": "13519:16:8",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1450,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13519:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1455,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1452,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1436,
																			"src": "13538:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1453,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1430,
																			"src": "13544:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13538:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13519:34:8"
																},
																{
																	"expression": {
																		"id": 1466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1456,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1436,
																					"src": "13573:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1457,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "13578:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1458,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13572:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1459,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1430,
																					"src": "13678:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1460,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1436,
																						"src": "13923:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1463,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1461,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1430,
																							"src": "13929:9:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1462,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1451,
																							"src": "13941:8:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13929:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13923:26:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1465,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13591:376:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "13572:395:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1467,
																	"nodeType": "ExpressionStatement",
																	"src": "13572:395:8"
																},
																{
																	"expression": {
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1468,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "13987:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1469,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "13990:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1470,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13986:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1471,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1444,
																					"src": "14072:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1479,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1472,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1440,
																						"src": "14326:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1473,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1444,
																							"src": "14330:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1476,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1451,
																									"src": "14341:8:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1475,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14334:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1474,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "14334:6:8",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1477,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14334:16:8",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "14330:20:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "14326:24:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1480,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13995:373:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "13986:382:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1482,
																	"nodeType": "ExpressionStatement",
																	"src": "13986:382:8"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1447,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "13485:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13498:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13485:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1484,
														"nodeType": "WhileStatement",
														"src": "13478:905:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1485,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "14401:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14408:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14401:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1490,
														"nodeType": "IfStatement",
														"src": "14397:22:8",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14418:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1422,
															"id": 1489,
															"nodeType": "Return",
															"src": "14411:8:8"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1492,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "14470:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14474:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14470:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1495,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1418,
																		"src": "14477:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "14489:2:8",
																				"subExpression": {
																					"id": 1498,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1440,
																					"src": "14490:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1496,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:11:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14477:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1504,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "14502:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14494:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1502,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14494:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14494:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1491,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "14462:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1422,
														"id": 1507,
														"nodeType": "Return",
														"src": "14455:50:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "12082:553:8",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "12649:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12664:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "12656:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12656:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "12675:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "12667:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12655:22:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "12701:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12700:9:8"
									},
									"scope": 2381,
									"src": "12640:1919:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "15159:82:8",
										"statements": [
											{
												"id": 1529,
												"nodeType": "UncheckedBlock",
												"src": "15169:66:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1522,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "15212:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1523,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "15215:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15219:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "15215:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1526,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "15222:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1520,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "15200:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2381_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15205:6:8",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1567,
																"src": "15200:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:24:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1519,
														"id": 1528,
														"nodeType": "Return",
														"src": "15193:31:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "14565:514:8",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "15093:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15113:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "15105:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15105:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "15124:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "15116:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:22:8"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "15150:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15149:9:8"
									},
									"scope": 2381,
									"src": "15084:157:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1566,
										"nodeType": "Block",
										"src": "16011:174:8",
										"statements": [
											{
												"assignments": [
													1544,
													1546
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16027:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "16022:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16022:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1546,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16044:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1566,
														"src": "16036:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16036:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"arguments": [
														{
															"id": 1548,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "16064:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1549,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "16067:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1550,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "16070:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1547,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1591,
															1673
														],
														"referencedDeclaration": 1591,
														"src": "16054:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16054:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16021:51:8"
											},
											{
												"condition": {
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16086:8:8",
													"subExpression": {
														"id": 1553,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1544,
														"src": "16087:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1563,
												"nodeType": "IfStatement",
												"src": "16082:74:8",
												"trueBody": {
													"id": 1562,
													"nodeType": "Block",
													"src": "16096:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1558,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "16122:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16128:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 715,
																		"src": "16122:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1555,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "16110:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16116:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 747,
																	"src": "16110:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16110:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1561,
															"nodeType": "ExpressionStatement",
															"src": "16110:35:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1564,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1546,
													"src": "16172:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1565,
												"nodeType": "Return",
												"src": "16165:13:8"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "15247:678:8",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15939:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15954:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15946:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15965:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15957:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15976:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "15968:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15968:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15945:33:8"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "16002:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:9:8"
									},
									"scope": 2381,
									"src": "15930:255:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "17039:1493:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1581,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "17053:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17058:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "IfStatement",
												"src": "17049:29:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17069:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17076:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1586,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17068:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1580,
													"id": 1587,
													"nodeType": "Return",
													"src": "17061:17:8"
												}
											},
											{
												"AST": {
													"nativeSrc": "17113:1413:8",
													"nodeType": "YulBlock",
													"src": "17113:1413:8",
													"statements": [
														{
															"nativeSrc": "17127:22:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17127:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17144:4:8",
																		"nodeType": "YulLiteral",
																		"src": "17144:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "17138:5:8"
																},
																"nativeSrc": "17138:11:8",
																"nodeType": "YulFunctionCall",
																"src": "17138:11:8"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "17131:3:8",
																	"nodeType": "YulTypedName",
																	"src": "17131:3:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18057:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18057:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18062:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18050:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:8"
																},
																"nativeSrc": "18050:17:8",
																"nodeType": "YulFunctionCall",
																"src": "18050:17:8"
															},
															"nativeSrc": "18050:17:8",
															"nodeType": "YulExpressionStatement",
															"src": "18050:17:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18091:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18091:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18096:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18087:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:8"
																		},
																		"nativeSrc": "18087:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18103:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18103:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:8"
																},
																"nativeSrc": "18080:28:8",
																"nodeType": "YulFunctionCall",
																"src": "18080:28:8"
															},
															"nativeSrc": "18080:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "18080:28:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18132:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18132:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:8",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:8"
																		},
																		"nativeSrc": "18128:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18144:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18144:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:8"
																},
																"nativeSrc": "18121:28:8",
																"nodeType": "YulFunctionCall",
																"src": "18121:28:8"
															},
															"nativeSrc": "18121:28:8",
															"nodeType": "YulExpressionStatement",
															"src": "18121:28:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18173:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18173:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18178:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18178:4:8",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:8"
																		},
																		"nativeSrc": "18169:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:14:8"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "18185:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18185:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:8"
																},
																"nativeSrc": "18162:25:8",
																"nodeType": "YulFunctionCall",
																"src": "18162:25:8"
															},
															"nativeSrc": "18162:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "18162:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18211:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18211:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18216:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18216:4:8",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18207:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:8"
																		},
																		"nativeSrc": "18207:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:14:8"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "18223:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18223:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18200:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:8"
																},
																"nativeSrc": "18200:25:8",
																"nodeType": "YulFunctionCall",
																"src": "18200:25:8"
															},
															"nativeSrc": "18200:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "18200:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18249:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18249:3:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:4:8",
																				"nodeType": "YulLiteral",
																				"src": "18254:4:8",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18245:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:8"
																		},
																		"nativeSrc": "18245:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18245:14:8"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "18261:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "18261:1:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18238:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:8"
																},
																"nativeSrc": "18238:25:8",
																"nodeType": "YulFunctionCall",
																"src": "18238:25:8"
															},
															"nativeSrc": "18238:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "18238:25:8"
														},
														{
															"nativeSrc": "18425:57:8",
															"nodeType": "YulAssignment",
															"src": "18425:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18447:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:8"
																		},
																		"nativeSrc": "18447:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18454:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:8",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18460:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18460:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18465:4:8",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18471:4:8",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18477:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18477:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "18436:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "18436:10:8"
																},
																"nativeSrc": "18436:46:8",
																"nodeType": "YulFunctionCall",
																"src": "18436:46:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18425:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "18425:7:8"
																}
															]
														},
														{
															"nativeSrc": "18495:21:8",
															"nodeType": "YulAssignment",
															"src": "18495:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18511:4:8",
																		"nodeType": "YulLiteral",
																		"src": "18511:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18505:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18505:5:8"
																},
																"nativeSrc": "18505:11:8",
																"nodeType": "YulFunctionCall",
																"src": "18505:11:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1570,
														"isOffset": false,
														"isSlot": false,
														"src": "18185:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1572,
														"isOffset": false,
														"isSlot": false,
														"src": "18223:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1574,
														"isOffset": false,
														"isSlot": false,
														"src": "18261:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1579,
														"isOffset": false,
														"isSlot": false,
														"src": "18495:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1577,
														"isOffset": false,
														"isSlot": false,
														"src": "18425:7:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1589,
												"nodeType": "InlineAssembly",
												"src": "17088:1438:8"
											}
										]
									},
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "16191:738:8",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16943:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16961:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "16953:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16972:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "16964:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16983:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "16975:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:33:8"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17014:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "17009:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17009:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17031:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "17023:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17023:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17008:30:8"
									},
									"scope": 2381,
									"src": "16934:1598:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "18729:179:8",
										"statements": [
											{
												"assignments": [
													1604,
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18745:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "18740:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1603,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18740:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18767:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "18754:19:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1605,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18754:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"arguments": [
														{
															"id": 1608,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "18787:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1609,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "18790:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1610,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "18793:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1607,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1591,
															1673
														],
														"referencedDeclaration": 1673,
														"src": "18777:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18777:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18739:56:8"
											},
											{
												"condition": {
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18809:8:8",
													"subExpression": {
														"id": 1613,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "18810:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "18805:74:8",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "18819:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1618,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "18845:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18851:16:8",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 715,
																		"src": "18845:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1615,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "18833:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$748_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18839:5:8",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 747,
																	"src": "18833:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18833:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1621,
															"nodeType": "ExpressionStatement",
															"src": "18833:35:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1624,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1606,
													"src": "18895:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1625,
												"nodeType": "Return",
												"src": "18888:13:8"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "18538:85:8",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "18637:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18657:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "18644:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18644:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "18673:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "18660:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18660:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "18689:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "18676:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1597,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18676:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18643:48:8"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "18715:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18715:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:14:8"
									},
									"scope": 2381,
									"src": "18628:280:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "19162:771:8",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 1642,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "19187:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1641,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "19176:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "19172:47:8",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19199:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19216:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "19206:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 1645,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19210:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19206:12:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 1649,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19198:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 1640,
													"id": 1650,
													"nodeType": "Return",
													"src": "19191:28:8"
												}
											},
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "19238:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1672,
														"src": "19230:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"expression": {
														"id": 1654,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "19245:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19247:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19245:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:23:8"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1657,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "19335:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1660,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "19361:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19363:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19361:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1662,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1632,
																	"src": "19371:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19373:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19371:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1664,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "19381:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1665,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "19387:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1666,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "19390:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1667,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "19393:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1658,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "19344:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19348:12:8",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "19344:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19344:51:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "19335:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "19335:60:8"
											},
											{
												"AST": {
													"nativeSrc": "19431:496:8",
													"nodeType": "YulBlock",
													"src": "19431:496:8",
													"statements": [
														{
															"nativeSrc": "19445:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19445:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19464:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19464:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:4:8",
																		"nodeType": "YulLiteral",
																		"src": "19472:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19460:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:8"
																},
																"nativeSrc": "19460:17:8",
																"nodeType": "YulFunctionCall",
																"src": "19460:17:8"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "19449:7:8",
																	"nodeType": "YulTypedName",
																	"src": "19449:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19567:73:8",
															"nodeType": "YulAssignment",
															"src": "19567:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "19589:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:8"
																		},
																		"nativeSrc": "19589:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19589:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:4:8",
																		"nodeType": "YulLiteral",
																		"src": "19596:4:8",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19602:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "19602:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "19617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19617:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19611:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "19611:5:8"
																		},
																		"nativeSrc": "19611:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19611:13:8"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19626:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "19626:7:8"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19635:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:8"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "19578:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "19578:10:8"
																},
																"nativeSrc": "19578:62:8",
																"nodeType": "YulFunctionCall",
																"src": "19578:62:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "19567:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "19567:7:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19796:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19796:6:8"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19804:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19804:4:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19789:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:8"
																},
																"nativeSrc": "19789:20:8",
																"nodeType": "YulFunctionCall",
																"src": "19789:20:8"
															},
															"nativeSrc": "19789:20:8",
															"nodeType": "YulExpressionStatement",
															"src": "19789:20:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19892:4:8",
																		"nodeType": "YulLiteral",
																		"src": "19892:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "19902:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "19902:7:8"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "19911:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "19911:4:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19898:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19898:3:8"
																		},
																		"nativeSrc": "19898:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19898:18:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:8"
																},
																"nativeSrc": "19885:32:8",
																"nodeType": "YulFunctionCall",
																"src": "19885:32:8"
															},
															"nativeSrc": "19885:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "19885:32:8"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": false,
														"src": "19635:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": false,
														"src": "19804:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": false,
														"src": "19911:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "19464:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "19617:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1639,
														"isOffset": false,
														"isSlot": false,
														"src": "19796:6:8",
														"valueSize": 1
													},
													{
														"declaration": 1637,
														"isOffset": false,
														"isSlot": false,
														"src": "19567:7:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1671,
												"nodeType": "InlineAssembly",
												"src": "19406:521:8"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "18914:88:8",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "19016:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19048:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "19035:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19035:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "19072:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "19059:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19059:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "19096:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "19083:14:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19025:78:8"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19132:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "19127:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19127:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19154:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "19141:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19141:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19126:35:8"
									},
									"scope": 2381,
									"src": "19007:926:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "20088:176:8",
										"statements": [
											{
												"body": {
													"id": 1701,
													"nodeType": "Block",
													"src": "20145:92:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1692,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1676,
																		"src": "20163:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1694,
																	"indexExpression": {
																		"id": 1693,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1682,
																		"src": "20173:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20163:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20179:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20163:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1700,
															"nodeType": "IfStatement",
															"src": "20159:68:8",
															"trueBody": {
																"id": 1699,
																"nodeType": "Block",
																"src": "20182:45:8",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1680,
																		"id": 1698,
																		"nodeType": "Return",
																		"src": "20200:12:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1685,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "20118:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1686,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "20122:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20132:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20122:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20118:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"initializationExpression": {
													"assignments": [
														1682
													],
													"declarations": [
														{
															"constant": false,
															"id": 1682,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20111:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1702,
															"src": "20103:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1681,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20103:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1684,
													"initialValue": {
														"hexValue": "30",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20115:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20103:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20140:3:8",
														"subExpression": {
															"id": 1689,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "20142:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1691,
													"nodeType": "ExpressionStatement",
													"src": "20140:3:8"
												},
												"nodeType": "ForStatement",
												"src": "20098:139:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20253:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1680,
												"id": 1704,
												"nodeType": "Return",
												"src": "20246:11:8"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "19939:72:8",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "20025:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "20049:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "20036:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20036:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20035:24:8"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "20082:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1678,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20082:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:6:8"
									},
									"scope": 2381,
									"src": "20016:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "20624:5124:8",
										"statements": [
											{
												"id": 1923,
												"nodeType": "UncheckedBlock",
												"src": "20634:5108:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1714,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "20728:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20733:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20728:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1720,
														"nodeType": "IfStatement",
														"src": "20724:53:8",
														"trueBody": {
															"id": 1719,
															"nodeType": "Block",
															"src": "20736:41:8",
															"statements": [
																{
																	"expression": {
																		"id": 1717,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "20761:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1713,
																	"id": 1718,
																	"nodeType": "Return",
																	"src": "20754:8:8"
																}
															]
														}
													},
													{
														"assignments": [
															1722
														],
														"declarations": [
															{
																"constant": false,
																"id": 1722,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "21712:2:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "21704:10:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1721,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21704:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1724,
														"initialValue": {
															"id": 1723,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "21717:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21704:14:8"
													},
													{
														"assignments": [
															1726
														],
														"declarations": [
															{
																"constant": false,
																"id": 1726,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "21740:2:8",
																"nodeType": "VariableDeclaration",
																"scope": 1923,
																"src": "21732:10:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21732:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1728,
														"initialValue": {
															"hexValue": "31",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21745:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21732:14:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1729,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "21765:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21772:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21777:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21772:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21771:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "21765:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1744,
														"nodeType": "IfStatement",
														"src": "21761:92:8",
														"trueBody": {
															"id": 1743,
															"nodeType": "Block",
															"src": "21783:70:8",
															"statements": [
																{
																	"expression": {
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1735,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "21801:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21808:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21801:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1738,
																	"nodeType": "ExpressionStatement",
																	"src": "21801:10:8"
																},
																{
																	"expression": {
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1739,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "21829:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21836:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21829:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1742,
																	"nodeType": "ExpressionStatement",
																	"src": "21829:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1745,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "21870:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21877:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21877:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 1749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21876:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "21870:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1760,
														"nodeType": "IfStatement",
														"src": "21866:90:8",
														"trueBody": {
															"id": 1759,
															"nodeType": "Block",
															"src": "21887:69:8",
															"statements": [
																{
																	"expression": {
																		"id": 1753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1751,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "21905:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21912:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21905:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1754,
																	"nodeType": "ExpressionStatement",
																	"src": "21905:9:8"
																},
																{
																	"expression": {
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1755,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "21932:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21939:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21932:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1758,
																	"nodeType": "ExpressionStatement",
																	"src": "21932:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1761,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "21973:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21985:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21980:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 1765,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21979:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "21973:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1776,
														"nodeType": "IfStatement",
														"src": "21969:90:8",
														"trueBody": {
															"id": 1775,
															"nodeType": "Block",
															"src": "21990:69:8",
															"statements": [
																{
																	"expression": {
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1767,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "22008:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22015:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22008:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1770,
																	"nodeType": "ExpressionStatement",
																	"src": "22008:9:8"
																},
																{
																	"expression": {
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1771,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "22035:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22042:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22035:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1774,
																	"nodeType": "ExpressionStatement",
																	"src": "22035:9:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1777,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "22076:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 1780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22083:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22088:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 1781,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22082:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "22076:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1792,
														"nodeType": "IfStatement",
														"src": "22072:89:8",
														"trueBody": {
															"id": 1791,
															"nodeType": "Block",
															"src": "22093:68:8",
															"statements": [
																{
																	"expression": {
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1783,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "22111:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22118:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22111:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1786,
																	"nodeType": "ExpressionStatement",
																	"src": "22111:9:8"
																},
																{
																	"expression": {
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1787,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "22138:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22145:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22138:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1790,
																	"nodeType": "ExpressionStatement",
																	"src": "22138:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "22178:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22190:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22185:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 1797,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22184:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "22178:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1808,
														"nodeType": "IfStatement",
														"src": "22174:87:8",
														"trueBody": {
															"id": 1807,
															"nodeType": "Block",
															"src": "22194:67:8",
															"statements": [
																{
																	"expression": {
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1799,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "22212:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22219:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22212:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1802,
																	"nodeType": "ExpressionStatement",
																	"src": "22212:8:8"
																},
																{
																	"expression": {
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1803,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "22238:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22245:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22238:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1806,
																	"nodeType": "ExpressionStatement",
																	"src": "22238:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "22278:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22285:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22290:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22285:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 1813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22284:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "22278:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1824,
														"nodeType": "IfStatement",
														"src": "22274:87:8",
														"trueBody": {
															"id": 1823,
															"nodeType": "Block",
															"src": "22294:67:8",
															"statements": [
																{
																	"expression": {
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1815,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "22312:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22319:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22312:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1818,
																	"nodeType": "ExpressionStatement",
																	"src": "22312:8:8"
																},
																{
																	"expression": {
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1819,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "22338:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22345:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22338:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1822,
																	"nodeType": "ExpressionStatement",
																	"src": "22338:8:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1825,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "22378:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 1828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22385:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22390:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22385:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 1829,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22384:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "22378:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1836,
														"nodeType": "IfStatement",
														"src": "22374:61:8",
														"trueBody": {
															"id": 1835,
															"nodeType": "Block",
															"src": "22394:41:8",
															"statements": [
																{
																	"expression": {
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1831,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "22412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22412:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1834,
																	"nodeType": "ExpressionStatement",
																	"src": "22412:8:8"
																}
															]
														}
													},
													{
														"expression": {
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1837,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "22855:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22861:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1839,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "22865:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22861:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1841,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22860:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22872:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22860:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22855:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1845,
														"nodeType": "ExpressionStatement",
														"src": "22855:18:8"
													},
													{
														"expression": {
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1846,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "24760:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1847,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "24766:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1848,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "24771:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1849,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "24775:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24771:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24766:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1852,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24765:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24782:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24765:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24760:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1856,
														"nodeType": "ExpressionStatement",
														"src": "24760:23:8"
													},
													{
														"expression": {
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1857,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "24869:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1858,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "24875:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1859,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "24880:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1860,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "24884:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24880:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24875:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1863,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24874:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24891:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24874:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24869:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1867,
														"nodeType": "ExpressionStatement",
														"src": "24869:23:8"
													},
													{
														"expression": {
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1868,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "24980:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1869,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "24986:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1870,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "24991:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1871,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "24995:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24991:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24986:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1874,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24985:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25002:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24985:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24980:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1878,
														"nodeType": "ExpressionStatement",
														"src": "24980:23:8"
													},
													{
														"expression": {
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1879,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "25089:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1880,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "25095:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1881,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "25100:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1882,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "25104:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25100:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25095:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1885,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25094:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25111:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25094:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25089:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1889,
														"nodeType": "ExpressionStatement",
														"src": "25089:23:8"
													},
													{
														"expression": {
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1890,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "25199:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1891,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "25205:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1892,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "25210:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1893,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "25214:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25210:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25205:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1896,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25204:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25221:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25204:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25199:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1900,
														"nodeType": "ExpressionStatement",
														"src": "25199:23:8"
													},
													{
														"expression": {
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1901,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "25309:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1902,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "25315:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1903,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "25320:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1904,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1726,
																					"src": "25324:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25320:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25315:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1907,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25314:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25331:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25314:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1911,
														"nodeType": "ExpressionStatement",
														"src": "25309:23:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "25698:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1915,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1726,
																			"src": "25719:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1916,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1709,
																				"src": "25724:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1917,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1726,
																				"src": "25728:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1913,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "25703:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25712:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "25703:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25698:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1713,
														"id": 1922,
														"nodeType": "Return",
														"src": "25691:40:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "20270:292:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20576:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20589:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "20581:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20580:11:8"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "20615:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:9:8"
									},
									"scope": 2381,
									"src": "20567:5181:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "25921:171:8",
										"statements": [
											{
												"id": 1957,
												"nodeType": "UncheckedBlock",
												"src": "25931:155:8",
												"statements": [
													{
														"assignments": [
															1937
														],
														"declarations": [
															{
																"constant": false,
																"id": 1937,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25963:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1957,
																"src": "25955:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1936,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25955:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1941,
														"initialValue": {
															"arguments": [
																{
																	"id": 1939,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "25977:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1938,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1925,
																	1959
																],
																"referencedDeclaration": 1925,
																"src": "25972:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25972:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25955:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1942,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "26000:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1946,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "26042:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 1945,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2380,
																				"src": "26025:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26025:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1948,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1937,
																					"src": "26055:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1949,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1937,
																					"src": "26064:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26055:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1951,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1928,
																				"src": "26073:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26055:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26025:49:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1943,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "26009:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26018:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "26009:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26009:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26000:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1935,
														"id": 1956,
														"nodeType": "Return",
														"src": "25993:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "25754:86:8",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25854:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25867:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25859:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25859:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25879:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25870:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1930,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1929,
														"name": "Rounding",
														"nameLocations": [
															"25870:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "25870:8:8"
													},
													"referencedDeclaration": 772,
													"src": "25870:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25858:30:8"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "25912:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:9:8"
									},
									"scope": 2381,
									"src": "25845:247:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "26281:2334:8",
										"statements": [
											{
												"expression": {
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1967,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26363:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1970,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "26383:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26387:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "26383:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1968,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26367:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26376:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26367:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:55:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26426:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "26367:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26363:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1977,
												"nodeType": "ExpressionStatement",
												"src": "26363:64:8"
											},
											{
												"expression": {
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1978,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26503:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1981,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "26525:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1982,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "26530:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26525:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1984,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26524:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26535:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "26524:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1979,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26508:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26517:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26508:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26508:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26558:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26508:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "26503:56:8"
											},
											{
												"expression": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1992,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26634:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1995,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "26656:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 1996,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "26661:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26656:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1998,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26655:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26666:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "26655:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 1993,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26639:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26648:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26639:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26639:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26681:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "26639:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26634:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2005,
												"nodeType": "ExpressionStatement",
												"src": "26634:48:8"
											},
											{
												"expression": {
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2006,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26757:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2009,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "26779:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2010,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "26784:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26779:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2012,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26778:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26789:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "26778:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2007,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26762:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26771:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26762:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26800:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "26762:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26757:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "26757:44:8"
											},
											{
												"expression": {
													"id": 2032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2020,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26874:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2023,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "26896:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2024,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "26901:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26896:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2026,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26895:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666",
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26906:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xff"
																	},
																	"src": "26895:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2021,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26879:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26888:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26879:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26879:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "33",
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26915:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "26879:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26874:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2033,
												"nodeType": "ExpressionStatement",
												"src": "26874:42:8"
											},
											{
												"expression": {
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2034,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "26988:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2037,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "27010:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2038,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "27015:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27010:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2040,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27009:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866",
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27020:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "0xf"
																	},
																	"src": "27009:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2035,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "26993:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27002:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "26993:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26993:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "32",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27028:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26993:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26988:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "26988:41:8"
											},
											{
												"AST": {
													"nativeSrc": "28490:119:8",
													"nodeType": "YulBlock",
													"src": "28490:119:8",
													"statements": [
														{
															"nativeSrc": "28504:95:8",
															"nodeType": "YulAssignment",
															"src": "28504:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "28512:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "28512:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "28524:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "28524:1:8"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "28527:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "28527:1:8"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "28520:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "28520:3:8"
																				},
																				"nativeSrc": "28520:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "28520:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28531:66:8",
																				"nodeType": "YulLiteral",
																				"src": "28531:66:8",
																				"type": "",
																				"value": "0x0000010102020202030303030303030300000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "28515:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "28515:4:8"
																		},
																		"nativeSrc": "28515:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:83:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28509:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "28509:2:8"
																},
																"nativeSrc": "28509:90:8",
																"nodeType": "YulFunctionCall",
																"src": "28509:90:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "28504:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1965,
														"isOffset": false,
														"isSlot": false,
														"src": "28504:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1965,
														"isOffset": false,
														"isSlot": false,
														"src": "28512:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1965,
														"isOffset": false,
														"isSlot": false,
														"src": "28524:1:8",
														"valueSize": 1
													},
													{
														"declaration": 1962,
														"isOffset": false,
														"isSlot": false,
														"src": "28527:1:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2048,
												"nodeType": "InlineAssembly",
												"src": "28465:144:8"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "26098:119:8",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26231:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26244:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "26236:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26235:11:8"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "26278:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "26270:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26269:11:8"
									},
									"scope": 2381,
									"src": "26222:2393:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "28848:175:8",
										"statements": [
											{
												"id": 2082,
												"nodeType": "UncheckedBlock",
												"src": "28858:159:8",
												"statements": [
													{
														"assignments": [
															2062
														],
														"declarations": [
															{
																"constant": false,
																"id": 2062,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28890:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2082,
																"src": "28882:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2066,
														"initialValue": {
															"arguments": [
																{
																	"id": 2064,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "28904:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2063,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2050,
																	2084
																],
																"referencedDeclaration": 2050,
																"src": "28899:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28899:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28882:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2067,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "28931:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2071,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2056,
																					"src": "28973:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2070,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2380,
																				"src": "28956:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28956:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28986:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2074,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2062,
																					"src": "28991:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28986:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2076,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2053,
																				"src": "29000:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28986:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "28956:49:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2068,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "28940:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28949:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "28940:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28940:66:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28931:75:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2060,
														"id": 2081,
														"nodeType": "Return",
														"src": "28924:82:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "28621:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28777:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28790:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "28782:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28782:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28806:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "28797:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "Rounding",
														"nameLocations": [
															"28797:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "28797:8:8"
													},
													"referencedDeclaration": 772,
													"src": "28797:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28781:34:8"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "28839:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28838:9:8"
									},
									"scope": 2381,
									"src": "28768:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "29216:854:8",
										"statements": [
											{
												"assignments": [
													2093
												],
												"declarations": [
													{
														"constant": false,
														"id": 2093,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29234:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2212,
														"src": "29226:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2092,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29226:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2095,
												"initialValue": {
													"hexValue": "30",
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29243:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29226:18:8"
											},
											{
												"id": 2209,
												"nodeType": "UncheckedBlock",
												"src": "29254:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29282:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29291:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29297:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29291:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "29282:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2112,
														"nodeType": "IfStatement",
														"src": "29278:103:8",
														"trueBody": {
															"id": 2111,
															"nodeType": "Block",
															"src": "29301:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29319:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29328:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29334:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "29328:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "29319:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2106,
																	"nodeType": "ExpressionStatement",
																	"src": "29319:17:8"
																},
																{
																	"expression": {
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29354:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29364:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29354:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2110,
																	"nodeType": "ExpressionStatement",
																	"src": "29354:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29398:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29407:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29413:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29407:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "29398:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2129,
														"nodeType": "IfStatement",
														"src": "29394:103:8",
														"trueBody": {
															"id": 2128,
															"nodeType": "Block",
															"src": "29417:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29435:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29444:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29450:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "29444:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "29435:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2123,
																	"nodeType": "ExpressionStatement",
																	"src": "29435:17:8"
																},
																{
																	"expression": {
																		"id": 2126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29470:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29480:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29470:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2127,
																	"nodeType": "ExpressionStatement",
																	"src": "29470:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29514:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29523:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29529:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29523:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "29514:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2146,
														"nodeType": "IfStatement",
														"src": "29510:103:8",
														"trueBody": {
															"id": 2145,
															"nodeType": "Block",
															"src": "29533:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29551:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29560:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29566:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29560:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29551:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2140,
																	"nodeType": "ExpressionStatement",
																	"src": "29551:17:8"
																},
																{
																	"expression": {
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29586:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29596:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29586:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2144,
																	"nodeType": "ExpressionStatement",
																	"src": "29586:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29630:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29639:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29645:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29639:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29630:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2163,
														"nodeType": "IfStatement",
														"src": "29626:100:8",
														"trueBody": {
															"id": 2162,
															"nodeType": "Block",
															"src": "29648:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29666:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29675:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29681:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29675:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29666:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2157,
																	"nodeType": "ExpressionStatement",
																	"src": "29666:16:8"
																},
																{
																	"expression": {
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29700:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29710:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29700:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2161,
																	"nodeType": "ExpressionStatement",
																	"src": "29700:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29743:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29752:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29758:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29752:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29743:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2180,
														"nodeType": "IfStatement",
														"src": "29739:100:8",
														"trueBody": {
															"id": 2179,
															"nodeType": "Block",
															"src": "29761:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2169,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29779:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29788:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29794:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29788:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29779:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2174,
																	"nodeType": "ExpressionStatement",
																	"src": "29779:16:8"
																},
																{
																	"expression": {
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29813:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29823:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29813:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2178,
																	"nodeType": "ExpressionStatement",
																	"src": "29813:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29856:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29865:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29871:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29865:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29856:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2197,
														"nodeType": "IfStatement",
														"src": "29852:100:8",
														"trueBody": {
															"id": 2196,
															"nodeType": "Block",
															"src": "29874:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2087,
																			"src": "29892:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29901:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29907:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29901:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29892:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "29892:16:8"
																},
																{
																	"expression": {
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "29926:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29936:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29926:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2195,
																	"nodeType": "ExpressionStatement",
																	"src": "29926:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "29969:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29978:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29984:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29978:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29969:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2208,
														"nodeType": "IfStatement",
														"src": "29965:66:8",
														"trueBody": {
															"id": 2207,
															"nodeType": "Block",
															"src": "29987:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2203,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "30005:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30015:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30005:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2206,
																	"nodeType": "ExpressionStatement",
																	"src": "30005:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2210,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2093,
													"src": "30057:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2211,
												"nodeType": "Return",
												"src": "30050:13:8"
											}
										]
									},
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "29029:120:8",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29163:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29177:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "29169:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:15:8"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "29207:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29206:9:8"
									},
									"scope": 2381,
									"src": "29154:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "30305:177:8",
										"statements": [
											{
												"id": 2245,
												"nodeType": "UncheckedBlock",
												"src": "30315:161:8",
												"statements": [
													{
														"assignments": [
															2225
														],
														"declarations": [
															{
																"constant": false,
																"id": 2225,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30347:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2245,
																"src": "30339:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2224,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30339:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2229,
														"initialValue": {
															"arguments": [
																{
																	"id": 2227,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2216,
																	"src": "30362:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2226,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2213,
																	2247
																],
																"referencedDeclaration": 2213,
																"src": "30356:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30356:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30339:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "30389:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2234,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2219,
																					"src": "30431:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2233,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2380,
																				"src": "30414:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30414:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30444:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2237,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2225,
																					"src": "30450:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30444:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2239,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "30459:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30444:20:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "30414:50:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2231,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "30398:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30407:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "30398:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30398:67:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30389:76:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2223,
														"id": 2244,
														"nodeType": "Return",
														"src": "30382:83:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2214,
										"nodeType": "StructuredDocumentation",
										"src": "30076:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "30233:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30247:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "30239:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30263:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "30254:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2218,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2217,
														"name": "Rounding",
														"nameLocations": [
															"30254:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "30254:8:8"
													},
													"referencedDeclaration": 772,
													"src": "30254:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:34:8"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "30296:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:9:8"
									},
									"scope": 2381,
									"src": "30224:258:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "30800:675:8",
										"statements": [
											{
												"expression": {
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2255,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "30882:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2258,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2250,
																		"src": "30902:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30906:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "30902:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2256,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "30886:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30895:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "30886:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30886:55:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30945:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "30886:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30882:64:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2265,
												"nodeType": "ExpressionStatement",
												"src": "30882:64:8"
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2266,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "31022:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2269,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2250,
																					"src": "31044:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2270,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "31049:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31044:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2272,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31043:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31054:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "31043:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2267,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "31027:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31036:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "31027:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31027:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31077:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "31027:51:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "31022:56:8"
											},
											{
												"expression": {
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2280,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "31153:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2283,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2250,
																					"src": "31175:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2284,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "31180:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31175:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2286,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31174:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31185:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "31174:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2281,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "31158:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31167:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "31158:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31158:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31200:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "31158:43:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "31153:48:8"
											},
											{
												"expression": {
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2294,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "31276:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2299,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2297,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2250,
																					"src": "31298:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2298,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2253,
																					"src": "31303:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31298:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2300,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31297:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31308:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "31297:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2295,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4146,
																	"src": "31281:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31290:6:8",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4145,
																"src": "31281:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31281:34:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31319:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "31281:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2307,
												"nodeType": "ExpressionStatement",
												"src": "31276:44:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2308,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2253,
																	"src": "31426:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "31426:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2311,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31425:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2314,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2250,
																				"src": "31453:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 2315,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2253,
																				"src": "31458:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31453:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2317,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31452:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31463:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "31452:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2312,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4146,
																"src": "31436:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31445:6:8",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4145,
															"src": "31436:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31436:32:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31425:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2322,
												"nodeType": "Return",
												"src": "31418:50:8"
											}
										]
									},
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "30488:246:8",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30748:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30763:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "30755:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30755:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:11:8"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "30797:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "30789:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:11:8"
									},
									"scope": 2381,
									"src": "30739:736:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2360,
										"nodeType": "Block",
										"src": "31712:184:8",
										"statements": [
											{
												"id": 2359,
												"nodeType": "UncheckedBlock",
												"src": "31722:168:8",
												"statements": [
													{
														"assignments": [
															2336
														],
														"declarations": [
															{
																"constant": false,
																"id": 2336,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31754:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2359,
																"src": "31746:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31746:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2340,
														"initialValue": {
															"arguments": [
																{
																	"id": 2338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "31770:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2337,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2324,
																	2361
																],
																"referencedDeclaration": 2324,
																"src": "31763:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31763:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31746:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2341,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "31797:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2345,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2330,
																					"src": "31839:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$772",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2344,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2380,
																				"src": "31822:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$772_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31822:26:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31852:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2350,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2348,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2336,
																								"src": "31858:6:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2349,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31868:1:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "31858:11:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2351,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "31857:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31852:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2353,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2327,
																				"src": "31873:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31852:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "31822:56:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2342,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4146,
																		"src": "31806:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4146_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31815:6:8",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4145,
																	"src": "31806:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31806:73:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31797:82:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2334,
														"id": 2358,
														"nodeType": "Return",
														"src": "31790:89:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "31481:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31639:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31654:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "31646:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31670:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "31661:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2328,
														"name": "Rounding",
														"nameLocations": [
															"31661:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "31661:8:8"
													},
													"referencedDeclaration": 772,
													"src": "31661:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31645:34:8"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2361,
												"src": "31703:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:9:8"
									},
									"scope": 2381,
									"src": "31630:266:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "32094:48:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2372,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "32117:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$772",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$772",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32111:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2370,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "32111:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32111:15:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32129:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "32111:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32134:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32111:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2378,
												"nodeType": "Return",
												"src": "32104:31:8"
											}
										]
									},
									"documentation": {
										"id": 2362,
										"nodeType": "StructuredDocumentation",
										"src": "31902:113:8",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "32029:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32055:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "32046:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$772",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2364,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2363,
														"name": "Rounding",
														"nameLocations": [
															"32046:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 772,
														"src": "32046:8:8"
													},
													"referencedDeclaration": 772,
													"src": "32046:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$772",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:19:8"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "32088:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2367,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32088:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:6:8"
									},
									"scope": 2381,
									"src": "32020:122:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2382,
							"src": "281:31863:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:32042:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4146
						]
					},
					"id": 4147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2383,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2384,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:9",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4146,
							"linearizedBaseContracts": [
								4146
							],
							"name": "SafeCast",
							"nameLocation": "777:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:9",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2391,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "902:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2386,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "914:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:9"
									},
									"src": "865:64:9"
								},
								{
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:9",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2396,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "1049:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2393,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:9"
									},
									"src": "1015:48:9"
								},
								{
									"documentation": {
										"id": 2397,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:9",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2403,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1177:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2403,
												"src": "1189:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2400,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:9"
									},
									"src": "1141:62:9"
								},
								{
									"documentation": {
										"id": 2404,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:9",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2408,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "1323:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:9"
									},
									"src": "1289:49:9"
								},
								{
									"body": {
										"id": 2435,
										"nodeType": "Block",
										"src": "1695:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2416,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "1709:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2418,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2417,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2429,
												"nodeType": "IfStatement",
												"src": "1705:105:9",
												"trueBody": {
													"id": 2428,
													"nodeType": "Block",
													"src": "1736:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2425,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2411,
																		"src": "1793:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2423,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "1757:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2427,
															"nodeType": "RevertStatement",
															"src": "1750:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2432,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2411,
															"src": "1834:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2430,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2415,
												"id": 2434,
												"nodeType": "Return",
												"src": "1819:21:9"
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:9",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "1648:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:9"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2436,
												"src": "1686:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2413,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:9"
									},
									"scope": 4146,
									"src": "1629:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "2204:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2444,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2439,
														"src": "2218:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2446,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2445,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2457,
												"nodeType": "IfStatement",
												"src": "2214:105:9",
												"trueBody": {
													"id": 2456,
													"nodeType": "Block",
													"src": "2245:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2453,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2439,
																		"src": "2302:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2451,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "2266:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2455,
															"nodeType": "RevertStatement",
															"src": "2259:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2460,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "2343:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2458,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2443,
												"id": 2462,
												"nodeType": "Return",
												"src": "2328:21:9"
											}
										]
									},
									"documentation": {
										"id": 2437,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:9",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "2157:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:9"
									},
									"returnParameters": {
										"id": 2443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "2195:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2441,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:9"
									},
									"scope": 4146,
									"src": "2138:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2491,
										"nodeType": "Block",
										"src": "2713:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2472,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "2727:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2474,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2473,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2485,
												"nodeType": "IfStatement",
												"src": "2723:105:9",
												"trueBody": {
													"id": 2484,
													"nodeType": "Block",
													"src": "2754:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2481,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2467,
																		"src": "2811:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2479,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "2775:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2483,
															"nodeType": "RevertStatement",
															"src": "2768:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2488,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "2852:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2486,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2471,
												"id": 2490,
												"nodeType": "Return",
												"src": "2837:21:9"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:9",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "2666:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:9"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "2704:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2469,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:9"
									},
									"scope": 4146,
									"src": "2647:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "3222:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2500,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2495,
														"src": "3236:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2502,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2501,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2513,
												"nodeType": "IfStatement",
												"src": "3232:105:9",
												"trueBody": {
													"id": 2512,
													"nodeType": "Block",
													"src": "3263:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2509,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2495,
																		"src": "3320:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2507,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "3284:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2511,
															"nodeType": "RevertStatement",
															"src": "3277:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2516,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "3361:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2514,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2499,
												"id": 2518,
												"nodeType": "Return",
												"src": "3346:21:9"
											}
										]
									},
									"documentation": {
										"id": 2493,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:9",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "3175:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:9"
									},
									"returnParameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "3213:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2497,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:9"
									},
									"scope": 4146,
									"src": "3156:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2547,
										"nodeType": "Block",
										"src": "3731:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2528,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "3745:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2530,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2529,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2541,
												"nodeType": "IfStatement",
												"src": "3741:105:9",
												"trueBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "3772:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2537,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2523,
																		"src": "3829:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2535,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "3793:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2539,
															"nodeType": "RevertStatement",
															"src": "3786:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2544,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "3870:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2542,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2527,
												"id": 2546,
												"nodeType": "Return",
												"src": "3855:21:9"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:9",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "3684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:9"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2548,
												"src": "3722:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2525,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:9"
									},
									"scope": 4146,
									"src": "3665:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "4240:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2556,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "4254:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2558,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2569,
												"nodeType": "IfStatement",
												"src": "4250:105:9",
												"trueBody": {
													"id": 2568,
													"nodeType": "Block",
													"src": "4281:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2565,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2551,
																		"src": "4338:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2563,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "4302:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2567,
															"nodeType": "RevertStatement",
															"src": "4295:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2572,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2551,
															"src": "4379:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2570,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2555,
												"id": 2574,
												"nodeType": "Return",
												"src": "4364:21:9"
											}
										]
									},
									"documentation": {
										"id": 2549,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:9",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "4193:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:9"
									},
									"returnParameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "4231:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2553,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:9"
									},
									"scope": 4146,
									"src": "4174:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "4749:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2584,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "4763:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2586,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2585,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2597,
												"nodeType": "IfStatement",
												"src": "4759:105:9",
												"trueBody": {
													"id": 2596,
													"nodeType": "Block",
													"src": "4790:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2593,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "4847:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2591,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "4811:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2595,
															"nodeType": "RevertStatement",
															"src": "4804:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2600,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "4888:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2598,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2583,
												"id": 2602,
												"nodeType": "Return",
												"src": "4873:21:9"
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:9",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "4702:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:9"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "4740:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2581,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:9"
									},
									"scope": 4146,
									"src": "4683:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "5258:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2612,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2607,
														"src": "5272:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2614,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2613,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2625,
												"nodeType": "IfStatement",
												"src": "5268:105:9",
												"trueBody": {
													"id": 2624,
													"nodeType": "Block",
													"src": "5299:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5356:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2619,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "5320:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2623,
															"nodeType": "RevertStatement",
															"src": "5313:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2628,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "5397:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2626,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2611,
												"id": 2630,
												"nodeType": "Return",
												"src": "5382:21:9"
											}
										]
									},
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:9",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "5211:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:9"
									},
									"returnParameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "5249:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2609,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:9"
									},
									"scope": 4146,
									"src": "5192:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "5767:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2640,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "5781:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2642,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2641,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2653,
												"nodeType": "IfStatement",
												"src": "5777:105:9",
												"trueBody": {
													"id": 2652,
													"nodeType": "Block",
													"src": "5808:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2635,
																		"src": "5865:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2647,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "5829:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2651,
															"nodeType": "RevertStatement",
															"src": "5822:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2656,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2635,
															"src": "5906:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2654,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2639,
												"id": 2658,
												"nodeType": "Return",
												"src": "5891:21:9"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:9",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5720:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:9"
									},
									"returnParameters": {
										"id": 2639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "5758:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2637,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:9"
									},
									"scope": 4146,
									"src": "5701:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "6276:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2668,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2663,
														"src": "6290:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2670,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2669,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2681,
												"nodeType": "IfStatement",
												"src": "6286:105:9",
												"trueBody": {
													"id": 2680,
													"nodeType": "Block",
													"src": "6317:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2677,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2663,
																		"src": "6374:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2675,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "6338:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2679,
															"nodeType": "RevertStatement",
															"src": "6331:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2684,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "6415:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2682,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2667,
												"id": 2686,
												"nodeType": "Return",
												"src": "6400:21:9"
											}
										]
									},
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:9",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:9"
									},
									"returnParameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2665,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:9"
									},
									"scope": 4146,
									"src": "6210:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2715,
										"nodeType": "Block",
										"src": "6785:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2696,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "6799:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2698,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2697,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2709,
												"nodeType": "IfStatement",
												"src": "6795:105:9",
												"trueBody": {
													"id": 2708,
													"nodeType": "Block",
													"src": "6826:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2705,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2691,
																		"src": "6883:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2703,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "6847:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2707,
															"nodeType": "RevertStatement",
															"src": "6840:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2712,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "6924:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2710,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2714,
												"nodeType": "Return",
												"src": "6909:21:9"
											}
										]
									},
									"documentation": {
										"id": 2689,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:9",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "6738:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:9"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "6776:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2693,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:9"
									},
									"scope": 4146,
									"src": "6719:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2743,
										"nodeType": "Block",
										"src": "7294:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2724,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2719,
														"src": "7308:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2726,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2725,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2737,
												"nodeType": "IfStatement",
												"src": "7304:105:9",
												"trueBody": {
													"id": 2736,
													"nodeType": "Block",
													"src": "7335:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2733,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "7392:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2731,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "7356:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2735,
															"nodeType": "RevertStatement",
															"src": "7349:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "7433:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2738,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2723,
												"id": 2742,
												"nodeType": "Return",
												"src": "7418:21:9"
											}
										]
									},
									"documentation": {
										"id": 2717,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:9",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "7247:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:9"
									},
									"returnParameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2744,
												"src": "7285:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2721,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:9"
									},
									"scope": 4146,
									"src": "7228:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2771,
										"nodeType": "Block",
										"src": "7803:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2752,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2747,
														"src": "7817:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2754,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2753,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2765,
												"nodeType": "IfStatement",
												"src": "7813:105:9",
												"trueBody": {
													"id": 2764,
													"nodeType": "Block",
													"src": "7844:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2761,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2747,
																		"src": "7901:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2759,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "7865:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2763,
															"nodeType": "RevertStatement",
															"src": "7858:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2768,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "7942:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2766,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2751,
												"id": 2770,
												"nodeType": "Return",
												"src": "7927:21:9"
											}
										]
									},
									"documentation": {
										"id": 2745,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:9",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "7756:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:9"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "7794:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2749,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:9"
									},
									"scope": 4146,
									"src": "7737:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "8312:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2780,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2775,
														"src": "8326:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2782,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2781,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2793,
												"nodeType": "IfStatement",
												"src": "8322:105:9",
												"trueBody": {
													"id": 2792,
													"nodeType": "Block",
													"src": "8353:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2789,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "8410:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2787,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "8374:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2791,
															"nodeType": "RevertStatement",
															"src": "8367:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2796,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2775,
															"src": "8451:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2794,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2779,
												"id": 2798,
												"nodeType": "Return",
												"src": "8436:21:9"
											}
										]
									},
									"documentation": {
										"id": 2773,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:9",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "8265:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:9"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "8303:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2777,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:9"
									},
									"scope": 4146,
									"src": "8246:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2827,
										"nodeType": "Block",
										"src": "8821:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2808,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2803,
														"src": "8835:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2810,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2809,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2821,
												"nodeType": "IfStatement",
												"src": "8831:105:9",
												"trueBody": {
													"id": 2820,
													"nodeType": "Block",
													"src": "8862:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2817,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2803,
																		"src": "8919:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2815,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "8883:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2819,
															"nodeType": "RevertStatement",
															"src": "8876:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2824,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2803,
															"src": "8960:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2822,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2807,
												"id": 2826,
												"nodeType": "Return",
												"src": "8945:21:9"
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:9",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "8774:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:9"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2828,
												"src": "8812:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2805,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:9"
									},
									"scope": 4146,
									"src": "8755:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2855,
										"nodeType": "Block",
										"src": "9330:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2836,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2831,
														"src": "9344:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2838,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2837,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2849,
												"nodeType": "IfStatement",
												"src": "9340:105:9",
												"trueBody": {
													"id": 2848,
													"nodeType": "Block",
													"src": "9371:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2845,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2831,
																		"src": "9428:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2843,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "9392:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2847,
															"nodeType": "RevertStatement",
															"src": "9385:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2852,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2831,
															"src": "9469:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2850,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2835,
												"id": 2854,
												"nodeType": "Return",
												"src": "9454:21:9"
											}
										]
									},
									"documentation": {
										"id": 2829,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:9",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "9283:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:9"
									},
									"returnParameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "9321:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2833,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:9"
									},
									"scope": 4146,
									"src": "9264:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2883,
										"nodeType": "Block",
										"src": "9839:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2864,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2859,
														"src": "9853:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2866,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2865,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2877,
												"nodeType": "IfStatement",
												"src": "9849:105:9",
												"trueBody": {
													"id": 2876,
													"nodeType": "Block",
													"src": "9880:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2873,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2859,
																		"src": "9937:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2871,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "9901:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2875,
															"nodeType": "RevertStatement",
															"src": "9894:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2859,
															"src": "9978:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2878,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2863,
												"id": 2882,
												"nodeType": "Return",
												"src": "9963:21:9"
											}
										]
									},
									"documentation": {
										"id": 2857,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:9",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "9792:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:9"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2884,
												"src": "9830:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2861,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:9"
									},
									"scope": 4146,
									"src": "9773:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2911,
										"nodeType": "Block",
										"src": "10348:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2892,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "10362:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2894,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2893,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2905,
												"nodeType": "IfStatement",
												"src": "10358:105:9",
												"trueBody": {
													"id": 2904,
													"nodeType": "Block",
													"src": "10389:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2901,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2887,
																		"src": "10446:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2899,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "10410:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2903,
															"nodeType": "RevertStatement",
															"src": "10403:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2908,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2887,
															"src": "10487:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2906,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2891,
												"id": 2910,
												"nodeType": "Return",
												"src": "10472:21:9"
											}
										]
									},
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:9",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2912,
												"src": "10301:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:9"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2912,
												"src": "10339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2889,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:9"
									},
									"scope": 4146,
									"src": "10282:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2939,
										"nodeType": "Block",
										"src": "10857:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2920,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "10871:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2922,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2921,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2933,
												"nodeType": "IfStatement",
												"src": "10867:105:9",
												"trueBody": {
													"id": 2932,
													"nodeType": "Block",
													"src": "10898:74:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2929,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2915,
																		"src": "10955:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2927,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "10919:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2931,
															"nodeType": "RevertStatement",
															"src": "10912:49:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2936,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "10996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2934,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2919,
												"id": 2938,
												"nodeType": "Return",
												"src": "10981:21:9"
											}
										]
									},
									"documentation": {
										"id": 2913,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:9",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "10810:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:9"
									},
									"returnParameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2940,
												"src": "10848:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2917,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:9"
									},
									"scope": 4146,
									"src": "10791:218:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "11360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2948,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "11374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2950,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2949,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2961,
												"nodeType": "IfStatement",
												"src": "11370:103:9",
												"trueBody": {
													"id": 2960,
													"nodeType": "Block",
													"src": "11400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2957,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2943,
																		"src": "11456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2955,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "11421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2959,
															"nodeType": "RevertStatement",
															"src": "11414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2964,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "11496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2962,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2947,
												"id": 2966,
												"nodeType": "Return",
												"src": "11482:20:9"
											}
										]
									},
									"documentation": {
										"id": 2941,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:9",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2943,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "11314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:9"
									},
									"returnParameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "11352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2945,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:9"
									},
									"scope": 4146,
									"src": "11296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "11860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2976,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "11874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2978,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2977,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2989,
												"nodeType": "IfStatement",
												"src": "11870:103:9",
												"trueBody": {
													"id": 2988,
													"nodeType": "Block",
													"src": "11900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2985,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "11956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2983,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "11921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2987,
															"nodeType": "RevertStatement",
															"src": "11914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2992,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "11996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2990,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2975,
												"id": 2994,
												"nodeType": "Return",
												"src": "11982:20:9"
											}
										]
									},
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:9",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "11814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:9"
									},
									"returnParameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "11852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2973,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:9"
									},
									"scope": 4146,
									"src": "11796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3023,
										"nodeType": "Block",
										"src": "12360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3004,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "12374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3006,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3005,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3017,
												"nodeType": "IfStatement",
												"src": "12370:103:9",
												"trueBody": {
													"id": 3016,
													"nodeType": "Block",
													"src": "12400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3013,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2999,
																		"src": "12456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3011,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "12421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3015,
															"nodeType": "RevertStatement",
															"src": "12414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3020,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "12496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3018,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3003,
												"id": 3022,
												"nodeType": "Return",
												"src": "12482:20:9"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:9",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "12314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:9"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "12352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3001,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:9"
									},
									"scope": 4146,
									"src": "12296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "12860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3032,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3027,
														"src": "12874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3034,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3033,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3045,
												"nodeType": "IfStatement",
												"src": "12870:103:9",
												"trueBody": {
													"id": 3044,
													"nodeType": "Block",
													"src": "12900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3041,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3027,
																		"src": "12956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3039,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "12921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3043,
															"nodeType": "RevertStatement",
															"src": "12914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3048,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3027,
															"src": "12996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3046,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3031,
												"id": 3050,
												"nodeType": "Return",
												"src": "12982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3025,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:9",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "12814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:9"
									},
									"returnParameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "12852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3029,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:9"
									},
									"scope": 4146,
									"src": "12796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3079,
										"nodeType": "Block",
										"src": "13360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3060,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3055,
														"src": "13374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3062,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3061,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3073,
												"nodeType": "IfStatement",
												"src": "13370:103:9",
												"trueBody": {
													"id": 3072,
													"nodeType": "Block",
													"src": "13400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3069,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3055,
																		"src": "13456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3067,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "13421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3071,
															"nodeType": "RevertStatement",
															"src": "13414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3076,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "13496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3074,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3059,
												"id": 3078,
												"nodeType": "Return",
												"src": "13482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3053,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:9",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "13314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:9"
									},
									"returnParameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3080,
												"src": "13352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3057,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:9"
									},
									"scope": 4146,
									"src": "13296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "13860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3088,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3083,
														"src": "13874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3090,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3089,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3101,
												"nodeType": "IfStatement",
												"src": "13870:103:9",
												"trueBody": {
													"id": 3100,
													"nodeType": "Block",
													"src": "13900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3097,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3083,
																		"src": "13956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3095,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "13921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3099,
															"nodeType": "RevertStatement",
															"src": "13914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3104,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3083,
															"src": "13996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3102,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3087,
												"id": 3106,
												"nodeType": "Return",
												"src": "13982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3081,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:9",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "13814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:9"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "13852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3085,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:9"
									},
									"scope": 4146,
									"src": "13796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3135,
										"nodeType": "Block",
										"src": "14360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3111,
														"src": "14374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3118,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3117,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3129,
												"nodeType": "IfStatement",
												"src": "14370:103:9",
												"trueBody": {
													"id": 3128,
													"nodeType": "Block",
													"src": "14400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3111,
																		"src": "14456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3123,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "14421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3127,
															"nodeType": "RevertStatement",
															"src": "14414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3132,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3111,
															"src": "14496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3130,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3115,
												"id": 3134,
												"nodeType": "Return",
												"src": "14482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:9",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "14314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:9"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3136,
												"src": "14352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3113,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:9"
									},
									"scope": 4146,
									"src": "14296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3163,
										"nodeType": "Block",
										"src": "14860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3144,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "14874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3146,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3145,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3157,
												"nodeType": "IfStatement",
												"src": "14870:103:9",
												"trueBody": {
													"id": 3156,
													"nodeType": "Block",
													"src": "14900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3153,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3139,
																		"src": "14956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3151,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "14921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3155,
															"nodeType": "RevertStatement",
															"src": "14914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3160,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "14996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3158,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3143,
												"id": 3162,
												"nodeType": "Return",
												"src": "14982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3137,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:9",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3164,
												"src": "14814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:9"
									},
									"returnParameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3164,
												"src": "14852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3141,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:9"
									},
									"scope": 4146,
									"src": "14796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3191,
										"nodeType": "Block",
										"src": "15360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3172,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "15374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3174,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3173,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3185,
												"nodeType": "IfStatement",
												"src": "15370:103:9",
												"trueBody": {
													"id": 3184,
													"nodeType": "Block",
													"src": "15400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3181,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3167,
																		"src": "15456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3179,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "15421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3183,
															"nodeType": "RevertStatement",
															"src": "15414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3188,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "15496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3186,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3190,
												"nodeType": "Return",
												"src": "15482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3165,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:9",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3192,
												"src": "15314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:9"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3192,
												"src": "15352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3169,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:9"
									},
									"scope": 4146,
									"src": "15296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3219,
										"nodeType": "Block",
										"src": "15860:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3200,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3195,
														"src": "15874:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3202,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3201,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3213,
												"nodeType": "IfStatement",
												"src": "15870:103:9",
												"trueBody": {
													"id": 3212,
													"nodeType": "Block",
													"src": "15900:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3209,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3195,
																		"src": "15956:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3207,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "15921:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3211,
															"nodeType": "RevertStatement",
															"src": "15914:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3216,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3195,
															"src": "15996:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3214,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3199,
												"id": 3218,
												"nodeType": "Return",
												"src": "15982:20:9"
											}
										]
									},
									"documentation": {
										"id": 3193,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:9",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3220,
												"src": "15814:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:9"
									},
									"returnParameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3220,
												"src": "15852:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3197,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:9"
									},
									"scope": 4146,
									"src": "15796:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3247,
										"nodeType": "Block",
										"src": "16360:149:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3228,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3223,
														"src": "16374:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3230,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3229,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3241,
												"nodeType": "IfStatement",
												"src": "16370:103:9",
												"trueBody": {
													"id": 3240,
													"nodeType": "Block",
													"src": "16400:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3237,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3223,
																		"src": "16456:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3235,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "16421:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3239,
															"nodeType": "RevertStatement",
															"src": "16414:48:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3244,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3223,
															"src": "16496:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3242,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 3245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3227,
												"id": 3246,
												"nodeType": "Return",
												"src": "16482:20:9"
											}
										]
									},
									"documentation": {
										"id": 3221,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:9",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3248,
												"src": "16314:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:9"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3248,
												"src": "16352:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3225,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:9"
									},
									"scope": 4146,
									"src": "16296:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3275,
										"nodeType": "Block",
										"src": "16854:146:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3256,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3251,
														"src": "16868:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3258,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3257,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:9",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3269,
												"nodeType": "IfStatement",
												"src": "16864:101:9",
												"trueBody": {
													"id": 3268,
													"nodeType": "Block",
													"src": "16893:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3265,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3251,
																		"src": "16948:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3263,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "16914:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3267,
															"nodeType": "RevertStatement",
															"src": "16907:47:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3272,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3251,
															"src": "16987:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3270,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:9",
															"typeDescriptions": {}
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3255,
												"id": 3274,
												"nodeType": "Return",
												"src": "16974:19:9"
											}
										]
									},
									"documentation": {
										"id": 3249,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:9",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "16809:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:9"
									},
									"returnParameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "16847:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3253,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:9"
									},
									"scope": 4146,
									"src": "16792:208:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3298,
										"nodeType": "Block",
										"src": "17236:128:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3284,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3279,
														"src": "17250:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3292,
												"nodeType": "IfStatement",
												"src": "17246:81:9",
												"trueBody": {
													"id": 3291,
													"nodeType": "Block",
													"src": "17261:66:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3288,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3279,
																		"src": "17310:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3287,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "17282:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3290,
															"nodeType": "RevertStatement",
															"src": "17275:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3279,
															"src": "17351:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3293,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 3296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3283,
												"id": 3297,
												"nodeType": "Return",
												"src": "17336:21:9"
											}
										]
									},
									"documentation": {
										"id": 3277,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:9",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "17190:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3278,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:9"
									},
									"returnParameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3299,
												"src": "17227:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:9"
									},
									"scope": 4146,
									"src": "17171:193:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3324,
										"nodeType": "Block",
										"src": "17761:150:9",
										"statements": [
											{
												"expression": {
													"id": 3312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3307,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3305,
														"src": "17771:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3302,
																"src": "17791:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3308,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3313,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3314,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3305,
														"src": "17811:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3315,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3302,
														"src": "17825:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3323,
												"nodeType": "IfStatement",
												"src": "17807:98:9",
												"trueBody": {
													"id": 3322,
													"nodeType": "Block",
													"src": "17832:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3319,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3302,
																		"src": "17888:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3317,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "17853:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3321,
															"nodeType": "RevertStatement",
															"src": "17846:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3300,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:9",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3325,
												"src": "17705:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3301,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:9"
									},
									"returnParameters": {
										"id": 3306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3325,
												"src": "17742:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3304,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:9"
									},
									"scope": 4146,
									"src": "17687:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3350,
										"nodeType": "Block",
										"src": "18308:150:9",
										"statements": [
											{
												"expression": {
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3333,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "18318:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3336,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3328,
																"src": "18338:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3334,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3339,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3340,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3331,
														"src": "18358:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3341,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "18372:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3349,
												"nodeType": "IfStatement",
												"src": "18354:98:9",
												"trueBody": {
													"id": 3348,
													"nodeType": "Block",
													"src": "18379:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3345,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3328,
																		"src": "18435:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3343,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "18400:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3347,
															"nodeType": "RevertStatement",
															"src": "18393:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3326,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:9",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "18252:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:9"
									},
									"returnParameters": {
										"id": 3332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "18289:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3330,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:9"
									},
									"scope": 4146,
									"src": "18234:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3376,
										"nodeType": "Block",
										"src": "18855:150:9",
										"statements": [
											{
												"expression": {
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3359,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3357,
														"src": "18865:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3362,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3354,
																"src": "18885:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3360,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3365,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3366,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3357,
														"src": "18905:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3367,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3354,
														"src": "18919:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3375,
												"nodeType": "IfStatement",
												"src": "18901:98:9",
												"trueBody": {
													"id": 3374,
													"nodeType": "Block",
													"src": "18926:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3371,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3354,
																		"src": "18982:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3369,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "18947:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3373,
															"nodeType": "RevertStatement",
															"src": "18940:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3352,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:9",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "18799:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3353,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:9"
									},
									"returnParameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "18836:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3356,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:9"
									},
									"scope": 4146,
									"src": "18781:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3402,
										"nodeType": "Block",
										"src": "19402:150:9",
										"statements": [
											{
												"expression": {
													"id": 3390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3385,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3383,
														"src": "19412:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3388,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3380,
																"src": "19432:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3386,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3391,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3392,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3383,
														"src": "19452:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3393,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3380,
														"src": "19466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3401,
												"nodeType": "IfStatement",
												"src": "19448:98:9",
												"trueBody": {
													"id": 3400,
													"nodeType": "Block",
													"src": "19473:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3397,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3380,
																		"src": "19529:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3395,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "19494:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3399,
															"nodeType": "RevertStatement",
															"src": "19487:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3378,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:9",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "19346:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3379,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:9"
									},
									"returnParameters": {
										"id": 3384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3383,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "19383:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3382,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:9"
									},
									"scope": 4146,
									"src": "19328:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3428,
										"nodeType": "Block",
										"src": "19949:150:9",
										"statements": [
											{
												"expression": {
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3411,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3409,
														"src": "19959:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3414,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3406,
																"src": "19979:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3412,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3417,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3418,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3409,
														"src": "19999:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3419,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3406,
														"src": "20013:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3427,
												"nodeType": "IfStatement",
												"src": "19995:98:9",
												"trueBody": {
													"id": 3426,
													"nodeType": "Block",
													"src": "20020:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3423,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3406,
																		"src": "20076:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3421,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "20041:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3425,
															"nodeType": "RevertStatement",
															"src": "20034:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3404,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:9",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "19893:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3405,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:9"
									},
									"returnParameters": {
										"id": 3410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3409,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "19930:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3408,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:9"
									},
									"scope": 4146,
									"src": "19875:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3454,
										"nodeType": "Block",
										"src": "20496:150:9",
										"statements": [
											{
												"expression": {
													"id": 3442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3437,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "20506:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3440,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3432,
																"src": "20526:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3438,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3443,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3444,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3435,
														"src": "20546:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3445,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3432,
														"src": "20560:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3453,
												"nodeType": "IfStatement",
												"src": "20542:98:9",
												"trueBody": {
													"id": 3452,
													"nodeType": "Block",
													"src": "20567:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3449,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3432,
																		"src": "20623:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3447,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "20588:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3451,
															"nodeType": "RevertStatement",
															"src": "20581:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:9",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3455,
												"src": "20440:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3431,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:9"
									},
									"returnParameters": {
										"id": 3436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3435,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3455,
												"src": "20477:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3434,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:9"
									},
									"scope": 4146,
									"src": "20422:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "21043:150:9",
										"statements": [
											{
												"expression": {
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3463,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "21053:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3466,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3458,
																"src": "21073:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3464,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3469,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3470,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "21093:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3471,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3458,
														"src": "21107:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3479,
												"nodeType": "IfStatement",
												"src": "21089:98:9",
												"trueBody": {
													"id": 3478,
													"nodeType": "Block",
													"src": "21114:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3475,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3458,
																		"src": "21170:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3473,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "21135:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3477,
															"nodeType": "RevertStatement",
															"src": "21128:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3456,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:9",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "20987:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3457,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:9"
									},
									"returnParameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "21024:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3460,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:9"
									},
									"scope": 4146,
									"src": "20969:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3506,
										"nodeType": "Block",
										"src": "21590:150:9",
										"statements": [
											{
												"expression": {
													"id": 3494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3489,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "21600:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3492,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3484,
																"src": "21620:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3490,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3495,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3496,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3487,
														"src": "21640:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3497,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "21654:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3505,
												"nodeType": "IfStatement",
												"src": "21636:98:9",
												"trueBody": {
													"id": 3504,
													"nodeType": "Block",
													"src": "21661:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3484,
																		"src": "21717:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3499,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "21682:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3503,
															"nodeType": "RevertStatement",
															"src": "21675:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3482,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:9",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "21534:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3483,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:9"
									},
									"returnParameters": {
										"id": 3488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3487,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "21571:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3486,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:9"
									},
									"scope": 4146,
									"src": "21516:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3532,
										"nodeType": "Block",
										"src": "22137:150:9",
										"statements": [
											{
												"expression": {
													"id": 3520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3515,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "22147:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3518,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3510,
																"src": "22167:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3516,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3521,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3522,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3513,
														"src": "22187:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3523,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3510,
														"src": "22201:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3531,
												"nodeType": "IfStatement",
												"src": "22183:98:9",
												"trueBody": {
													"id": 3530,
													"nodeType": "Block",
													"src": "22208:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3527,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3510,
																		"src": "22264:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3525,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "22229:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3529,
															"nodeType": "RevertStatement",
															"src": "22222:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3508,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:9",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "22081:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3509,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:9"
									},
									"returnParameters": {
										"id": 3514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3513,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3533,
												"src": "22118:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3512,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:9"
									},
									"scope": 4146,
									"src": "22063:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3558,
										"nodeType": "Block",
										"src": "22684:150:9",
										"statements": [
											{
												"expression": {
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3541,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "22694:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3536,
																"src": "22714:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3542,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3548,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3539,
														"src": "22734:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3549,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3536,
														"src": "22748:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3557,
												"nodeType": "IfStatement",
												"src": "22730:98:9",
												"trueBody": {
													"id": 3556,
													"nodeType": "Block",
													"src": "22755:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3553,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3536,
																		"src": "22811:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3551,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "22776:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3555,
															"nodeType": "RevertStatement",
															"src": "22769:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3534,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:9",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "22628:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3535,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:9"
									},
									"returnParameters": {
										"id": 3540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3539,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "22665:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3538,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:9"
									},
									"scope": 4146,
									"src": "22610:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3584,
										"nodeType": "Block",
										"src": "23231:150:9",
										"statements": [
											{
												"expression": {
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3567,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "23241:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3570,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3562,
																"src": "23261:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3568,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3573,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3574,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3565,
														"src": "23281:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3575,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3562,
														"src": "23295:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3583,
												"nodeType": "IfStatement",
												"src": "23277:98:9",
												"trueBody": {
													"id": 3582,
													"nodeType": "Block",
													"src": "23302:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3579,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3562,
																		"src": "23358:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3577,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "23323:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3581,
															"nodeType": "RevertStatement",
															"src": "23316:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3560,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:9",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "23175:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3561,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:9"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3585,
												"src": "23212:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3564,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:9"
									},
									"scope": 4146,
									"src": "23157:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "23778:150:9",
										"statements": [
											{
												"expression": {
													"id": 3598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3593,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "23788:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3596,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3588,
																"src": "23808:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3594,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3599,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3600,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3591,
														"src": "23828:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3601,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3588,
														"src": "23842:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3609,
												"nodeType": "IfStatement",
												"src": "23824:98:9",
												"trueBody": {
													"id": 3608,
													"nodeType": "Block",
													"src": "23849:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3605,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3588,
																		"src": "23905:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3603,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "23870:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3607,
															"nodeType": "RevertStatement",
															"src": "23863:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3586,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:9",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "23722:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3587,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:9"
									},
									"returnParameters": {
										"id": 3592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3591,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "23759:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3590,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:9"
									},
									"scope": 4146,
									"src": "23704:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3636,
										"nodeType": "Block",
										"src": "24325:150:9",
										"statements": [
											{
												"expression": {
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3619,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "24335:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3622,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3614,
																"src": "24355:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3620,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3625,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3626,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3617,
														"src": "24375:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3627,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3614,
														"src": "24389:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3635,
												"nodeType": "IfStatement",
												"src": "24371:98:9",
												"trueBody": {
													"id": 3634,
													"nodeType": "Block",
													"src": "24396:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3631,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3614,
																		"src": "24452:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3629,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "24417:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3633,
															"nodeType": "RevertStatement",
															"src": "24410:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3612,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:9",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "24269:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:9"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3617,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3637,
												"src": "24306:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3616,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:9"
									},
									"scope": 4146,
									"src": "24251:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3662,
										"nodeType": "Block",
										"src": "24872:150:9",
										"statements": [
											{
												"expression": {
													"id": 3650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3645,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "24882:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3648,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3640,
																"src": "24902:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3646,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3651,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3652,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "24922:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3653,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3640,
														"src": "24936:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3661,
												"nodeType": "IfStatement",
												"src": "24918:98:9",
												"trueBody": {
													"id": 3660,
													"nodeType": "Block",
													"src": "24943:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3657,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3640,
																		"src": "24999:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3655,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "24964:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3659,
															"nodeType": "RevertStatement",
															"src": "24957:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3638,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:9",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "24816:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3639,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:9"
									},
									"returnParameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3663,
												"src": "24853:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3642,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:9"
									},
									"scope": 4146,
									"src": "24798:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3688,
										"nodeType": "Block",
										"src": "25419:150:9",
										"statements": [
											{
												"expression": {
													"id": 3676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3671,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "25429:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3666,
																"src": "25449:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3672,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3677,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3678,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "25469:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3666,
														"src": "25483:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3687,
												"nodeType": "IfStatement",
												"src": "25465:98:9",
												"trueBody": {
													"id": 3686,
													"nodeType": "Block",
													"src": "25490:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3683,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3666,
																		"src": "25546:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3681,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "25511:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3685,
															"nodeType": "RevertStatement",
															"src": "25504:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3664,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:9",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "25363:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:9"
									},
									"returnParameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3689,
												"src": "25400:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3668,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:9"
									},
									"scope": 4146,
									"src": "25345:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3714,
										"nodeType": "Block",
										"src": "25966:150:9",
										"statements": [
											{
												"expression": {
													"id": 3702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3697,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "25976:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "25996:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3698,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3703,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3704,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "26016:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3705,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3692,
														"src": "26030:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3713,
												"nodeType": "IfStatement",
												"src": "26012:98:9",
												"trueBody": {
													"id": 3712,
													"nodeType": "Block",
													"src": "26037:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3709,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3692,
																		"src": "26093:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3707,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "26058:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3711,
															"nodeType": "RevertStatement",
															"src": "26051:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3690,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:9",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "25910:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3691,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:9"
									},
									"returnParameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "25947:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3694,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:9"
									},
									"scope": 4146,
									"src": "25892:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "26513:150:9",
										"statements": [
											{
												"expression": {
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3723,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "26523:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3726,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3718,
																"src": "26543:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3724,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3729,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3730,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "26563:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3731,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3718,
														"src": "26577:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3739,
												"nodeType": "IfStatement",
												"src": "26559:98:9",
												"trueBody": {
													"id": 3738,
													"nodeType": "Block",
													"src": "26584:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3718,
																		"src": "26640:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3733,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "26605:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3737,
															"nodeType": "RevertStatement",
															"src": "26598:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3716,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:9",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "26457:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3717,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:9"
									},
									"returnParameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3721,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "26494:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3720,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:9"
									},
									"scope": 4146,
									"src": "26439:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3766,
										"nodeType": "Block",
										"src": "27060:150:9",
										"statements": [
											{
												"expression": {
													"id": 3754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3749,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "27070:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3752,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3744,
																"src": "27090:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3750,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3755,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3756,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "27110:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3757,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3744,
														"src": "27124:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3765,
												"nodeType": "IfStatement",
												"src": "27106:98:9",
												"trueBody": {
													"id": 3764,
													"nodeType": "Block",
													"src": "27131:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3761,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3744,
																		"src": "27187:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3759,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "27152:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3763,
															"nodeType": "RevertStatement",
															"src": "27145:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3742,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:9",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "27004:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3743,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:9"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3767,
												"src": "27041:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3746,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:9"
									},
									"scope": 4146,
									"src": "26986:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3792,
										"nodeType": "Block",
										"src": "27607:150:9",
										"statements": [
											{
												"expression": {
													"id": 3780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3775,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "27617:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3778,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3770,
																"src": "27637:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3776,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 3779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3781,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3782,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "27657:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3770,
														"src": "27671:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3791,
												"nodeType": "IfStatement",
												"src": "27653:98:9",
												"trueBody": {
													"id": 3790,
													"nodeType": "Block",
													"src": "27678:73:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3787,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3770,
																		"src": "27734:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3785,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "27699:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3789,
															"nodeType": "RevertStatement",
															"src": "27692:48:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3768,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:9",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3770,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "27551:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3769,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:9"
									},
									"returnParameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3793,
												"src": "27588:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3772,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:9"
									},
									"scope": 4146,
									"src": "27533:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3818,
										"nodeType": "Block",
										"src": "28147:148:9",
										"statements": [
											{
												"expression": {
													"id": 3806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3801,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "28157:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3796,
																"src": "28176:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3802,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3807,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3808,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "28196:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3809,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3796,
														"src": "28210:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3817,
												"nodeType": "IfStatement",
												"src": "28192:97:9",
												"trueBody": {
													"id": 3816,
													"nodeType": "Block",
													"src": "28217:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3813,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3796,
																		"src": "28272:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3811,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "28238:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3815,
															"nodeType": "RevertStatement",
															"src": "28231:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3794,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:9",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3796,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "28092:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3795,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:9"
									},
									"returnParameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3819,
												"src": "28129:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3798,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:9"
									},
									"scope": 4146,
									"src": "28075:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3844,
										"nodeType": "Block",
										"src": "28685:148:9",
										"statements": [
											{
												"expression": {
													"id": 3832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3827,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "28695:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3830,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3822,
																"src": "28714:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3828,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3833,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3834,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "28734:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3835,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3822,
														"src": "28748:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3843,
												"nodeType": "IfStatement",
												"src": "28730:97:9",
												"trueBody": {
													"id": 3842,
													"nodeType": "Block",
													"src": "28755:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3839,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3822,
																		"src": "28810:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3837,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "28776:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3841,
															"nodeType": "RevertStatement",
															"src": "28769:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3820,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:9",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28630:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3821,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:9"
									},
									"returnParameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28667:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3824,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:9"
									},
									"scope": 4146,
									"src": "28613:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3870,
										"nodeType": "Block",
										"src": "29223:148:9",
										"statements": [
											{
												"expression": {
													"id": 3858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3853,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "29233:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3856,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3848,
																"src": "29252:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3854,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3859,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3860,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "29272:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3861,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3848,
														"src": "29286:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3869,
												"nodeType": "IfStatement",
												"src": "29268:97:9",
												"trueBody": {
													"id": 3868,
													"nodeType": "Block",
													"src": "29293:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3865,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3848,
																		"src": "29348:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3863,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "29314:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3867,
															"nodeType": "RevertStatement",
															"src": "29307:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3846,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:9",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "29168:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3847,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:9"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3871,
												"src": "29205:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3850,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:9"
									},
									"scope": 4146,
									"src": "29151:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3896,
										"nodeType": "Block",
										"src": "29761:148:9",
										"statements": [
											{
												"expression": {
													"id": 3884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3879,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "29771:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3874,
																"src": "29790:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3880,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3885,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3886,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "29810:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3887,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3874,
														"src": "29824:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3895,
												"nodeType": "IfStatement",
												"src": "29806:97:9",
												"trueBody": {
													"id": 3894,
													"nodeType": "Block",
													"src": "29831:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3891,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3874,
																		"src": "29886:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3889,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "29852:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3893,
															"nodeType": "RevertStatement",
															"src": "29845:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3872,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:9",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "29706:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3873,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:9"
									},
									"returnParameters": {
										"id": 3878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3877,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3897,
												"src": "29743:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3876,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:9"
									},
									"scope": 4146,
									"src": "29689:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3922,
										"nodeType": "Block",
										"src": "30299:148:9",
										"statements": [
											{
												"expression": {
													"id": 3910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3905,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "30309:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3908,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3900,
																"src": "30328:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3906,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3911,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3912,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "30348:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3913,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3900,
														"src": "30362:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3921,
												"nodeType": "IfStatement",
												"src": "30344:97:9",
												"trueBody": {
													"id": 3920,
													"nodeType": "Block",
													"src": "30369:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3900,
																		"src": "30424:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3915,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "30390:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3919,
															"nodeType": "RevertStatement",
															"src": "30383:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3898,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:9",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "30244:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3899,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:9"
									},
									"returnParameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3903,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3923,
												"src": "30281:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3902,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:9"
									},
									"scope": 4146,
									"src": "30227:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3948,
										"nodeType": "Block",
										"src": "30837:148:9",
										"statements": [
											{
												"expression": {
													"id": 3936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3931,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "30847:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3926,
																"src": "30866:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3932,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3937,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3938,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "30886:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3939,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3926,
														"src": "30900:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3947,
												"nodeType": "IfStatement",
												"src": "30882:97:9",
												"trueBody": {
													"id": 3946,
													"nodeType": "Block",
													"src": "30907:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3943,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3926,
																		"src": "30962:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3941,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "30928:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3945,
															"nodeType": "RevertStatement",
															"src": "30921:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3924,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:9",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3926,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "30782:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:9"
									},
									"returnParameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3949,
												"src": "30819:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3928,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:9"
									},
									"scope": 4146,
									"src": "30765:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3974,
										"nodeType": "Block",
										"src": "31375:148:9",
										"statements": [
											{
												"expression": {
													"id": 3962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3957,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "31385:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3952,
																"src": "31404:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3958,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3963,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3964,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "31424:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3965,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3952,
														"src": "31438:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3973,
												"nodeType": "IfStatement",
												"src": "31420:97:9",
												"trueBody": {
													"id": 3972,
													"nodeType": "Block",
													"src": "31445:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3969,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3952,
																		"src": "31500:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3967,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "31466:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3971,
															"nodeType": "RevertStatement",
															"src": "31459:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3950,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:9",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "31320:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3951,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:9"
									},
									"returnParameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 3975,
												"src": "31357:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3954,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:9"
									},
									"scope": 4146,
									"src": "31303:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4000,
										"nodeType": "Block",
										"src": "31913:148:9",
										"statements": [
											{
												"expression": {
													"id": 3988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3983,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "31923:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3986,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3978,
																"src": "31942:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3984,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 3987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3989,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3990,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "31962:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3991,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3978,
														"src": "31976:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3999,
												"nodeType": "IfStatement",
												"src": "31958:97:9",
												"trueBody": {
													"id": 3998,
													"nodeType": "Block",
													"src": "31983:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3995,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3978,
																		"src": "32038:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3993,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "32004:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3997,
															"nodeType": "RevertStatement",
															"src": "31997:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3976,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:9",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "31858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3977,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:9"
									},
									"returnParameters": {
										"id": 3982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3981,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4001,
												"src": "31895:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3980,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:9"
									},
									"scope": 4146,
									"src": "31841:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4026,
										"nodeType": "Block",
										"src": "32451:148:9",
										"statements": [
											{
												"expression": {
													"id": 4014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4009,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "32461:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4012,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4004,
																"src": "32480:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4010,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4015,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4016,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "32500:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4004,
														"src": "32514:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4025,
												"nodeType": "IfStatement",
												"src": "32496:97:9",
												"trueBody": {
													"id": 4024,
													"nodeType": "Block",
													"src": "32521:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4021,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4004,
																		"src": "32576:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4019,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "32542:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4023,
															"nodeType": "RevertStatement",
															"src": "32535:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4002,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:9",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "32396:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4003,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:9"
									},
									"returnParameters": {
										"id": 4008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4027,
												"src": "32433:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4006,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:9"
									},
									"scope": 4146,
									"src": "32379:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4052,
										"nodeType": "Block",
										"src": "32989:148:9",
										"statements": [
											{
												"expression": {
													"id": 4040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4035,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "32999:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4038,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4030,
																"src": "33018:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4036,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4041,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4042,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "33038:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4043,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4030,
														"src": "33052:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4051,
												"nodeType": "IfStatement",
												"src": "33034:97:9",
												"trueBody": {
													"id": 4050,
													"nodeType": "Block",
													"src": "33059:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4047,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4030,
																		"src": "33114:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4045,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "33080:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4049,
															"nodeType": "RevertStatement",
															"src": "33073:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4028,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:9",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "32934:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4029,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:9"
									},
									"returnParameters": {
										"id": 4034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4033,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4053,
												"src": "32971:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4032,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:9"
									},
									"scope": 4146,
									"src": "32917:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4078,
										"nodeType": "Block",
										"src": "33527:148:9",
										"statements": [
											{
												"expression": {
													"id": 4066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4061,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "33537:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4056,
																"src": "33556:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4062,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:9",
																"typeDescriptions": {}
															}
														},
														"id": 4065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4067,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4068,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "33576:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4069,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4056,
														"src": "33590:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4077,
												"nodeType": "IfStatement",
												"src": "33572:97:9",
												"trueBody": {
													"id": 4076,
													"nodeType": "Block",
													"src": "33597:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4073,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4056,
																		"src": "33652:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4071,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "33618:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4075,
															"nodeType": "RevertStatement",
															"src": "33611:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4054,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:9",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "33472:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4055,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:9"
									},
									"returnParameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4079,
												"src": "33509:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4058,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:9"
									},
									"scope": 4146,
									"src": "33455:220:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4104,
										"nodeType": "Block",
										"src": "34058:146:9",
										"statements": [
											{
												"expression": {
													"id": 4092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4087,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "34068:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4090,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4082,
																"src": "34086:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4088,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:9",
																"typeDescriptions": {}
															}
														},
														"id": 4091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4093,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4094,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "34106:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4082,
														"src": "34120:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4103,
												"nodeType": "IfStatement",
												"src": "34102:96:9",
												"trueBody": {
													"id": 4102,
													"nodeType": "Block",
													"src": "34127:71:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4099,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4082,
																		"src": "34181:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4097,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "34148:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4101,
															"nodeType": "RevertStatement",
															"src": "34141:46:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4080,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:9",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "34004:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4081,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:9"
									},
									"returnParameters": {
										"id": 4086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 4105,
												"src": "34041:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4084,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:9"
									},
									"scope": 4146,
									"src": "33988:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4134,
										"nodeType": "Block",
										"src": "34444:250:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4113,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4108,
														"src": "34557:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4117,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4116,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:9",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4114,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 4121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4128,
												"nodeType": "IfStatement",
												"src": "34553:105:9",
												"trueBody": {
													"id": 4127,
													"nodeType": "Block",
													"src": "34592:66:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4124,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4108,
																		"src": "34641:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4123,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2408,
																	"src": "34613:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4126,
															"nodeType": "RevertStatement",
															"src": "34606:41:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4131,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4108,
															"src": "34681:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4129,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 4132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4112,
												"id": 4133,
												"nodeType": "Return",
												"src": "34667:20:9"
											}
										]
									},
									"documentation": {
										"id": 4106,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:9",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "34398:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:9"
									},
									"returnParameters": {
										"id": 4112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4135,
												"src": "34436:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:9"
									},
									"scope": 4146,
									"src": "34380:314:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4144,
										"nodeType": "Block",
										"src": "34853:87:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:9",
													"nodeType": "YulBlock",
													"src": "34888:46:9",
													"statements": [
														{
															"nativeSrc": "34902:22:9",
															"nodeType": "YulAssignment",
															"src": "34902:22:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:9"
																		},
																		"nativeSrc": "34914:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:9"
																},
																"nativeSrc": "34907:17:9",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:9"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4138,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:9",
														"valueSize": 1
													},
													{
														"declaration": 4141,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4143,
												"nodeType": "InlineAssembly",
												"src": "34863:71:9"
											}
										]
									},
									"documentation": {
										"id": 4136,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:9",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4138,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 4145,
												"src": "34811:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:9"
									},
									"returnParameters": {
										"id": 4142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4141,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 4145,
												"src": "34842:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:9"
									},
									"scope": 4146,
									"src": "34795:145:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4147,
							"src": "769:34173:9",
							"usedErrors": [
								2391,
								2396,
								2403,
								2408
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							4458
						]
					},
					"id": 4459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4149,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 4458,
							"linearizedBaseContracts": [
								4458
							],
							"name": "SafeMath",
							"nameLocation": "490:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4180,
										"nodeType": "Block",
										"src": "717:140:10",
										"statements": [
											{
												"id": 4179,
												"nodeType": "UncheckedBlock",
												"src": "727:124:10",
												"statements": [
													{
														"assignments": [
															4162
														],
														"declarations": [
															{
																"constant": false,
																"id": 4162,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 4179,
																"src": "751:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 4161,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4166,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4163,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4152,
																"src": "763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 4164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4154,
																"src": "767:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4167,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4162,
																"src": "786:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4168,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4152,
																"src": "790:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4174,
														"nodeType": "IfStatement",
														"src": "782:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 4170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 4171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4172,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4160,
															"id": 4173,
															"nodeType": "Return",
															"src": "793:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 4175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 4176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4162,
																	"src": "838:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4177,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 4160,
														"id": 4178,
														"nodeType": "Return",
														"src": "824:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4150,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 4181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4152,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4181,
												"src": "657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4154,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4181,
												"src": "668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:10"
									},
									"returnParameters": {
										"id": 4160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4181,
												"src": "702:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4181,
												"src": "708:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:10"
									},
									"scope": 4458,
									"src": "641:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4208,
										"nodeType": "Block",
										"src": "1078:113:10",
										"statements": [
											{
												"id": 4207,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4186,
																"src": "1116:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 4194,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4184,
																"src": "1120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4200,
														"nodeType": "IfStatement",
														"src": "1112:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 4196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 4197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4198,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4192,
															"id": 4199,
															"nodeType": "Return",
															"src": "1123:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 4201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4202,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4184,
																		"src": "1168:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 4203,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4186,
																		"src": "1172:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4205,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 4192,
														"id": 4206,
														"nodeType": "Return",
														"src": "1154:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4182,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 4209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "1018:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "1029:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:10"
									},
									"returnParameters": {
										"id": 4192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "1063:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4209,
												"src": "1069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:10"
									},
									"scope": 4458,
									"src": "1002:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4250,
										"nodeType": "Block",
										"src": "1415:417:10",
										"statements": [
											{
												"id": 4249,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4212,
																"src": "1683:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 4222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4228,
														"nodeType": "IfStatement",
														"src": "1679:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 4224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 4225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4220,
															"id": 4227,
															"nodeType": "Return",
															"src": "1691:16:10"
														}
													},
													{
														"assignments": [
															4230
														],
														"declarations": [
															{
																"constant": false,
																"id": 4230,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 4249,
																"src": "1721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 4229,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 4234,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4231,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4212,
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 4232,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4214,
																"src": "1737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4235,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4230,
																	"src": "1756:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 4236,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4212,
																	"src": "1760:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 4238,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4214,
																"src": "1765:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4244,
														"nodeType": "IfStatement",
														"src": "1752:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 4240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 4241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4242,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4220,
															"id": 4243,
															"nodeType": "Return",
															"src": "1768:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 4245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 4246,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4230,
																	"src": "1813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4247,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 4220,
														"id": 4248,
														"nodeType": "Return",
														"src": "1799:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4210,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 4251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4212,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4251,
												"src": "1355:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4214,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4251,
												"src": "1366:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:10"
									},
									"returnParameters": {
										"id": 4220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4251,
												"src": "1400:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4251,
												"src": "1406:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:10"
									},
									"scope": 4458,
									"src": "1339:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4278,
										"nodeType": "Block",
										"src": "2057:114:10",
										"statements": [
											{
												"id": 4277,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4263,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4256,
																"src": "2095:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 4264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4270,
														"nodeType": "IfStatement",
														"src": "2091:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 4266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 4267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4262,
															"id": 4269,
															"nodeType": "Return",
															"src": "2103:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 4271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4272,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4254,
																		"src": "2148:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 4273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4256,
																		"src": "2152:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4275,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 4262,
														"id": 4276,
														"nodeType": "Return",
														"src": "2134:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4252,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 4279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4254,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "1997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4256,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "2008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:10"
									},
									"returnParameters": {
										"id": 4262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "2042:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4279,
												"src": "2048:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:10"
									},
									"scope": 4458,
									"src": "1981:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4306,
										"nodeType": "Block",
										"src": "2406:114:10",
										"statements": [
											{
												"id": 4305,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4291,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4284,
																"src": "2444:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 4292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 4298,
														"nodeType": "IfStatement",
														"src": "2440:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 4294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 4295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 4296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 4290,
															"id": 4297,
															"nodeType": "Return",
															"src": "2452:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 4299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4300,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4282,
																		"src": "2497:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 4301,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4284,
																		"src": "2501:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 4303,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 4290,
														"id": 4304,
														"nodeType": "Return",
														"src": "2483:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4280,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 4307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4282,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4307,
												"src": "2346:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4284,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4307,
												"src": "2357:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:10"
									},
									"returnParameters": {
										"id": 4290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4307,
												"src": "2391:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4307,
												"src": "2397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:10"
									},
									"scope": 4458,
									"src": "2330:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4321,
										"nodeType": "Block",
										"src": "2822:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4317,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4310,
														"src": "2839:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 4318,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4312,
														"src": "2843:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4316,
												"id": 4320,
												"nodeType": "Return",
												"src": "2832:12:10"
											}
										]
									},
									"documentation": {
										"id": 4308,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 4322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4310,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4322,
												"src": "2768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4312,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4322,
												"src": "2779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:10"
									},
									"returnParameters": {
										"id": 4316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4322,
												"src": "2813:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:10"
									},
									"scope": 4458,
									"src": "2755:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4336,
										"nodeType": "Block",
										"src": "3189:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4332,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4325,
														"src": "3206:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 4333,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4327,
														"src": "3210:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4331,
												"id": 4335,
												"nodeType": "Return",
												"src": "3199:12:10"
											}
										]
									},
									"documentation": {
										"id": 4323,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 4337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4325,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4337,
												"src": "3135:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4327,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4337,
												"src": "3146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:10"
									},
									"returnParameters": {
										"id": 4331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4337,
												"src": "3180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:10"
									},
									"scope": 4458,
									"src": "3122:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4351,
										"nodeType": "Block",
										"src": "3532:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4347,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4340,
														"src": "3549:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 4348,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4342,
														"src": "3553:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4346,
												"id": 4350,
												"nodeType": "Return",
												"src": "3542:12:10"
											}
										]
									},
									"documentation": {
										"id": 4338,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 4352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4340,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "3478:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4342,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "3489:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:10"
									},
									"returnParameters": {
										"id": 4346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "3523:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:10"
									},
									"scope": 4458,
									"src": "3465:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4366,
										"nodeType": "Block",
										"src": "3917:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4362,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4355,
														"src": "3934:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4363,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4357,
														"src": "3938:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4361,
												"id": 4365,
												"nodeType": "Return",
												"src": "3927:12:10"
											}
										]
									},
									"documentation": {
										"id": 4353,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4367,
												"src": "3863:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4367,
												"src": "3874:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:10"
									},
									"returnParameters": {
										"id": 4361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4367,
												"src": "3908:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:10"
									},
									"scope": 4458,
									"src": "3850:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4381,
										"nodeType": "Block",
										"src": "4466:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4377,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4370,
														"src": "4483:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 4378,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4372,
														"src": "4487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4376,
												"id": 4380,
												"nodeType": "Return",
												"src": "4476:12:10"
											}
										]
									},
									"documentation": {
										"id": 4368,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4382,
												"src": "4412:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4382,
												"src": "4423:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:10"
									},
									"returnParameters": {
										"id": 4376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4382,
												"src": "4457:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:10"
									},
									"scope": 4458,
									"src": "4399:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4406,
										"nodeType": "Block",
										"src": "5054:106:10",
										"statements": [
											{
												"id": 4405,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4395,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4387,
																		"src": "5096:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 4396,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4385,
																		"src": "5101:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 4398,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4389,
																	"src": "5104:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 4394,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 4399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 4400,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4401,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4385,
																"src": "5138:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 4402,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4387,
																"src": "5142:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4393,
														"id": 4404,
														"nodeType": "Return",
														"src": "5131:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4383,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 4407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4385,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "4972:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4387,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "4983:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "4994:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:10"
									},
									"returnParameters": {
										"id": 4393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "5045:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:10"
									},
									"scope": 4458,
									"src": "4959:201:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4431,
										"nodeType": "Block",
										"src": "5739:105:10",
										"statements": [
											{
												"id": 4430,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4420,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4412,
																		"src": "5781:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 4423,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4414,
																	"src": "5788:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 4419,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 4424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 4425,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4426,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4410,
																"src": "5822:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 4427,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4412,
																"src": "5826:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4418,
														"id": 4429,
														"nodeType": "Return",
														"src": "5815:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4408,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4410,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "5657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4412,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "5668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4414,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "5679:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:10"
									},
									"returnParameters": {
										"id": 4418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4432,
												"src": "5730:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:10"
									},
									"scope": 4458,
									"src": "5644:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4456,
										"nodeType": "Block",
										"src": "6585:105:10",
										"statements": [
											{
												"id": 4455,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4445,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4437,
																		"src": "6627:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 4448,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4439,
																	"src": "6634:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 4444,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 4449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 4450,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4451,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4435,
																"src": "6668:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 4452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4437,
																"src": "6672:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 4443,
														"id": 4454,
														"nodeType": "Return",
														"src": "6661:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 4433,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 4457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4435,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4457,
												"src": "6503:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4437,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4457,
												"src": "6514:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4439,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 4457,
												"src": "6525:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:10"
									},
									"returnParameters": {
										"id": 4443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4457,
												"src": "6576:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:10"
									},
									"scope": 4458,
									"src": "6490:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4459,
							"src": "482:6210:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:10"
				},
				"id": 10
			},
			"Vault_forge/src/Diamond/DepositFacet.sol": {
				"ast": {
					"absolutePath": "Vault_forge/src/Diamond/DepositFacet.sol",
					"exportedSymbols": {
						"AmountTooSmall": [
							4531
						],
						"BatchAlreadyProcessed": [
							4533
						],
						"DepositAlreadyQueued": [
							4535
						],
						"DepositFacet": [
							5189
						],
						"DepositsPaused": [
							4513
						],
						"DiamondStorage": [
							5317
						],
						"EmergencyShutdown": [
							4515
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"IReceiver": [
							4511
						],
						"ISwapContract": [
							4503
						],
						"IUSDC": [
							4482
						],
						"LargeDepositNotTimelocked": [
							4521
						],
						"Math": [
							2381
						],
						"MinimumDepositNotMet": [
							4519
						],
						"NoETHReceived": [
							4527
						],
						"NoSharesMinted": [
							4523
						],
						"Panic": [
							748
						],
						"ReentrancyGuard": [
							154
						],
						"SafeCast": [
							4146
						],
						"SafeERC20": [
							696
						],
						"SafeMath": [
							4458
						],
						"SwapContractNotSet": [
							4529
						],
						"USDCApprovalFailed": [
							4525
						],
						"ZeroAmount": [
							4517
						]
					},
					"id": 5190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "Vault_forge/src/Diamond/DiamondStorage.sol",
							"file": "./DiamondStorage.sol",
							"id": 4461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5190,
							"sourceUnit": 5318,
							"src": "61:30:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 4462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5190,
							"sourceUnit": 697,
							"src": "93:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 4463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5190,
							"sourceUnit": 155,
							"src": "160:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5190,
							"sourceUnit": 2382,
							"src": "224:53:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 4465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 5190,
							"sourceUnit": 4459,
							"src": "279:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4466,
										"name": "IERC20",
										"nameLocations": [
											"363:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "363:6:11"
									},
									"id": 4467,
									"nodeType": "InheritanceSpecifier",
									"src": "363:6:11"
								}
							],
							"canonicalName": "IUSDC",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 4482,
							"linearizedBaseContracts": [
								4482,
								232
							],
							"name": "IUSDC",
							"nameLocation": "354:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										219
									],
									"functionSelector": "095ea7b3",
									"id": 4476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "386:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "402:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "394:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4471,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "419:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "411:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "393:33:11"
									},
									"returnParameters": {
										"id": 4475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4476,
												"src": "445:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:6:11"
									},
									"scope": 4482,
									"src": "377:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 4481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "466:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:2:11"
									},
									"returnParameters": {
										"id": 4480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4481,
												"src": "500:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "500:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:7:11"
									},
									"scope": 4482,
									"src": "457:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5190,
							"src": "344:166:11",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISwapContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 4503,
							"linearizedBaseContracts": [
								4503
							],
							"name": "ISwapContract",
							"nameLocation": "524:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "64898d23",
									"id": 4495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactUSDCForETH",
									"nameLocation": "554:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4484,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "589:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4495,
												"src": "584:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4486,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "613:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4495,
												"src": "608:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "608:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "644:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 4495,
												"src": "636:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4490,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "662:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4495,
												"src": "657:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4489,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "657:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:104:11"
									},
									"returnParameters": {
										"id": 4494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4493,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "701:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 4495,
												"src": "696:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "696:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "695:16:11"
									},
									"scope": 4503,
									"src": "545:167:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd192db5",
									"id": 4502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getETHAmountOut",
									"nameLocation": "733:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4497,
												"mutability": "mutable",
												"name": "usdcAmountIn",
												"nameLocation": "764:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "759:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "759:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:35:11"
									},
									"returnParameters": {
										"id": 4501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4500,
												"mutability": "mutable",
												"name": "ethAmountOut",
												"nameLocation": "812:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "807:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "807:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:19:11"
									},
									"scope": 4503,
									"src": "724:102:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5190,
							"src": "514:315:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 4511,
							"linearizedBaseContracts": [
								4511
							],
							"name": "IReceiver",
							"nameLocation": "843:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3641bd02",
									"id": 4510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchStakeWithLido",
									"nameLocation": "869:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "batchId",
												"nameLocation": "906:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4510,
												"src": "898:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:33:11"
									},
									"returnParameters": {
										"id": 4509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4510,
												"src": "947:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "946:9:11"
									},
									"scope": 4511,
									"src": "860:96:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5190,
							"src": "833:126:11",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"errorSelector": "deeb6943",
							"id": 4513,
							"name": "DepositsPaused",
							"nameLocation": "987:14:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4512,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1001:2:11"
							},
							"src": "981:23:11"
						},
						{
							"errorSelector": "f443ecad",
							"id": 4515,
							"name": "EmergencyShutdown",
							"nameLocation": "1012:17:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4514,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1029:2:11"
							},
							"src": "1006:26:11"
						},
						{
							"errorSelector": "1f2a2005",
							"id": 4517,
							"name": "ZeroAmount",
							"nameLocation": "1040:10:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4516,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1050:2:11"
							},
							"src": "1034:19:11"
						},
						{
							"errorSelector": "20d01f06",
							"id": 4519,
							"name": "MinimumDepositNotMet",
							"nameLocation": "1061:20:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4518,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1081:2:11"
							},
							"src": "1055:29:11"
						},
						{
							"errorSelector": "23e4dc43",
							"id": 4521,
							"name": "LargeDepositNotTimelocked",
							"nameLocation": "1092:25:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4520,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1117:2:11"
							},
							"src": "1086:34:11"
						},
						{
							"errorSelector": "77f43aca",
							"id": 4523,
							"name": "NoSharesMinted",
							"nameLocation": "1128:14:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4522,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1142:2:11"
							},
							"src": "1122:23:11"
						},
						{
							"errorSelector": "8a2133b5",
							"id": 4525,
							"name": "USDCApprovalFailed",
							"nameLocation": "1153:18:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4524,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1171:2:11"
							},
							"src": "1147:27:11"
						},
						{
							"errorSelector": "a9ffdc96",
							"id": 4527,
							"name": "NoETHReceived",
							"nameLocation": "1182:13:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4526,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1195:2:11"
							},
							"src": "1176:22:11"
						},
						{
							"errorSelector": "567e930e",
							"id": 4529,
							"name": "SwapContractNotSet",
							"nameLocation": "1206:18:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4528,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1224:2:11"
							},
							"src": "1200:27:11"
						},
						{
							"errorSelector": "c2f5625a",
							"id": 4531,
							"name": "AmountTooSmall",
							"nameLocation": "1235:14:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4530,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1249:2:11"
							},
							"src": "1229:23:11"
						},
						{
							"errorSelector": "e2b1f194",
							"id": 4533,
							"name": "BatchAlreadyProcessed",
							"nameLocation": "1260:21:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4532,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1281:2:11"
							},
							"src": "1254:30:11"
						},
						{
							"errorSelector": "1297a3a7",
							"id": 4535,
							"name": "DepositAlreadyQueued",
							"nameLocation": "1292:20:11",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4534,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "1312:2:11"
							},
							"src": "1286:29:11"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4536,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1344:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "1344:15:11"
									},
									"id": 4537,
									"nodeType": "InheritanceSpecifier",
									"src": "1344:15:11"
								}
							],
							"canonicalName": "DepositFacet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5189,
							"linearizedBaseContracts": [
								5189,
								154
							],
							"name": "DepositFacet",
							"nameLocation": "1328:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4541,
									"libraryName": {
										"id": 4538,
										"name": "SafeERC20",
										"nameLocations": [
											"1373:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "1373:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1367:27:11",
									"typeName": {
										"id": 4540,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4539,
											"name": "IERC20",
											"nameLocations": [
												"1387:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "1387:6:11"
										},
										"referencedDeclaration": 232,
										"src": "1387:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 4544,
									"libraryName": {
										"id": 4542,
										"name": "SafeMath",
										"nameLocations": [
											"1406:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4458,
										"src": "1406:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1400:27:11",
									"typeName": {
										"id": 4543,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1419:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 4547,
									"libraryName": {
										"id": 4545,
										"name": "Math",
										"nameLocations": [
											"1439:4:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2381,
										"src": "1439:4:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1433:23:11",
									"typeName": {
										"id": 4546,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1448:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 4552,
									"mutability": "constant",
									"name": "MAX_DEPOSIT_PER_USER",
									"nameLocation": "1515:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 5189,
									"src": "1490:58:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4548,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1490:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_4999000000_by_1",
											"typeString": "int_const 4999000000"
										},
										"id": 4551,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "34393939",
											"id": 4549,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1538:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4999_by_1",
												"typeString": "int_const 4999"
											},
											"value": "4999"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "316536",
											"id": 4550,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1545:3:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1e6"
										},
										"src": "1538:10:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4999000000_by_1",
											"typeString": "int_const 4999000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 4557,
									"mutability": "constant",
									"name": "MIN_DEPOSIT_AMOUNT",
									"nameLocation": "1580:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 5189,
									"src": "1555:55:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"id": 4556,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 4554,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1601:3:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "316536",
											"id": 4555,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1607:3:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1e6"
										},
										"src": "1601:9:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 4560,
									"mutability": "constant",
									"name": "STAKED_PORTION",
									"nameLocation": "1643:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 5189,
									"src": "1618:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4558,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1618:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3430",
										"id": 4559,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_40_by_1",
											"typeString": "int_const 40"
										},
										"value": "40"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 4563,
									"mutability": "constant",
									"name": "LOCK_PERIOD",
									"nameLocation": "1695:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 5189,
									"src": "1670:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4561,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1670:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 4562,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1709:7:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 4566,
									"mutability": "constant",
									"name": "DEPOSIT_TIMELOCK",
									"nameLocation": "1748:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 5189,
									"src": "1723:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4564,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4565,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1767:7:11",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7",
									"id": 4576,
									"name": "Deposit",
									"nameLocation": "1804:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4568,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1838:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4576,
												"src": "1822:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4570,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1871:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4576,
												"src": "1855:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4572,
												"indexed": false,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "1895:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4576,
												"src": "1887:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4574,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1920:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4576,
												"src": "1912:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:122:11"
									},
									"src": "1798:136:11"
								},
								{
									"anonymous": false,
									"eventSelector": "ca8f7b7916f133917db8d4b2e3566194ad8a65ad8eda78f72f5b9872c059227b",
									"id": 4584,
									"name": "StakeInitiated",
									"nameLocation": "1952:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4578,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1993:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "1977:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4580,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2016:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "2008:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4582,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "2041:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "2033:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1966:92:11"
									},
									"src": "1946:113:11"
								},
								{
									"anonymous": false,
									"eventSelector": "447dbdbfde1cf015fc6f055a0c7a32d270f68eaf5f9ae394c3d3963a1bbc0a75",
									"id": 4592,
									"name": "SwapInitiated",
									"nameLocation": "2077:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4586,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2117:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 4592,
												"src": "2101:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4588,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedAmount",
												"nameLocation": "2140:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4592,
												"src": "2132:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4590,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "2171:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4592,
												"src": "2163:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2163:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:98:11"
									},
									"src": "2071:118:11"
								},
								{
									"anonymous": false,
									"eventSelector": "923a5113d2791c84f9eeefac7ed7e03aaf0525bcc930d31be60bd241a5133dcc",
									"id": 4600,
									"name": "WstETHBalanceUpdated",
									"nameLocation": "2207:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4594,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2254:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 4600,
												"src": "2238:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4596,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakedUSDC",
												"nameLocation": "2277:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4600,
												"src": "2269:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4598,
												"indexed": false,
												"mutability": "mutable",
												"name": "wstETHReceived",
												"nameLocation": "2306:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 4600,
												"src": "2298:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:100:11"
									},
									"src": "2201:127:11"
								},
								{
									"body": {
										"id": 4826,
										"nodeType": "Block",
										"src": "2452:2264:11",
										"statements": [
											{
												"assignments": [
													4615
												],
												"declarations": [
													{
														"constant": false,
														"id": 4615,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "2497:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 4826,
														"src": "2463:36:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 4614,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4613,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"2463:14:11",
																	"2478:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5304,
																"src": "2463:25:11"
															},
															"referencedDeclaration": 5304,
															"src": "2463:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4619,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4616,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5317,
															"src": "2502:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 4617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2517:10:11",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5316,
														"src": "2502:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$5304_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 4618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2502:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2463:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4620,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4602,
														"src": "2578:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2588:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2578:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4626,
												"nodeType": "IfStatement",
												"src": "2574:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4623,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4517,
															"src": "2598:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2598:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4625,
													"nodeType": "RevertStatement",
													"src": "2591:19:11"
												}
											},
											{
												"condition": {
													"expression": {
														"id": 4627,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4615,
														"src": "2625:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState storage pointer"
														}
													},
													"id": 4628,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2628:14:11",
													"memberName": "depositsPaused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5229,
													"src": "2625:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4632,
												"nodeType": "IfStatement",
												"src": "2621:46:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4629,
															"name": "DepositsPaused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4513,
															"src": "2651:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2651:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4631,
													"nodeType": "RevertStatement",
													"src": "2644:23:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4633,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4602,
														"src": "2682:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 4634,
														"name": "MIN_DEPOSIT_AMOUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4557,
														"src": "2691:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2682:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4639,
												"nodeType": "IfStatement",
												"src": "2678:62:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4636,
															"name": "MinimumDepositNotMet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4519,
															"src": "2718:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2718:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4638,
													"nodeType": "RevertStatement",
													"src": "2711:29:11"
												}
											},
											{
												"condition": {
													"expression": {
														"id": 4640,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4615,
														"src": "2755:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState storage pointer"
														}
													},
													"id": 4641,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2758:17:11",
													"memberName": "emergencyShutdown",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5227,
													"src": "2755:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4645,
												"nodeType": "IfStatement",
												"src": "2751:52:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4642,
															"name": "EmergencyShutdown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4515,
															"src": "2784:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2784:19:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4644,
													"nodeType": "RevertStatement",
													"src": "2777:26:11"
												}
											},
											{
												"assignments": [
													4647
												],
												"declarations": [
													{
														"constant": false,
														"id": 4647,
														"mutability": "mutable",
														"name": "shares",
														"nameLocation": "2861:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 4826,
														"src": "2853:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2853:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4651,
												"initialValue": {
													"arguments": [
														{
															"id": 4649,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4602,
															"src": "2885:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4648,
														"name": "previewDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4846,
														"src": "2870:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 4650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2853:39:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4652,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4647,
														"src": "2907:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2917:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2907:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4658,
												"nodeType": "IfStatement",
												"src": "2903:40:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4655,
															"name": "NoSharesMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4523,
															"src": "2927:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2927:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4657,
													"nodeType": "RevertStatement",
													"src": "2920:23:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4659,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4602,
														"src": "3024:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4660,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4615,
																"src": "3033:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4661,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:11:11",
															"memberName": "totalAssets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5209,
															"src": "3033:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3130",
															"id": 4662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3050:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "3033:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3024:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4693,
												"nodeType": "IfStatement",
												"src": "3020:324:11",
												"trueBody": {
													"id": 4692,
													"nodeType": "Block",
													"src": "3054:290:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 4680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"expression": {
																				"id": 4665,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4615,
																				"src": "3091:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																					"typeString": "struct DiamondStorage.VaultState storage pointer"
																				}
																			},
																			"id": 4666,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3094:22:11",
																			"memberName": "largeDepositUnlockTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5280,
																			"src": "3091:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 4669,
																		"indexExpression": {
																			"expression": {
																				"id": 4667,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3117:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 4668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3121:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3117:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3091:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 4670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3132:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3091:42:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 4672,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3154:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 4673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3160:9:11",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3154:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"baseExpression": {
																			"expression": {
																				"id": 4674,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4615,
																				"src": "3172:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																					"typeString": "struct DiamondStorage.VaultState storage pointer"
																				}
																			},
																			"id": 4675,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3175:22:11",
																			"memberName": "largeDepositUnlockTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5280,
																			"src": "3172:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 4678,
																		"indexExpression": {
																			"expression": {
																				"id": 4676,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3198:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 4677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3202:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3198:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3172:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3154:55:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3091:118:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4684,
															"nodeType": "IfStatement",
															"src": "3069:190:11",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 4681,
																		"name": "LargeDepositNotTimelocked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4521,
																		"src": "3232:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 4682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3232:27:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 4683,
																"nodeType": "RevertStatement",
																"src": "3225:34:11"
															}
														},
														{
															"expression": {
																"id": 4690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3288:44:11",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 4685,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4615,
																			"src": "3295:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																				"typeString": "struct DiamondStorage.VaultState storage pointer"
																			}
																		},
																		"id": 4686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3298:22:11",
																		"memberName": "largeDepositUnlockTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5280,
																		"src": "3295:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 4689,
																	"indexExpression": {
																		"expression": {
																			"id": 4687,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3321:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 4688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3325:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3321:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3295:37:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4691,
															"nodeType": "ExpressionStatement",
															"src": "3288:44:11"
														}
													]
												}
											},
											{
												"condition": {
													"id": 4698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3408:28:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 4694,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4615,
																"src": "3409:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4695,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3412:14:11",
															"memberName": "isExistingUser",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5264,
															"src": "3409:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 4697,
														"indexExpression": {
															"id": 4696,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "3427:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3409:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4716,
												"nodeType": "IfStatement",
												"src": "3404:141:11",
												"trueBody": {
													"id": 4715,
													"nodeType": "Block",
													"src": "3438:107:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4704,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4604,
																		"src": "3475:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 4699,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4615,
																			"src": "3453:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																				"typeString": "struct DiamondStorage.VaultState storage pointer"
																			}
																		},
																		"id": 4702,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3456:13:11",
																		"memberName": "userAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5240,
																		"src": "3453:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 4703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3470:4:11",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3453:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 4705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3453:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4706,
															"nodeType": "ExpressionStatement",
															"src": "3453:31:11"
														},
														{
															"expression": {
																"id": 4713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 4707,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4615,
																			"src": "3499:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																				"typeString": "struct DiamondStorage.VaultState storage pointer"
																			}
																		},
																		"id": 4710,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3502:14:11",
																		"memberName": "isExistingUser",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5264,
																		"src": "3499:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 4711,
																	"indexExpression": {
																		"id": 4709,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4604,
																		"src": "3517:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3499:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 4712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3499:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4714,
															"nodeType": "ExpressionStatement",
															"src": "3499:34:11"
														}
													]
												}
											},
											{
												"assignments": [
													4718
												],
												"declarations": [
													{
														"constant": false,
														"id": 4718,
														"mutability": "mutable",
														"name": "amountToStake",
														"nameLocation": "3617:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 4826,
														"src": "3609:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4717,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3609:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4725,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4719,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4602,
																	"src": "3634:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 4720,
																	"name": "STAKED_PORTION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4560,
																	"src": "3643:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3634:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4722,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3633:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 4723,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3661:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3633:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3609:55:11"
											},
											{
												"assignments": [
													4727
												],
												"declarations": [
													{
														"constant": false,
														"id": 4727,
														"mutability": "mutable",
														"name": "expectedEth",
														"nameLocation": "3749:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 4826,
														"src": "3741:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3741:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4735,
												"initialValue": {
													"arguments": [
														{
															"id": 4733,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4718,
															"src": "3810:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 4729,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4615,
																		"src": "3777:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																			"typeString": "struct DiamondStorage.VaultState storage pointer"
																		}
																	},
																	"id": 4730,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3780:12:11",
																	"memberName": "swapContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5217,
																	"src": "3777:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4728,
																"name": "ISwapContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4503,
																"src": "3763:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISwapContract_$4503_$",
																	"typeString": "type(contract ISwapContract)"
																}
															},
															"id": 4731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3763:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapContract_$4503",
																"typeString": "contract ISwapContract"
															}
														},
														"id": 4732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3794:15:11",
														"memberName": "getETHAmountOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4502,
														"src": "3763:46:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 4734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3763:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3741:83:11"
											},
											{
												"assignments": [
													4737
												],
												"declarations": [
													{
														"constant": false,
														"id": 4737,
														"mutability": "mutable",
														"name": "minExpectedEth",
														"nameLocation": "3843:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 4826,
														"src": "3835:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4744,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4738,
																	"name": "expectedEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4727,
																	"src": "3861:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3939",
																	"id": 4739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3875:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_99_by_1",
																		"typeString": "int_const 99"
																	},
																	"value": "99"
																},
																"src": "3861:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4741,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3860:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 4742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3881:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3860:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:49:11"
											},
											{
												"expression": {
													"id": 4751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4745,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4615,
																"src": "3930:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4748,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3933:12:11",
															"memberName": "userDeposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5248,
															"src": "3930:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4749,
														"indexExpression": {
															"id": 4747,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "3946:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3930:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4750,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4602,
														"src": "3959:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3930:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4752,
												"nodeType": "ExpressionStatement",
												"src": "3930:35:11"
											},
											{
												"expression": {
													"id": 4759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4753,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4615,
																"src": "3976:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4756,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3979:8:11",
															"memberName": "balances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5244,
															"src": "3976:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4757,
														"indexExpression": {
															"id": 4755,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "3988:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3976:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4758,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4647,
														"src": "4001:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3976:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4760,
												"nodeType": "ExpressionStatement",
												"src": "3976:31:11"
											},
											{
												"expression": {
													"id": 4765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4761,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4615,
															"src": "4018:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4763,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4021:11:11",
														"memberName": "totalAssets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5209,
														"src": "4018:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4764,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4602,
														"src": "4036:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4766,
												"nodeType": "ExpressionStatement",
												"src": "4018:24:11"
											},
											{
												"expression": {
													"id": 4771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4767,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4615,
															"src": "4053:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4769,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4056:11:11",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5211,
														"src": "4053:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4770,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4647,
														"src": "4071:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4053:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4772,
												"nodeType": "ExpressionStatement",
												"src": "4053:24:11"
											},
											{
												"expression": {
													"id": 4780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4773,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4615,
																"src": "4088:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4776,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4091:17:11",
															"memberName": "depositTimestamps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5252,
															"src": "4088:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4777,
														"indexExpression": {
															"id": 4775,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "4109:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4088:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4778,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4121:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4127:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4121:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4088:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4781,
												"nodeType": "ExpressionStatement",
												"src": "4088:48:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4252:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4256:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4252:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4791,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4272:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DepositFacet_$5189",
																		"typeString": "contract DepositFacet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DepositFacet_$5189",
																		"typeString": "contract DepositFacet"
																	}
																],
																"id": 4790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4264:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4789,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4264:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4264:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4793,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4602,
															"src": "4279:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 4783,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4615,
																		"src": "4211:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																			"typeString": "struct DiamondStorage.VaultState storage pointer"
																		}
																	},
																	"id": 4784,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4214:19:11",
																	"memberName": "ASSET_TOKEN_ADDRESS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5215,
																	"src": "4211:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4782,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "4204:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 4785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 4786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4235:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "4204:47:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4204:82:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4795,
												"nodeType": "ExpressionStatement",
												"src": "4204:82:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4796,
														"name": "amountToStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4718,
														"src": "4362:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4378:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4362:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4806,
												"nodeType": "IfStatement",
												"src": "4358:110:11",
												"trueBody": {
													"id": 4805,
													"nodeType": "Block",
													"src": "4381:87:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 4800,
																		"name": "minExpectedEth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4737,
																		"src": "4416:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4801,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4604,
																		"src": "4432:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 4802,
																		"name": "amountToStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4718,
																		"src": "4442:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4799,
																	"name": "safeTransferAndSwap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5152,
																	"src": "4396:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,address,uint256) returns (uint256)"
																	}
																},
																"id": 4803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4396:60:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4804,
															"nodeType": "ExpressionStatement",
															"src": "4396:60:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 4808,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4501:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4505:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4501:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4810,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "4513:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4811,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4602,
															"src": "4523:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4812,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4647,
															"src": "4531:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4807,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4576,
														"src": "4493:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 4813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4814,
												"nodeType": "EmitStatement",
												"src": "4488:50:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4816,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4604,
															"src": "4583:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4817,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4718,
															"src": "4606:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 4818,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4634:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4640:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4634:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 4820,
																"name": "LOCK_PERIOD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4563,
																"src": "4652:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4634:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4815,
														"name": "StakeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4584,
														"src": "4554:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4554:120:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4823,
												"nodeType": "EmitStatement",
												"src": "4549:125:11"
											},
											{
												"expression": {
													"id": 4824,
													"name": "shares",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4647,
													"src": "4702:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4610,
												"id": 4825,
												"nodeType": "Return",
												"src": "4695:13:11"
											}
										]
									},
									"functionSelector": "6e553f65",
									"id": 4827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4607,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4606,
												"name": "nonReentrant",
												"nameLocations": [
													"2421:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "2421:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2421:12:11"
										}
									],
									"name": "deposit",
									"nameLocation": "2345:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4602,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "2371:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4827,
												"src": "2363:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4604,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2396:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4827,
												"src": "2388:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:59:11"
									},
									"returnParameters": {
										"id": 4610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4827,
												"src": "2443:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:9:11"
									},
									"scope": 5189,
									"src": "2336:2380:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4845,
										"nodeType": "Block",
										"src": "4823:96:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4834,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4829,
														"src": "4838:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4848:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4838:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4840,
												"nodeType": "IfStatement",
												"src": "4834:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4837,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4517,
															"src": "4858:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4858:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4839,
													"nodeType": "RevertStatement",
													"src": "4851:19:11"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4842,
															"name": "assets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4829,
															"src": "4904:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4841,
														"name": "convertToShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4885,
														"src": "4888:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 4843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4888:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4833,
												"id": 4844,
												"nodeType": "Return",
												"src": "4881:30:11"
											}
										]
									},
									"functionSelector": "ef8b30f7",
									"id": 4846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewDeposit",
									"nameLocation": "4762:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4829,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4785:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4846,
												"src": "4777:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4777:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4776:16:11"
									},
									"returnParameters": {
										"id": 4833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4846,
												"src": "4814:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4814:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4813:9:11"
									},
									"scope": 5189,
									"src": "4753:166:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4884,
										"nodeType": "Block",
										"src": "5002:253:11",
										"statements": [
											{
												"assignments": [
													4857
												],
												"declarations": [
													{
														"constant": false,
														"id": 4857,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5047:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 4884,
														"src": "5013:36:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 4856,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4855,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"5013:14:11",
																	"5028:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5304,
																"src": "5013:25:11"
															},
															"referencedDeclaration": 5304,
															"src": "5013:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4861,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4858,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5317,
															"src": "5052:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 4859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5067:10:11",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5316,
														"src": "5052:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$5304_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 4860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5052:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5013:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4862,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4857,
																"src": "5104:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4863,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5107:11:11",
															"memberName": "totalAssets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5209,
															"src": "5104:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 4864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5122:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5104:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 4866,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4857,
																"src": "5127:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4867,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5130:11:11",
															"memberName": "totalShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5211,
															"src": "5127:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 4868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5145:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5127:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5104:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4874,
												"nodeType": "IfStatement",
												"src": "5100:88:11",
												"trueBody": {
													"id": 4873,
													"nodeType": "Block",
													"src": "5148:40:11",
													"statements": [
														{
															"expression": {
																"id": 4871,
																"name": "assets",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4848,
																"src": "5170:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 4852,
															"id": 4872,
															"nodeType": "Return",
															"src": "5163:13:11"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4875,
																	"name": "assets",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4848,
																	"src": "5206:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 4876,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4857,
																		"src": "5215:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																			"typeString": "struct DiamondStorage.VaultState storage pointer"
																		}
																	},
																	"id": 4877,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5218:11:11",
																	"memberName": "totalShares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5211,
																	"src": "5215:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5206:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4879,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5205:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 4880,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4857,
															"src": "5233:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5236:11:11",
														"memberName": "totalAssets",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5209,
														"src": "5233:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5205:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4852,
												"id": 4883,
												"nodeType": "Return",
												"src": "5198:49:11"
											}
										]
									},
									"functionSelector": "c6e6f592",
									"id": 4885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToShares",
									"nameLocation": "4940:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4848,
												"mutability": "mutable",
												"name": "assets",
												"nameLocation": "4964:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4885,
												"src": "4956:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:16:11"
									},
									"returnParameters": {
										"id": 4852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4885,
												"src": "4993:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:9:11"
									},
									"scope": 5189,
									"src": "4931:324:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4917,
										"nodeType": "Block",
										"src": "5335:278:11",
										"statements": [
											{
												"assignments": [
													4896
												],
												"declarations": [
													{
														"constant": false,
														"id": 4896,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5380:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 4917,
														"src": "5346:36:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 4895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4894,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"5346:14:11",
																	"5361:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5304,
																"src": "5346:25:11"
															},
															"referencedDeclaration": 5304,
															"src": "5346:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4900,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4897,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5317,
															"src": "5385:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 4898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5400:10:11",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5316,
														"src": "5385:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$5304_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 4899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5385:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5346:66:11"
											},
											{
												"assignments": [
													4902
												],
												"declarations": [
													{
														"constant": false,
														"id": 4902,
														"mutability": "mutable",
														"name": "deposited",
														"nameLocation": "5431:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 4917,
														"src": "5423:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4901,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5423:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4907,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 4903,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4896,
															"src": "5443:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4904,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5446:12:11",
														"memberName": "userDeposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5248,
														"src": "5443:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 4906,
													"indexExpression": {
														"id": 4905,
														"name": "receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4887,
														"src": "5459:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5443:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5423:45:11"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4908,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4902,
															"src": "5499:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 4909,
															"name": "MAX_DEPOSIT_PER_USER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4552,
															"src": "5512:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5499:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4912,
															"name": "MAX_DEPOSIT_PER_USER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4552,
															"src": "5573:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 4913,
															"name": "deposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4902,
															"src": "5596:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5573:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5499:106:11",
													"trueExpression": {
														"hexValue": "30",
														"id": 4911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5552:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4891,
												"id": 4916,
												"nodeType": "Return",
												"src": "5479:126:11"
											}
										]
									},
									"functionSelector": "402d267d",
									"id": 4918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxDeposit",
									"nameLocation": "5276:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4887,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5295:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4918,
												"src": "5287:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:18:11"
									},
									"returnParameters": {
										"id": 4891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4918,
												"src": "5326:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:9:11"
									},
									"scope": 5189,
									"src": "5267:346:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 5151,
										"nodeType": "Block",
										"src": "5781:2696:11",
										"statements": [
											{
												"assignments": [
													4933
												],
												"declarations": [
													{
														"constant": false,
														"id": 4933,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5826:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "5792:36:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 4932,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4931,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"5792:14:11",
																	"5807:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5304,
																"src": "5792:25:11"
															},
															"referencedDeclaration": 5304,
															"src": "5792:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4937,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 4934,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5317,
															"src": "5831:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 4935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5846:10:11",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5316,
														"src": "5831:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$5304_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 4936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5831:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5792:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4938,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4933,
															"src": "5883:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4939,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5886:12:11",
														"memberName": "swapContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5217,
														"src": "5883:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5910:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5902:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4940,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5902:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5902:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5883:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4948,
												"nodeType": "IfStatement",
												"src": "5879:62:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4945,
															"name": "SwapContractNotSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4529,
															"src": "5921:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5921:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4947,
													"nodeType": "RevertStatement",
													"src": "5914:27:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4949,
														"name": "amountToStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4924,
														"src": "5956:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5973:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5956:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4955,
												"nodeType": "IfStatement",
												"src": "5952:47:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4952,
															"name": "AmountTooSmall",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4531,
															"src": "5983:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5983:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4954,
													"nodeType": "RevertStatement",
													"src": "5976:23:11"
												}
											},
											{
												"assignments": [
													4957
												],
												"declarations": [
													{
														"constant": false,
														"id": 4957,
														"mutability": "mutable",
														"name": "batchId",
														"nameLocation": "6028:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "6020:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 4956,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6020:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4967,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4961,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6079:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 4962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6085:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6079:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 4963,
																	"name": "beneficiary",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4922,
																	"src": "6096:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 4964,
																	"name": "amountToStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4924,
																	"src": "6109:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 4959,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6062:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 4960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6066:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "6062:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 4965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6062:61:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 4958,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6038:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 4966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:96:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6020:114:11"
											},
											{
												"expression": {
													"id": 4972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4968,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4933,
															"src": "6155:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 4970,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6158:16:11",
														"memberName": "totalStakedValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5213,
														"src": "6155:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4971,
														"name": "amountToStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4924,
														"src": "6178:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6155:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4973,
												"nodeType": "ExpressionStatement",
												"src": "6155:36:11"
											},
											{
												"expression": {
													"id": 4980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 4974,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "6202:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4977,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6205:14:11",
															"memberName": "stakedPortions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5256,
															"src": "6202:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 4978,
														"indexExpression": {
															"id": 4976,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "6220:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6202:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4979,
														"name": "amountToStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4924,
														"src": "6236:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6202:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4981,
												"nodeType": "ExpressionStatement",
												"src": "6202:47:11"
											},
											{
												"assignments": [
													4984
												],
												"declarations": [
													{
														"constant": false,
														"id": 4984,
														"mutability": "mutable",
														"name": "usdc",
														"nameLocation": "6313:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "6307:10:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUSDC_$4482",
															"typeString": "contract IUSDC"
														},
														"typeName": {
															"id": 4983,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4982,
																"name": "IUSDC",
																"nameLocations": [
																	"6307:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 4482,
																"src": "6307:5:11"
															},
															"referencedDeclaration": 4482,
															"src": "6307:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUSDC_$4482",
																"typeString": "contract IUSDC"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4989,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4986,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "6326:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4987,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:19:11",
															"memberName": "ASSET_TOKEN_ADDRESS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5215,
															"src": "6326:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4985,
														"name": "IUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4482,
														"src": "6320:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUSDC_$4482_$",
															"typeString": "type(contract IUSDC)"
														}
													},
													"id": 4988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6320:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUSDC_$4482",
														"typeString": "contract IUSDC"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6307:42:11"
											},
											{
												"assignments": [
													4991
												],
												"declarations": [
													{
														"constant": false,
														"id": 4991,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6365:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "6360:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 4990,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6360:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4998,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4994,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "6388:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 4995,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6391:12:11",
															"memberName": "swapContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5217,
															"src": "6388:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4996,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4924,
															"src": "6405:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4992,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4984,
															"src": "6375:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUSDC_$4482",
																"typeString": "contract IUSDC"
															}
														},
														"id": 4993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6380:7:11",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4476,
														"src": "6375:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6375:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6360:59:11"
											},
											{
												"condition": {
													"id": 5000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6434:8:11",
													"subExpression": {
														"id": 4999,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4991,
														"src": "6435:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5004,
												"nodeType": "IfStatement",
												"src": "6430:41:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5001,
															"name": "USDCApprovalFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4525,
															"src": "6451:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 5002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6451:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 5003,
													"nodeType": "RevertStatement",
													"src": "6444:27:11"
												}
											},
											{
												"assignments": [
													5006
												],
												"declarations": [
													{
														"constant": false,
														"id": 5006,
														"mutability": "mutable",
														"name": "deadline",
														"nameLocation": "6552:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "6544:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5005,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6544:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5011,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 5007,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6563:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 5008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6569:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6563:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "333030",
														"id": 5009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6581:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "6563:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6544:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5017,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6674:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DepositFacet_$5189",
																		"typeString": "contract DepositFacet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DepositFacet_$5189",
																		"typeString": "contract DepositFacet"
																	}
																],
																"id": 5016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6666:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 5015,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6666:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 5018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6666:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 5019,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "6681:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6684:12:11",
															"memberName": "swapContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5217,
															"src": "6681:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5021,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4924,
															"src": "6698:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 5012,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4984,
															"src": "6648:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUSDC_$4482",
																"typeString": "contract IUSDC"
															}
														},
														"id": 5014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6653:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "6648:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 5022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5023,
												"nodeType": "ExpressionStatement",
												"src": "6648:64:11"
											},
											{
												"assignments": [
													5025
												],
												"declarations": [
													{
														"constant": false,
														"id": 5025,
														"mutability": "mutable",
														"name": "ethReceived",
														"nameLocation": "6772:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "6764:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6764:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5037,
												"initialValue": {
													"arguments": [
														{
															"id": 5031,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4924,
															"src": "6851:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5032,
															"name": "amountOutMin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4920,
															"src": "6879:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 5033,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "6906:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5034,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6909:16:11",
															"memberName": "receiverContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5223,
															"src": "6906:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5035,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5006,
															"src": "6940:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 5027,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4933,
																		"src": "6800:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																			"typeString": "struct DiamondStorage.VaultState storage pointer"
																		}
																	},
																	"id": 5028,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6803:12:11",
																	"memberName": "swapContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5217,
																	"src": "6800:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 5026,
																"name": "ISwapContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4503,
																"src": "6786:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISwapContract_$4503_$",
																	"typeString": "type(contract ISwapContract)"
																}
															},
															"id": 5029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6786:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapContract_$4503",
																"typeString": "contract ISwapContract"
															}
														},
														"id": 5030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6817:19:11",
														"memberName": "swapExactUSDCForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4495,
														"src": "6786:50:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,address,uint256) external returns (uint256)"
														}
													},
													"id": 5036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6786:173:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6764:195:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 5038,
														"name": "ethReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5025,
														"src": "6984:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 5039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6999:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6984:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5044,
												"nodeType": "IfStatement",
												"src": "6980:44:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5041,
															"name": "NoETHReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4527,
															"src": "7009:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 5042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7009:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 5043,
													"nodeType": "RevertStatement",
													"src": "7002:22:11"
												}
											},
											{
												"expression": {
													"id": 5051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 5045,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "7088:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5048,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7091:16:11",
															"memberName": "pendingEthStakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5284,
															"src": "7088:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5049,
														"indexExpression": {
															"id": 5047,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "7108:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7088:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 5050,
														"name": "ethReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5025,
														"src": "7123:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5052,
												"nodeType": "ExpressionStatement",
												"src": "7088:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 5059,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "7223:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 5053,
																	"name": "ds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4933,
																	"src": "7193:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																		"typeString": "struct DiamondStorage.VaultState storage pointer"
																	}
																},
																"id": 5056,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7196:12:11",
																"memberName": "stakeBatches",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5289,
																"src": "7193:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(bytes32 => address[] storage ref)"
																}
															},
															"id": 5057,
															"indexExpression": {
																"id": 5055,
																"name": "batchId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4957,
																"src": "7209:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7193:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 5058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7218:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7193:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 5060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7193:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5061,
												"nodeType": "ExpressionStatement",
												"src": "7193:42:11"
											},
											{
												"assignments": [
													5063
												],
												"declarations": [
													{
														"constant": false,
														"id": 5063,
														"mutability": "mutable",
														"name": "wstETHReceived",
														"nameLocation": "7304:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "7296:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7296:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5073,
												"initialValue": {
													"arguments": [
														{
															"id": 5071,
															"name": "batchId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4957,
															"src": "7405:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 5065,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4933,
																			"src": "7331:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																				"typeString": "struct DiamondStorage.VaultState storage pointer"
																			}
																		},
																		"id": 5066,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7334:16:11",
																		"memberName": "receiverContract",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5223,
																		"src": "7331:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 5064,
																	"name": "IReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4511,
																	"src": "7321:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IReceiver_$4511_$",
																		"typeString": "type(contract IReceiver)"
																	}
																},
																"id": 5067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7321:30:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IReceiver_$4511",
																	"typeString": "contract IReceiver"
																}
															},
															"id": 5068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7352:18:11",
															"memberName": "batchStakeWithLido",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4510,
															"src": "7321:49:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$_t_uint256_$",
																"typeString": "function (bytes32) payable external returns (uint256)"
															}
														},
														"id": 5070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"hexValue": "30",
																"id": 5069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7392:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"src": "7321:83:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_bytes32_$returns$_t_uint256_$value",
															"typeString": "function (bytes32) payable external returns (uint256)"
														}
													},
													"id": 5072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7321:92:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7296:117:11"
											},
											{
												"condition": {
													"baseExpression": {
														"expression": {
															"id": 5074,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4933,
															"src": "7438:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 5075,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7441:16:11",
														"memberName": "processedBatches",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5293,
														"src": "7438:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 5077,
													"indexExpression": {
														"id": 5076,
														"name": "batchId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4957,
														"src": "7458:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7438:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5081,
												"nodeType": "IfStatement",
												"src": "7434:64:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5078,
															"name": "BatchAlreadyProcessed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4533,
															"src": "7475:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 5079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7475:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 5080,
													"nodeType": "RevertStatement",
													"src": "7468:30:11"
												}
											},
											{
												"expression": {
													"id": 5088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 5082,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "7509:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5085,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7512:16:11",
															"memberName": "processedBatches",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5293,
															"src": "7509:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 5086,
														"indexExpression": {
															"id": 5084,
															"name": "batchId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4957,
															"src": "7529:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7509:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 5087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7540:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7509:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5089,
												"nodeType": "ExpressionStatement",
												"src": "7509:35:11"
											},
											{
												"assignments": [
													5091
												],
												"declarations": [
													{
														"constant": false,
														"id": 5091,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "7608:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 5151,
														"src": "7600:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 5090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7600:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5093,
												"initialValue": {
													"id": 5092,
													"name": "wstETHReceived",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5063,
													"src": "7620:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7600:34:11"
											},
											{
												"expression": {
													"id": 5100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 5094,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "7645:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5097,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7648:17:11",
															"memberName": "userWstETHBalance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5268,
															"src": "7645:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5098,
														"indexExpression": {
															"id": 5096,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "7666:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7645:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 5099,
														"name": "userShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5091,
														"src": "7682:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7645:46:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5101,
												"nodeType": "ExpressionStatement",
												"src": "7645:46:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 5110,
																	"name": "amountToStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4924,
																	"src": "7863:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 5111,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7906:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 5112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7912:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7906:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 5113,
																	"name": "userShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5091,
																	"src": "7954:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 5114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7993:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 5108,
																	"name": "DiamondStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5317,
																	"src": "7807:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																		"typeString": "type(library DiamondStorage)"
																	}
																},
																"id": 5109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7822:13:11",
																"memberName": "StakedDeposit",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5205,
																"src": "7807:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_StakedDeposit_$5205_storage_ptr_$",
																	"typeString": "type(struct DiamondStorage.StakedDeposit storage pointer)"
																}
															},
															"id": 5115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"7855:6:11",
																"7895:9:11",
																"7940:12:11",
																"7982:9:11"
															],
															"names": [
																"amount",
																"timestamp",
																"wstETHAmount",
																"withdrawn"
															],
															"nodeType": "FunctionCall",
															"src": "7807:207:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedDeposit_$5205_memory_ptr",
																"typeString": "struct DiamondStorage.StakedDeposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedDeposit_$5205_memory_ptr",
																"typeString": "struct DiamondStorage.StakedDeposit memory"
															}
														],
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 5102,
																	"name": "ds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4933,
																	"src": "7753:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																		"typeString": "struct DiamondStorage.VaultState storage pointer"
																	}
																},
																"id": 5105,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7756:18:11",
																"memberName": "userStakedDeposits",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5303,
																"src": "7753:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DiamondStorage.StakedDeposit storage ref[] storage ref)"
																}
															},
															"id": 5106,
															"indexExpression": {
																"id": 5104,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4922,
																"src": "7775:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7753:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage",
																"typeString": "struct DiamondStorage.StakedDeposit storage ref[] storage ref"
															}
														},
														"id": 5107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7788:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7753:39:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_ptr_$_t_struct$_StakedDeposit_$5205_storage_$returns$__$attached_to$_t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DiamondStorage.StakedDeposit storage ref[] storage pointer,struct DiamondStorage.StakedDeposit storage ref)"
														}
													},
													"id": 5116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7753:272:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5117,
												"nodeType": "ExpressionStatement",
												"src": "7753:272:11"
											},
											{
												"expression": {
													"id": 5124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 5118,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "8078:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8081:16:11",
															"memberName": "pendingEthStakes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5284,
															"src": "8078:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5122,
														"indexExpression": {
															"id": 5120,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "8098:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8078:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 5123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8113:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8078:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5125,
												"nodeType": "ExpressionStatement",
												"src": "8078:36:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5127,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "8168:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5128,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4924,
															"src": "8194:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 5132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 5129,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "8222:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 5130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8228:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "8222:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 5131,
																"name": "LOCK_PERIOD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4563,
																"src": "8240:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8222:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5126,
														"name": "SwapInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4592,
														"src": "8140:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 5133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8140:122:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5134,
												"nodeType": "EmitStatement",
												"src": "8135:127:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 5136,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4922,
															"src": "8309:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 5137,
															"name": "amountToStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4924,
															"src": "8322:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 5138,
															"name": "wstETHReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5063,
															"src": "8337:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 5135,
														"name": "WstETHBalanceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4600,
														"src": "8288:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 5139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8288:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 5140,
												"nodeType": "EmitStatement",
												"src": "8283:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 5144,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4933,
																"src": "8413:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5145,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8416:12:11",
															"memberName": "swapContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5217,
															"src": "8413:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 5146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8430:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 5141,
															"name": "usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4984,
															"src": "8400:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUSDC_$4482",
																"typeString": "contract IUSDC"
															}
														},
														"id": 5143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8405:7:11",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4476,
														"src": "8400:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 5147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8400:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5148,
												"nodeType": "ExpressionStatement",
												"src": "8400:32:11"
											},
											{
												"expression": {
													"id": 5149,
													"name": "userShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5091,
													"src": "8460:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4928,
												"id": 5150,
												"nodeType": "Return",
												"src": "8453:16:11"
											}
										]
									},
									"id": 5152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferAndSwap",
									"nameLocation": "5634:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4920,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "5672:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 5152,
												"src": "5664:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5664:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4922,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5703:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 5152,
												"src": "5695:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4924,
												"mutability": "mutable",
												"name": "amountToStake",
												"nameLocation": "5733:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 5152,
												"src": "5725:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5653:100:11"
									},
									"returnParameters": {
										"id": 4928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 5152,
												"src": "5772:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:9:11"
									},
									"scope": 5189,
									"src": "5625:2852:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 5187,
										"nodeType": "Block",
										"src": "8527:258:11",
										"statements": [
											{
												"assignments": [
													5159
												],
												"declarations": [
													{
														"constant": false,
														"id": 5159,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "8572:2:11",
														"nodeType": "VariableDeclaration",
														"scope": 5187,
														"src": "8538:36:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 5158,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 5157,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"8538:14:11",
																	"8553:10:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 5304,
																"src": "8538:25:11"
															},
															"referencedDeclaration": 5304,
															"src": "8538:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 5160,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5317,
															"src": "8577:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$5317_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 5161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8592:10:11",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5316,
														"src": "8577:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$5304_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 5162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8577:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8538:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 5170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 5164,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5159,
																"src": "8619:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8622:22:11",
															"memberName": "largeDepositUnlockTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5280,
															"src": "8619:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5168,
														"indexExpression": {
															"expression": {
																"id": 5166,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8645:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 5167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8649:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8645:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8619:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 5169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8660:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8619:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 5174,
												"nodeType": "IfStatement",
												"src": "8615:77:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 5171,
															"name": "DepositAlreadyQueued",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4535,
															"src": "8670:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 5172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8670:22:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 5173,
													"nodeType": "RevertStatement",
													"src": "8663:29:11"
												}
											},
											{
												"expression": {
													"id": 5185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 5175,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5159,
																"src": "8703:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 5179,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8706:22:11",
															"memberName": "largeDepositUnlockTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 5280,
															"src": "8703:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 5180,
														"indexExpression": {
															"expression": {
																"id": 5177,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8729:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 5178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8733:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8729:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8703:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 5184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 5181,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8743:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 5182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8749:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8743:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 5183,
															"name": "DEPOSIT_TIMELOCK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4566,
															"src": "8761:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8743:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8703:74:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5186,
												"nodeType": "ExpressionStatement",
												"src": "8703:74:11"
											}
										]
									},
									"functionSelector": "94dddda1",
									"id": 5188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "queueLargeDeposit",
									"nameLocation": "8498:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8515:2:11"
									},
									"returnParameters": {
										"id": 5154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8527:0:11"
									},
									"scope": 5189,
									"src": "8489:296:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 5190,
							"src": "1319:7469:11",
							"usedErrors": [
								244,
								4513,
								4515,
								4517,
								4519,
								4521,
								4523,
								4525,
								4527,
								4529,
								4531,
								4533,
								4535
							],
							"usedEvents": [
								4576,
								4584,
								4592,
								4600
							]
						}
					],
					"src": "33:8755:11"
				},
				"id": 11
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"ast": {
					"absolutePath": "Vault_forge/src/Diamond/DiamondStorage.sol",
					"exportedSymbols": {
						"DiamondStorage": [
							5317
						]
					},
					"id": 5318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DiamondStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 5317,
							"linearizedBaseContracts": [
								5317
							],
							"name": "DiamondStorage",
							"nameLocation": "69:14:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5196,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nameLocation": "108:24:12",
									"nodeType": "VariableDeclaration",
									"scope": 5317,
									"src": "91:83:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 5192,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "91:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e73746f726167652e7969656c642e62756c6c",
												"id": 5194,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "145:28:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50",
													"typeString": "literal_string \"diamond.storage.yield.bull\""
												},
												"value": "diamond.storage.yield.bull"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50",
													"typeString": "literal_string \"diamond.storage.yield.bull\""
												}
											],
											"id": 5193,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "135:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 5195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "135:39:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "DiamondStorage.StakedDeposit",
									"id": 5205,
									"members": [
										{
											"constant": false,
											"id": 5198,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "288:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 5205,
											"src": "280:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "280:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5200,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "313:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 5205,
											"src": "305:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5199,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "305:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5202,
											"mutability": "mutable",
											"name": "wstETHAmount",
											"nameLocation": "341:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5205,
											"src": "333:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "333:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5204,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "369:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 5205,
											"src": "364:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "364:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedDeposit",
									"nameLocation": "255:13:12",
									"nodeType": "StructDefinition",
									"scope": 5317,
									"src": "248:138:12",
									"visibility": "public"
								},
								{
									"canonicalName": "DiamondStorage.VaultState",
									"id": 5304,
									"members": [
										{
											"constant": false,
											"id": 5207,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "468:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "460:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5206,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5209,
											"mutability": "mutable",
											"name": "totalAssets",
											"nameLocation": "492:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "484:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "484:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5211,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "522:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "514:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5210,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "514:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5213,
											"mutability": "mutable",
											"name": "totalStakedValue",
											"nameLocation": "552:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "544:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "544:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5215,
											"mutability": "mutable",
											"name": "ASSET_TOKEN_ADDRESS",
											"nameLocation": "625:19:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "617:27:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5214,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5217,
											"mutability": "mutable",
											"name": "swapContract",
											"nameLocation": "663:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "655:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5216,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "655:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5219,
											"mutability": "mutable",
											"name": "lidoWithdrawalAddress",
											"nameLocation": "694:21:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "686:29:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5218,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "686:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5221,
											"mutability": "mutable",
											"name": "wstETHAddress",
											"nameLocation": "734:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "726:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5220,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5223,
											"mutability": "mutable",
											"name": "receiverContract",
											"nameLocation": "766:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "758:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5222,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "758:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5225,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "801:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "793:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 5224,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "793:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5227,
											"mutability": "mutable",
											"name": "emergencyShutdown",
											"nameLocation": "864:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "859:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5226,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "859:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5229,
											"mutability": "mutable",
											"name": "depositsPaused",
											"nameLocation": "897:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "892:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5228,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "892:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5231,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "971:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "963:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5230,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "963:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5233,
											"mutability": "mutable",
											"name": "lastDailyUpdate",
											"nameLocation": "1004:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "996:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5232,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "996:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5235,
											"mutability": "mutable",
											"name": "lastProcessedUserIndex",
											"nameLocation": "1038:22:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1030:30:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5234,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1030:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5237,
											"mutability": "mutable",
											"name": "accumulatedFees",
											"nameLocation": "1079:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1071:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5236,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1071:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5240,
											"mutability": "mutable",
											"name": "userAddresses",
											"nameLocation": "1147:13:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1137:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 5238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 5239,
												"nodeType": "ArrayTypeName",
												"src": "1137:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5244,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "1230:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1202:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5243,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1202:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5248,
											"mutability": "mutable",
											"name": "userDeposits",
											"nameLocation": "1277:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1249:40:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5247,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1249:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5252,
											"mutability": "mutable",
											"name": "depositTimestamps",
											"nameLocation": "1328:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1300:45:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5251,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1300:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5256,
											"mutability": "mutable",
											"name": "stakedPortions",
											"nameLocation": "1384:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1356:42:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5255,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1356:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5260,
											"mutability": "mutable",
											"name": "lockedAssets",
											"nameLocation": "1437:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1409:40:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5259,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1409:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5264,
											"mutability": "mutable",
											"name": "isExistingUser",
											"nameLocation": "1485:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1460:39:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 5263,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1460:24:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1479:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5268,
											"mutability": "mutable",
											"name": "userWstETHBalance",
											"nameLocation": "1538:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1510:45:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5267,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1510:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5272,
											"mutability": "mutable",
											"name": "withdrawalInProgress",
											"nameLocation": "1591:20:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1566:45:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 5271,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1566:24:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1585:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5276,
											"mutability": "mutable",
											"name": "withdrawalRequestIds",
											"nameLocation": "1650:20:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1622:48:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5275,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1622:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5280,
											"mutability": "mutable",
											"name": "largeDepositUnlockTime",
											"nameLocation": "1709:22:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1681:50:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5279,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1681:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5284,
											"mutability": "mutable",
											"name": "pendingEthStakes",
											"nameLocation": "1770:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1742:44:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 5283,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1742:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5289,
											"mutability": "mutable",
											"name": "stakeBatches",
											"nameLocation": "1866:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1836:42:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_address_$dyn_storage_$",
												"typeString": "mapping(bytes32 => address[])"
											},
											"typeName": {
												"id": 5288,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1836:29:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_address_$dyn_storage_$",
													"typeString": "mapping(bytes32 => address[])"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"baseType": {
														"id": 5286,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1855:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 5287,
													"nodeType": "ArrayTypeName",
													"src": "1855:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5293,
											"mutability": "mutable",
											"name": "processedBatches",
											"nameLocation": "1914:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1889:41:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"typeName": {
												"id": 5292,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1889:24:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
													"typeString": "mapping(bytes32 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5297,
											"mutability": "mutable",
											"name": "pendingOperations",
											"nameLocation": "1969:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "1941:45:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 5296,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1941:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 5295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5303,
											"mutability": "mutable",
											"name": "userStakedDeposits",
											"nameLocation": "2080:18:12",
											"nodeType": "VariableDeclaration",
											"scope": 5304,
											"src": "2044:54:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_$",
												"typeString": "mapping(address => struct DiamondStorage.StakedDeposit[])"
											},
											"typeName": {
												"id": 5302,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 5298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2044:35:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_$",
													"typeString": "mapping(address => struct DiamondStorage.StakedDeposit[])"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"baseType": {
														"id": 5300,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 5299,
															"name": "StakedDeposit",
															"nameLocations": [
																"2063:13:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 5205,
															"src": "2063:13:12"
														},
														"referencedDeclaration": 5205,
														"src": "2063:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedDeposit_$5205_storage_ptr",
															"typeString": "struct DiamondStorage.StakedDeposit"
														}
													},
													"id": 5301,
													"nodeType": "ArrayTypeName",
													"src": "2063:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedDeposit_$5205_storage_$dyn_storage_ptr",
														"typeString": "struct DiamondStorage.StakedDeposit[]"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultState",
									"nameLocation": "405:10:12",
									"nodeType": "StructDefinition",
									"scope": 5317,
									"src": "398:1708:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 5315,
										"nodeType": "Block",
										"src": "2186:126:12",
										"statements": [
											{
												"assignments": [
													5311
												],
												"declarations": [
													{
														"constant": false,
														"id": 5311,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2205:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 5315,
														"src": "2197:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 5310,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2197:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 5313,
												"initialValue": {
													"id": 5312,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 5196,
													"src": "2216:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2197:43:12"
											},
											{
												"AST": {
													"nativeSrc": "2260:45:12",
													"nodeType": "YulBlock",
													"src": "2260:45:12",
													"statements": [
														{
															"nativeSrc": "2275:19:12",
															"nodeType": "YulAssignment",
															"src": "2275:19:12",
															"value": {
																"name": "position",
																"nativeSrc": "2286:8:12",
																"nodeType": "YulIdentifier",
																"src": "2286:8:12"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nativeSrc": "2275:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2275:7:12"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 5308,
														"isOffset": false,
														"isSlot": true,
														"src": "2275:7:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 5311,
														"isOffset": false,
														"isSlot": false,
														"src": "2286:8:12",
														"valueSize": 1
													}
												],
												"id": 5314,
												"nodeType": "InlineAssembly",
												"src": "2251:54:12"
											}
										]
									},
									"id": 5316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorage",
									"nameLocation": "2127:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:2:12"
									},
									"returnParameters": {
										"id": 5309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5308,
												"mutability": "mutable",
												"name": "ds",
												"nameLocation": "2182:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 5316,
												"src": "2163:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
													"typeString": "struct DiamondStorage.VaultState"
												},
												"typeName": {
													"id": 5307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 5306,
														"name": "VaultState",
														"nameLocations": [
															"2163:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5304,
														"src": "2163:10:12"
													},
													"referencedDeclaration": 5304,
													"src": "2163:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$5304_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2162:23:12"
									},
									"scope": 5317,
									"src": "2118:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 5318,
							"src": "61:2254:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2282:12"
				},
				"id": 12
			}
		}
	}
}