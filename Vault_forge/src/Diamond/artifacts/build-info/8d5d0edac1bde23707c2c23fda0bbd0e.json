{
	"id": "8d5d0edac1bde23707c2c23fda0bbd0e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"Vault_forge/src/Diamond/AdminFacet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./DiamondStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n// Custom errors\r\nerror NotAuthorized();\r\nerror InvalidAddress();\r\nerror ZeroAmount();\r\nerror ZeroFees();\r\nerror TooSoonToUpdate();\r\nerror OperationNotReady();\r\n\r\ncontract AdminFacet is ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Constants\r\n    uint256 private constant TIMELOCK_DURATION = 2 days;\r\n    uint256 private constant UPDATE_INTERVAL = 1 days;\r\n\r\n    // Events\r\n    event LidoWithdrawalAddressUpdated(address indexed newAddress);\r\n    event WstETHAddressUpdated(address indexed newAddress);\r\n    event ReceiverContractUpdated(address indexed newAddress);\r\n    event SwapContractUpdated(address indexed newAddress);\r\n    event FeeCollectorUpdated(address indexed newFeeCollector);\r\n    event FeesCollected(uint256 amount);\r\n    event EmergencyShutdownToggled(bool enabled);\r\n    event DepositsPausedToggled(bool paused);\r\n    event DailyUpdateTriggered(uint256 timestamp);\r\n    event OperationQueued(bytes32 indexed operationId, uint256 unlockTime);\r\n    event OperationExecuted(bytes32 indexed operationId);\r\n\r\n    // Modifier for owner-only functions\r\n    modifier onlyOwner() {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        if (msg.sender != ds.owner) revert NotAuthorized();\r\n        _;\r\n    }\r\n\r\n    // Address setters\r\n    function setLidoWithdrawalAddress(\r\n        address _lidoWithdrawal\r\n    ) external onlyOwner {\r\n        if (_lidoWithdrawal == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.lidoWithdrawalAddress = _lidoWithdrawal;\r\n\r\n        emit LidoWithdrawalAddressUpdated(_lidoWithdrawal);\r\n    }\r\n\r\n    function setWstETHAddress(address _wstETH) external onlyOwner {\r\n        if (_wstETH == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.wstETHAddress = _wstETH;\r\n\r\n        emit WstETHAddressUpdated(_wstETH);\r\n    }\r\n\r\n    function setReceiverContract(address _receiver) external onlyOwner {\r\n        if (_receiver == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.receiverContract = _receiver;\r\n\r\n        emit ReceiverContractUpdated(_receiver);\r\n    }\r\n\r\n    function setSwapContract(address _swapContract) external onlyOwner {\r\n        if (_swapContract == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.swapContract = _swapContract;\r\n\r\n        emit SwapContractUpdated(_swapContract);\r\n    }\r\n\r\n    function setFeeCollector(address _feeCollector) external onlyOwner {\r\n        if (_feeCollector == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.feeCollector = _feeCollector;\r\n\r\n        emit FeeCollectorUpdated(_feeCollector);\r\n    }\r\n\r\n    // State management\r\n    function toggleEmergencyShutdown() external onlyOwner {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.emergencyShutdown = !ds.emergencyShutdown;\r\n\r\n        emit EmergencyShutdownToggled(ds.emergencyShutdown);\r\n    }\r\n\r\n    function toggleDeposits() external onlyOwner {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        ds.depositsPaused = !ds.depositsPaused;\r\n\r\n        emit DepositsPausedToggled(ds.depositsPaused);\r\n    }\r\n\r\n    // Fee collection\r\n    function collectAccumulatedFees() external nonReentrant {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n\r\n        if (msg.sender != ds.feeCollector) revert NotAuthorized();\r\n        if (ds.accumulatedFees == 0) revert ZeroFees();\r\n\r\n        uint256 feesToCollect = ds.accumulatedFees;\r\n        ds.accumulatedFees = 0;\r\n\r\n        IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransfer(\r\n            ds.feeCollector,\r\n            feesToCollect\r\n        );\r\n\r\n        emit FeesCollected(feesToCollect);\r\n    }\r\n\r\n    // Update triggers\r\n    function triggerDailyUpdate() external onlyOwner {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n\r\n        if (block.timestamp < ds.lastDailyUpdate + UPDATE_INTERVAL)\r\n            revert TooSoonToUpdate();\r\n\r\n        // This would typically call the performDailyUpdate function which\r\n        // needs to be implemented in another facet (e.g., UpdateFacet)\r\n        // This is a placeholder that simply updates the timestamp\r\n        ds.lastDailyUpdate = block.timestamp;\r\n\r\n        emit DailyUpdateTriggered(block.timestamp);\r\n    }\r\n\r\n    // Protocol admin functions with timelock\r\n    function queueOperation(bytes32 operationId) external onlyOwner {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        uint256 unlockTime = block.timestamp + TIMELOCK_DURATION;\r\n\r\n        ds.pendingOperations[operationId] = unlockTime;\r\n\r\n        emit OperationQueued(operationId, unlockTime);\r\n    }\r\n\r\n    function executeOperation(bytes32 operationId) external onlyOwner {\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n        uint256 unlockTime = ds.pendingOperations[operationId];\r\n\r\n        if (unlockTime == 0 || block.timestamp < unlockTime)\r\n            revert OperationNotReady();\r\n\r\n        // Clear the pending operation\r\n        delete ds.pendingOperations[operationId];\r\n\r\n        emit OperationExecuted(operationId);\r\n\r\n        // Additional logic based on operation type would go here\r\n    }\r\n\r\n    // Ownership transfer\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        if (newOwner == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n\r\n        // Queue the ownership transfer\r\n        bytes32 operationId = keccak256(\r\n            abi.encodePacked(\"transferOwnership\", newOwner)\r\n        );\r\n        uint256 unlockTime = block.timestamp + TIMELOCK_DURATION;\r\n        ds.pendingOperations[operationId] = unlockTime;\r\n\r\n        emit OperationQueued(operationId, unlockTime);\r\n    }\r\n\r\n    function completeOwnershipTransfer(address newOwner) external onlyOwner {\r\n        if (newOwner == address(0)) revert InvalidAddress();\r\n\r\n        DiamondStorage.VaultState storage ds = DiamondStorage.getStorage();\r\n\r\n        // Check if the operation is ready\r\n        bytes32 operationId = keccak256(\r\n            abi.encodePacked(\"transferOwnership\", newOwner)\r\n        );\r\n        uint256 unlockTime = ds.pendingOperations[operationId];\r\n\r\n        if (unlockTime == 0 || block.timestamp < unlockTime)\r\n            revert OperationNotReady();\r\n\r\n        // Execute the ownership transfer\r\n        ds.owner = newOwner;\r\n        delete ds.pendingOperations[operationId];\r\n\r\n        emit OperationExecuted(operationId);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary DiamondStorage {\r\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.storage.yield.bull\");\r\n    \r\n    // Define the StakedDeposit struct used by the contract\r\n    struct StakedDeposit {\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n        uint256 wstETHAmount;\r\n        bool withdrawn;\r\n    }\r\n    \r\n    struct VaultState {\r\n        // Main state variables\r\n        address owner;\r\n        uint256 totalAssets;\r\n        uint256 totalShares;\r\n        uint256 totalStakedValue;\r\n        \r\n        // Asset addresses\r\n        address ASSET_TOKEN_ADDRESS;\r\n        address swapContract;\r\n        address lidoWithdrawalAddress;\r\n        address wstETHAddress;\r\n        address receiverContract;\r\n        address feeCollector;\r\n        \r\n        // Status flags\r\n        bool emergencyShutdown;\r\n        bool depositsPaused;\r\n        \r\n        // Timestamp tracking\r\n        uint256 lastUpdateTime;\r\n        uint256 lastDailyUpdate;\r\n        uint256 lastProcessedUserIndex;\r\n        uint256 accumulatedFees;\r\n        \r\n        // User data\r\n        address[] userAddresses;\r\n        \r\n        // Mappings\r\n        mapping(address => uint256) balances;\r\n        mapping(address => uint256) userDeposits;\r\n        mapping(address => uint256) depositTimestamps;\r\n        mapping(address => uint256) stakedPortions;\r\n        mapping(address => uint256) lockedAssets;\r\n        mapping(address => bool) isExistingUser;\r\n        mapping(address => uint256) userWstETHBalance;\r\n        mapping(address => bool) withdrawalInProgress;\r\n        mapping(address => uint256) withdrawalRequestIds;\r\n        mapping(address => uint256) largeDepositUnlockTime;\r\n        mapping(address => uint256) pendingEthStakes;\r\n        \r\n        // Batch processing\r\n        mapping(bytes32 => address[]) stakeBatches;\r\n        mapping(bytes32 => bool) processedBatches;\r\n        mapping(bytes32 => uint256) pendingOperations;\r\n        \r\n        // Staked deposits tracking\r\n        mapping(address => StakedDeposit[]) userStakedDeposits;\r\n    }\r\n    \r\n    function getStorage() internal pure returns (VaultState storage ds) {\r\n        bytes32 position = DIAMOND_STORAGE_POSITION;\r\n        assembly {\r\n            ds.slot := position\r\n        }\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURN 0xDD PUSH32 0x75E1086C95ED852522613A17720732B563A3E8D760039CEBA4F24A2664736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ RETURN 0xDD PUSH32 0x75E1086C95ED852522613A17720732B563A3E8D760039CEBA4F24A2664736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "698:9376:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014f3dd7f75e1086c95ed852522613a17720732b563a3e8d760039ceba4f24a2664736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Vault_forge/src/Diamond/AdminFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Vault_forge/src/Diamond/AdminFacet.sol": {
				"AdminFacet": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotAuthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OperationNotReady",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TooSoonToUpdate",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroFees",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "DailyUpdateTriggered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "DepositsPausedToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								}
							],
							"name": "EmergencyShutdownToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeCollector",
									"type": "address"
								}
							],
							"name": "FeeCollectorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeesCollected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "LidoWithdrawalAddressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "operationId",
									"type": "bytes32"
								}
							],
							"name": "OperationExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "operationId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"name": "OperationQueued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "ReceiverContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "SwapContractUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "WstETHAddressUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "collectAccumulatedFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "completeOwnershipTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "operationId",
									"type": "bytes32"
								}
							],
							"name": "executeOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "operationId",
									"type": "bytes32"
								}
							],
							"name": "queueOperation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								}
							],
							"name": "setFeeCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lidoWithdrawal",
									"type": "address"
								}
							],
							"name": "setLidoWithdrawalAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								}
							],
							"name": "setReceiverContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_swapContract",
									"type": "address"
								}
							],
							"name": "setSwapContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wstETH",
									"type": "address"
								}
							],
							"name": "setWstETHAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggleDeposits",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toggleEmergencyShutdown",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "triggerDailyUpdate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault_forge/src/Diamond/AdminFacet.sol\":389:7097  contract AdminFacet is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"Vault_forge/src/Diamond/AdminFacet.sol\":389:7097  contract AdminFacet is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":389:7097  contract AdminFacet is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8024e968\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd259ab42\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd259ab42\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd907813c\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe458d453\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_17:\n      dup1\n      0x8024e968\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa42dce80\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcbaf2fa7\n      eq\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_16:\n      dup1\n      0x062776bf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29175b8c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2a9165\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x37214ad0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x617f3989\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x798b4739\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3721:4248  function collectAccumulatedFees() external nonReentrant {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3187:3445  function toggleEmergencyShutdown() external onlyOwner {... */\n    tag_4:\n      tag_18\n      tag_21\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4280:4845  function triggerDailyUpdate() external onlyOwner {... */\n    tag_5:\n      tag_18\n      tag_23\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2197:2508  function setReceiverContract(address _receiver) external onlyOwner {... */\n    tag_6:\n      tag_18\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4900:5233  function queueOperation(bytes32 operationId) external onlyOwner {... */\n    tag_7:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6368:7094  function completeOwnershipTransfer(address newOwner) external onlyOwner {... */\n    tag_8:\n      tag_18\n      tag_33\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1895:2189  function setWstETHAddress(address _wstETH) external onlyOwner {... */\n    tag_9:\n      tag_18\n      tag_36\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2839:3154  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n    tag_10:\n      tag_18\n      tag_39\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5241:5772  function executeOperation(bytes32 operationId) external onlyOwner {... */\n    tag_11:\n      tag_18\n      tag_42\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2516:2831  function setSwapContract(address _swapContract) external onlyOwner {... */\n    tag_12:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3453:3690  function toggleDeposits() external onlyOwner {... */\n    tag_13:\n      tag_18\n      tag_48\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1521:1887  function setLidoWithdrawalAddress(... */\n    tag_14:\n      tag_18\n      tag_50\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5807:6360  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_15:\n      tag_18\n      tag_53\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3721:4248  function collectAccumulatedFees() external nonReentrant {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_56\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_57\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_56:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3788:3824  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3827:3854  DiamondStorage.getStorage() */\n      tag_59\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3827:3852  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3827:3854  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_59:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3885:3900  ds.feeCollector */\n      0x09\n      dup2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3871:3881  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3871:3900  msg.sender != ds.feeCollector */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3867:3924  if (msg.sender != ds.feeCollector) revert NotAuthorized() */\n      tag_61\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3909:3924  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3867:3924  if (msg.sender != ds.feeCollector) revert NotAuthorized() */\n    tag_61:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3939:3941  ds */\n      dup1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3939:3957  ds.accumulatedFees */\n      0x0d\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3961:3962  0 */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3939:3962  ds.accumulatedFees == 0 */\n      sub\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3935:3981  if (ds.accumulatedFees == 0) revert ZeroFees() */\n      tag_62\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3971:3981  ZeroFees() */\n      mload(0x40)\n      shl(0xe0, 0x4716db35)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3935:3981  if (ds.accumulatedFees == 0) revert ZeroFees() */\n    tag_62:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4018:4036  ds.accumulatedFees */\n      0x0d\n      dup2\n      add\n      dup1\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3994:4015  uint256 feesToCollect */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4047:4069  ds.accumulatedFees = 0 */\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4140:4155  ds.feeCollector */\n      0x09\n      dup3\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4089:4111  ds.ASSET_TOKEN_ADDRESS */\n      0x04\n      dup4\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4082:4194  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransfer(... */\n      tag_63\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4089:4111  ds.ASSET_TOKEN_ADDRESS */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4140:4155  ds.feeCollector */\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4018:4036  ds.accumulatedFees */\n      dup4\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4082:4125  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransfer */\n      tag_64\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4082:4194  IERC20(ds.ASSET_TOKEN_ADDRESS).safeTransfer(... */\n      jump\t// in\n    tag_63:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4212:4240  FeesCollected(feesToCollect) */\n      mload(0x40)\n        /* \"#utility.yul\":636:661   */\n      dup2\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4212:4240  FeesCollected(feesToCollect) */\n      0x860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f\n      swap1\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4212:4240  FeesCollected(feesToCollect) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3777:4248  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_67\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_67:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3721:4248  function collectAccumulatedFees() external nonReentrant {... */\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3187:3445  function toggleEmergencyShutdown() external onlyOwner {... */\n    tag_21:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_70\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_70:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_71\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_71:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3252:3288  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3291:3318  DiamondStorage.getStorage() */\n      tag_73\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3291:3316  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3291:3318  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_73:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3353:3373  ds.emergencyShutdown */\n      0x09\n      dup2\n      add\n      dup1\n      sload\n      0xff\n      shl(0xa0, 0x01)\n      dup1\n      dup4\n      div\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3352:3373  !ds.emergencyShutdown */\n      iszero\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3329:3373  ds.emergencyShutdown = !ds.emergencyShutdown */\n      dup2\n      mul\n      not(shl(0xa0, 0xff))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3391:3437  EmergencyShutdownToggled(ds.emergencyShutdown) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3252:3318  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap4\n      swap5\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3391:3437  EmergencyShutdownToggled(ds.emergencyShutdown) */\n      0xf3017345aa4f4b1edf82d1945ba8aaf39d9f284595b090260947f03bc53566f1\n      swap4\n      tag_74\n      swap4\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3416:3436  ds.emergencyShutdown */\n      swap3\n      swap1\n      swap3\n      div\n      and\n        /* \"#utility.yul\":837:851   */\n      iszero\n        /* \"#utility.yul\":830:852   */\n      iszero\n        /* \"#utility.yul\":812:853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":800:802   */\n      0x20\n        /* \"#utility.yul\":785:803   */\n      add\n      swap1\n        /* \"#utility.yul\":672:859   */\n      jump\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3391:3437  EmergencyShutdownToggled(ds.emergencyShutdown) */\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3241:3445  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3187:3445  function toggleEmergencyShutdown() external onlyOwner {... */\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4280:4845  function triggerDailyUpdate() external onlyOwner {... */\n    tag_23:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_77\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_77:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_78\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_78:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4340:4376  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4379:4406  DiamondStorage.getStorage() */\n      tag_80\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4379:4404  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4379:4406  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_80:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4340:4406  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":589:595  1 days */\n      0x015180\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4441:4443  ds */\n      dup2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4441:4459  ds.lastDailyUpdate */\n      0x0b\n      add\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4441:4477  ds.lastDailyUpdate + UPDATE_INTERVAL */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4423:4438  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4423:4477  block.timestamp < ds.lastDailyUpdate + UPDATE_INTERVAL */\n      lt\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4419:4516  if (block.timestamp < ds.lastDailyUpdate + UPDATE_INTERVAL)... */\n      iszero\n      tag_83\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4499:4516  TooSoonToUpdate() */\n      mload(0x40)\n      shl(0xe0, 0xe10ceb11)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4419:4516  if (block.timestamp < ds.lastDailyUpdate + UPDATE_INTERVAL)... */\n    tag_83:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4767:4782  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4746:4764  ds.lastDailyUpdate */\n      0x0b\n      dup3\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4746:4782  ds.lastDailyUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4800:4837  DailyUpdateTriggered(block.timestamp) */\n      mload(0x40)\n        /* \"#utility.yul\":636:661   */\n      swap1\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4800:4837  DailyUpdateTriggered(block.timestamp) */\n      0x33774f379c2063e81904e4e67242b165586dfc117cb89f7baeb19e04ef39a3be\n      swap1\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4800:4837  DailyUpdateTriggered(block.timestamp) */\n      tag_74\n        /* \"#utility.yul\":490:667   */\n      jump\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2197:2508  function setReceiverContract(address _receiver) external onlyOwner {... */\n    tag_27:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_86\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_86:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_87\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2279:2302  _receiver == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2275:2327  if (_receiver == address(0)) revert InvalidAddress() */\n      tag_89\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2311:2327  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2275:2327  if (_receiver == address(0)) revert InvalidAddress() */\n    tag_89:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2340:2376  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2379:2406  DiamondStorage.getStorage() */\n      tag_90\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2379:2404  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2379:2406  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_90:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2417:2436  ds.receiverContract */\n      0x08\n      dup2\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2417:2448  ds.receiverContract = _receiver */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2466:2500  ReceiverContractUpdated(_receiver) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2417:2436  ds.receiverContract */\n      swap2\n      swap3\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2417:2448  ds.receiverContract = _receiver */\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2466:2500  ReceiverContractUpdated(_receiver) */\n      0x66c8ee4f501025a135e9b302cead3d51cc5bf10c9496086853c1c961e6d91ee8\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2264:2508  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2197:2508  function setReceiverContract(address _receiver) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4900:5233  function queueOperation(bytes32 operationId) external onlyOwner {... */\n    tag_31:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_92\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_92:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_93\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_93:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4975:5011  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5014:5041  DiamondStorage.getStorage() */\n      tag_95\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5014:5039  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5014:5041  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_95:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4975:5041  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5052:5070  uint256 unlockTime */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5073:5108  block.timestamp + TIMELOCK_DURATION */\n      tag_96\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":533:539  2 days */\n      0x02a300\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5073:5088  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5073:5108  block.timestamp + TIMELOCK_DURATION */\n      tag_82\n      jump\t// in\n    tag_96:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5121:5154  ds.pendingOperations[operationId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5121:5141  ds.pendingOperations */\n      0x1c\n      dup5\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5121:5154  ds.pendingOperations[operationId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5121:5167  ds.pendingOperations[operationId] = unlockTime */\n      dup3\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5185:5225  OperationQueued(operationId, unlockTime) */\n      mload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5052:5108  uint256 unlockTime = block.timestamp + TIMELOCK_DURATION */\n      swap1\n      swap2\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5142:5153  operationId */\n      dup5\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5185:5225  OperationQueued(operationId, unlockTime) */\n      0x610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b214634\n      swap1\n      tag_97\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5052:5108  uint256 unlockTime = block.timestamp + TIMELOCK_DURATION */\n      dup5\n        /* \"#utility.yul\":636:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n      swap1\n        /* \"#utility.yul\":490:667   */\n      jump\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5185:5225  OperationQueued(operationId, unlockTime) */\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4964:5233  {... */\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":4900:5233  function queueOperation(bytes32 operationId) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6368:7094  function completeOwnershipTransfer(address newOwner) external onlyOwner {... */\n    tag_34:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_99\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_99:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_100\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6455:6477  newOwner == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6451:6502  if (newOwner == address(0)) revert InvalidAddress() */\n      tag_102\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6486:6502  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6451:6502  if (newOwner == address(0)) revert InvalidAddress() */\n    tag_102:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6515:6551  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6554:6581  DiamondStorage.getStorage() */\n      tag_103\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6554:6579  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6554:6581  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_103:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6515:6581  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6638:6657  bytes32 operationId */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6722:6730  newOwner */\n      dup4\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6684:6731  abi.encodePacked(\"transferOwnership\", newOwner) */\n      add(0x20, mload(0x40))\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6660:6742  keccak256(... */\n      dup2\n      mload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6684:6731  abi.encodePacked(\"transferOwnership\", newOwner) */\n      0x20\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6660:6742  keccak256(... */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6753:6771  uint256 unlockTime */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6774:6807  ds.pendingOperations[operationId] */\n      dup2\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6774:6794  ds.pendingOperations */\n      0x1c\n      dup7\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6774:6807  ds.pendingOperations[operationId] */\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6660:6742  keccak256(... */\n      swap1\n      swap2\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6824:6839  unlockTime == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6824:6871  unlockTime == 0 || block.timestamp < unlockTime */\n      tag_106\n      jumpi\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6861:6871  unlockTime */\n      dup1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6843:6858  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6843:6871  block.timestamp < unlockTime */\n      lt\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6824:6871  unlockTime == 0 || block.timestamp < unlockTime */\n    tag_106:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6820:6912  if (unlockTime == 0 || block.timestamp < unlockTime)... */\n      iszero\n      tag_107\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6893:6912  OperationNotReady() */\n      mload(0x40)\n      shl(0xe0, 0xf800799b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6820:6912  if (unlockTime == 0 || block.timestamp < unlockTime)... */\n    tag_107:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6968:6987  ds.owner = newOwner */\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      dup4\n      sstore\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7005:7038  ds.pendingOperations[operationId] */\n      dup3\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7005:7025  ds.pendingOperations */\n      0x1c\n      dup5\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7005:7038  ds.pendingOperations[operationId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6998:7038  delete ds.pendingOperations[operationId] */\n      dup3\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7056:7086  OperationExecuted(operationId) */\n      mload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7005:7038  ds.pendingOperations[operationId] */\n      dup4\n      swap2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":7056:7086  OperationExecuted(operationId) */\n      0x1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f9\n      swap2\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6440:7094  {... */\n      pop\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6368:7094  function completeOwnershipTransfer(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1895:2189  function setWstETHAddress(address _wstETH) external onlyOwner {... */\n    tag_37:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_109\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_109:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_110\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1972:1993  _wstETH == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1968:2018  if (_wstETH == address(0)) revert InvalidAddress() */\n      tag_112\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2002:2018  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1968:2018  if (_wstETH == address(0)) revert InvalidAddress() */\n    tag_112:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2031:2067  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2070:2097  DiamondStorage.getStorage() */\n      tag_113\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2070:2095  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2070:2097  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_113:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2108:2124  ds.wstETHAddress */\n      0x07\n      dup2\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2108:2134  ds.wstETHAddress = _wstETH */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2152:2181  WstETHAddressUpdated(_wstETH) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2108:2124  ds.wstETHAddress */\n      swap2\n      swap3\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2108:2134  ds.wstETHAddress = _wstETH */\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2152:2181  WstETHAddressUpdated(_wstETH) */\n      0xb72b4dd67ddcbcd61a6ebffbe1cca26d032c45f9d3a6f3c596e95e298717f746\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1957:2189  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1895:2189  function setWstETHAddress(address _wstETH) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2839:3154  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n    tag_40:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_115\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_115:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_116\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2921:2948  _feeCollector == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2917:2973  if (_feeCollector == address(0)) revert InvalidAddress() */\n      tag_118\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2957:2973  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2917:2973  if (_feeCollector == address(0)) revert InvalidAddress() */\n    tag_118:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2986:3022  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3025:3052  DiamondStorage.getStorage() */\n      tag_119\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3025:3050  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3025:3052  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_119:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3063:3078  ds.feeCollector */\n      0x09\n      dup2\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3063:3094  ds.feeCollector = _feeCollector */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3112:3146  FeeCollectorUpdated(_feeCollector) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3063:3078  ds.feeCollector */\n      swap2\n      swap3\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3063:3094  ds.feeCollector = _feeCollector */\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3112:3146  FeeCollectorUpdated(_feeCollector) */\n      0xe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2906:3154  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2839:3154  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5241:5772  function executeOperation(bytes32 operationId) external onlyOwner {... */\n    tag_43:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_121\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_121:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_122\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_122:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5318:5354  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5357:5384  DiamondStorage.getStorage() */\n      tag_124\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5357:5382  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5357:5384  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_124:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5395:5413  uint256 unlockTime */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5416:5449  ds.pendingOperations[operationId] */\n      dup5\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5416:5436  ds.pendingOperations */\n      0x1c\n      dup3\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5416:5449  ds.pendingOperations[operationId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5318:5384  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      swap2\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5466:5481  unlockTime == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5466:5513  unlockTime == 0 || block.timestamp < unlockTime */\n      tag_125\n      jumpi\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5503:5513  unlockTime */\n      dup1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5485:5500  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5485:5513  block.timestamp < unlockTime */\n      lt\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5466:5513  unlockTime == 0 || block.timestamp < unlockTime */\n    tag_125:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5462:5554  if (unlockTime == 0 || block.timestamp < unlockTime)... */\n      iszero\n      tag_126\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5535:5554  OperationNotReady() */\n      mload(0x40)\n      shl(0xe0, 0xf800799b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5462:5554  if (unlockTime == 0 || block.timestamp < unlockTime)... */\n    tag_126:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5614:5647  ds.pendingOperations[operationId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5614:5634  ds.pendingOperations */\n      0x1c\n      dup4\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5614:5647  ds.pendingOperations[operationId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5607:5647  delete ds.pendingOperations[operationId] */\n      dup3\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5665:5695  OperationExecuted(operationId) */\n      mload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5635:5646  operationId */\n      dup6\n      swap2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5665:5695  OperationExecuted(operationId) */\n      0x1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f9\n      swap2\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5307:5772  {... */\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5241:5772  function executeOperation(bytes32 operationId) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2516:2831  function setSwapContract(address _swapContract) external onlyOwner {... */\n    tag_46:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_128\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_128:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_129\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2598:2625  _swapContract == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2594:2650  if (_swapContract == address(0)) revert InvalidAddress() */\n      tag_131\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2634:2650  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2594:2650  if (_swapContract == address(0)) revert InvalidAddress() */\n    tag_131:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2663:2699  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2702:2729  DiamondStorage.getStorage() */\n      tag_132\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2702:2727  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2702:2729  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_132:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2740:2755  ds.swapContract */\n      0x05\n      dup2\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2740:2771  ds.swapContract = _swapContract */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2789:2823  SwapContractUpdated(_swapContract) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2740:2755  ds.swapContract */\n      swap2\n      swap3\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2740:2771  ds.swapContract = _swapContract */\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2789:2823  SwapContractUpdated(_swapContract) */\n      0x7a100de36a66305ed9ca3998196d0fb9a1806f6dc498d570393b88ab275ed4df\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2583:2831  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":2516:2831  function setSwapContract(address _swapContract) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3453:3690  function toggleDeposits() external onlyOwner {... */\n    tag_48:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_134\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_134:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_135\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_135:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3509:3545  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3548:3575  DiamondStorage.getStorage() */\n      tag_137\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3548:3573  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3548:3575  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_137:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3607:3624  ds.depositsPaused */\n      0x09\n      dup2\n      add\n      dup1\n      sload\n      0xff\n      shl(0xa8, 0x01)\n      dup1\n      dup4\n      div\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3606:3624  !ds.depositsPaused */\n      iszero\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3586:3624  ds.depositsPaused = !ds.depositsPaused */\n      dup2\n      mul\n      not(shl(0xa8, 0xff))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap3\n      dup4\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3642:3682  DepositsPausedToggled(ds.depositsPaused) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3509:3575  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap4\n      swap5\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3642:3682  DepositsPausedToggled(ds.depositsPaused) */\n      0x19115828b11df7bf8355d95226507e6ed8d980fc277bdb99594291bf2a466dab\n      swap4\n      tag_74\n      swap4\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":3664:3681  ds.depositsPaused */\n      swap3\n      swap1\n      swap3\n      div\n      and\n        /* \"#utility.yul\":837:851   */\n      iszero\n        /* \"#utility.yul\":830:852   */\n      iszero\n        /* \"#utility.yul\":812:853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":800:802   */\n      0x20\n        /* \"#utility.yul\":785:803   */\n      add\n      swap1\n        /* \"#utility.yul\":672:859   */\n      jump\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1521:1887  function setLidoWithdrawalAddress(... */\n    tag_51:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_140\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_140:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_141\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1630:1659  _lidoWithdrawal == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1626:1684  if (_lidoWithdrawal == address(0)) revert InvalidAddress() */\n      tag_143\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1668:1684  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1626:1684  if (_lidoWithdrawal == address(0)) revert InvalidAddress() */\n    tag_143:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1697:1733  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1736:1763  DiamondStorage.getStorage() */\n      tag_144\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1736:1761  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1736:1763  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_144:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1774:1798  ds.lidoWithdrawalAddress */\n      0x06\n      dup2\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1774:1816  ds.lidoWithdrawalAddress = _lidoWithdrawal */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1834:1879  LidoWithdrawalAddressUpdated(_lidoWithdrawal) */\n      mload(0x40)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1774:1798  ds.lidoWithdrawalAddress */\n      swap2\n      swap3\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1774:1816  ds.lidoWithdrawalAddress = _lidoWithdrawal */\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1834:1879  LidoWithdrawalAddressUpdated(_lidoWithdrawal) */\n      0xd97b0528df15f8ae38af640ff9002c863e7dde420b1b18f78ae48f42f78dc5db\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1615:1887  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1521:1887  function setLidoWithdrawalAddress(... */\n      pop\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5807:6360  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_54:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1342:1378  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      tag_146\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1406  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1381:1408  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_146:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1437:1445  ds.owner */\n      dup1\n      sload\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1433  msg.sender */\n      caller\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1423:1445  msg.sender != ds.owner */\n      eq\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n      tag_147\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1454:1469  NotAuthorized() */\n      mload(0x40)\n      shl(0xe0, 0xea8e4eb5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1419:1469  if (msg.sender != ds.owner) revert NotAuthorized() */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5886:5908  newOwner == address(0) */\n      dup3\n      and\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5882:5933  if (newOwner == address(0)) revert InvalidAddress() */\n      tag_149\n      jumpi\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5917:5933  InvalidAddress() */\n      mload(0x40)\n      shl(0xe0, 0xe6c4247b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5882:5933  if (newOwner == address(0)) revert InvalidAddress() */\n    tag_149:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5946:5982  DiamondStorage.VaultState storage ds */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5985:6012  DiamondStorage.getStorage() */\n      tag_150\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5985:6010  DiamondStorage.getStorage */\n      tag_60\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5985:6012  DiamondStorage.getStorage() */\n      jump\t// in\n    tag_150:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5946:6012  DiamondStorage.VaultState storage ds = DiamondStorage.getStorage() */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6066:6085  bytes32 operationId */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6150:6158  newOwner */\n      dup4\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6112:6159  abi.encodePacked(\"transferOwnership\", newOwner) */\n      add(0x20, mload(0x40))\n      tag_151\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6088:6170  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6066:6170  bytes32 operationId = keccak256(... */\n      swap1\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6181:6199  uint256 unlockTime */\n      0x00\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":533:539  2 days */\n      0x02a300\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6202:6217  block.timestamp */\n      timestamp\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6202:6237  block.timestamp + TIMELOCK_DURATION */\n      tag_152\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_152:\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6248:6281  ds.pendingOperations[operationId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6248:6268  ds.pendingOperations */\n      0x1c\n      dup6\n      add\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6248:6281  ds.pendingOperations[operationId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6248:6294  ds.pendingOperations[operationId] = unlockTime */\n      dup3\n      swap1\n      sstore\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6312:6352  OperationQueued(operationId, unlockTime) */\n      mload\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6181:6237  uint256 unlockTime = block.timestamp + TIMELOCK_DURATION */\n      swap1\n      swap2\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6269:6280  operationId */\n      dup3\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6312:6352  OperationQueued(operationId, unlockTime) */\n      0x610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b214634\n      swap1\n      tag_153\n      swap1\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6181:6237  uint256 unlockTime = block.timestamp + TIMELOCK_DURATION */\n      dup5\n        /* \"#utility.yul\":636:661   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n      swap1\n        /* \"#utility.yul\":490:667   */\n      jump\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":6312:6352  OperationQueued(operationId, unlockTime) */\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5871:6360  {... */\n      pop\n      pop\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":1331:1489  {... */\n      pop\n        /* \"Vault_forge/src/Diamond/AdminFacet.sol\":5807:6360  function transferOwnership(address newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1678:1680   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1660:1681   */\n      mstore\n        /* \"#utility.yul\":1717:1719   */\n      0x1f\n        /* \"#utility.yul\":1697:1715   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1690:1720   */\n      mstore\n        /* \"#utility.yul\":1756:1789   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":1736:1754   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1729:1790   */\n      mstore\n        /* \"#utility.yul\":1807:1825   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2118:2312  function getStorage() internal pure returns (VaultState storage ds) {... */\n    tag_60:\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":135:174  keccak256(\"diamond.storage.yield.bull\") */\n      0x5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50\n      swap1\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":2118:2312  function getStorage() internal pure returns (VaultState storage ds) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2028:2060   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2010:2061   */\n      mstore\n        /* \"#utility.yul\":2077:2095   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2070:2104   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":1983:2001   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_160\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_166:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_168)\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2279:2311   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2261:2312   */\n      mstore\n        /* \"#utility.yul\":2234:2252   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      tag_156\n        /* \"#utility.yul\":2115:2318   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_26:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_174:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_175:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:485   */\n    tag_30:\n        /* \"#utility.yul\":364:370   */\n      0x00\n        /* \"#utility.yul\":417:419   */\n      0x20\n        /* \"#utility.yul\":405:414   */\n      dup3\n        /* \"#utility.yul\":396:403   */\n      dup5\n        /* \"#utility.yul\":392:415   */\n      sub\n        /* \"#utility.yul\":388:420   */\n      slt\n        /* \"#utility.yul\":385:437   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":430:431   */\n      0x00\n        /* \"#utility.yul\":423:435   */\n      revert\n        /* \"#utility.yul\":385:437   */\n    tag_177:\n      pop\n        /* \"#utility.yul\":456:479   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":305:485   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:1086   */\n    tag_82:\n        /* \"#utility.yul\":929:938   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":950:960   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":947:1080   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1002:1012   */\n      0x4e487b71\n        /* \"#utility.yul\":997:1000   */\n      0xe0\n        /* \"#utility.yul\":993:1013   */\n      shl\n        /* \"#utility.yul\":990:991   */\n      0x00\n        /* \"#utility.yul\":983:1014   */\n      mstore\n        /* \"#utility.yul\":1037:1041   */\n      0x11\n        /* \"#utility.yul\":1034:1035   */\n      0x04\n        /* \"#utility.yul\":1027:1042   */\n      mstore\n        /* \"#utility.yul\":1065:1069   */\n      0x24\n        /* \"#utility.yul\":1062:1063   */\n      0x00\n        /* \"#utility.yul\":1055:1070   */\n      revert\n        /* \"#utility.yul\":947:1080   */\n    tag_181:\n        /* \"#utility.yul\":864:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1471   */\n    tag_105:\n      shl(0x7c, 0x07472616e736665724f776e65727368697)\n        /* \"#utility.yul\":1321:1353   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1391:1393   */\n      0x60\n        /* \"#utility.yul\":1387:1402   */\n      swap2\n      swap1\n      swap2\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":1383:1436   */\n      and\n        /* \"#utility.yul\":1378:1380   */\n      0x11\n        /* \"#utility.yul\":1369:1381   */\n      dup3\n      add\n        /* \"#utility.yul\":1362:1437   */\n      mstore\n        /* \"#utility.yul\":1462:1464   */\n      0x25\n        /* \"#utility.yul\":1453:1465   */\n      add\n      swap1\n        /* \"#utility.yul\":1091:1471   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f5e56854b590d1b62029c7040303bbc4758535b289728c98991ab766788dcc9364736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5060015f55610d97806100205f395ff3fe608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c80638024e96811610088578063d259ab4211610063578063d259ab421461015b578063d907813c1461016e578063e458d45314610176578063f2fde38b14610189575f5ffd5b80638024e96814610122578063a42dce8014610135578063cbaf2fa714610148575f5ffd5b8063062776bf146100cf57806329175b8c146100d95780632f2a9165146100e157806337214ad0146100e9578063617f3989146100fc578063798b47391461010f575b5f5ffd5b6100d761019c565b005b6100d761026c565b6100d7610318565b6100d76100f7366004610cc1565b6103c4565b6100d761010a366004610cee565b61047b565b6100d761011d366004610cc1565b610521565b6100d7610130366004610cc1565b610647565b6100d7610143366004610cc1565b6106fe565b6100d7610156366004610cee565b6107b5565b6100d7610169366004610cc1565b610870565b6100d7610927565b6100d7610184366004610cc1565b6109c7565b6100d7610197366004610cc1565b610a7e565b6101a4610b78565b5f6101ad610bd4565b60098101549091506001600160a01b031633146101dd5760405163ea8e4eb560e01b815260040160405180910390fd5b80600d01545f0361020157604051634716db3560e01b815260040160405180910390fd5b600d810180545f9091556009820154600483015461022c916001600160a01b03918216911683610bf8565b6040518181527f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f9060200160405180910390a1505061026a60015f55565b565b5f610275610bd4565b80549091506001600160a01b031633146102a25760405163ea8e4eb560e01b815260040160405180910390fd5b5f6102ab610bd4565b60098101805460ff600160a01b808304821615810260ff60a01b1990931692909217928390556040519394507ff3017345aa4f4b1edf82d1945ba8aaf39d9f284595b090260947f03bc53566f19361030c9392909204161515815260200190565b60405180910390a15050565b5f610321610bd4565b80549091506001600160a01b0316331461034e5760405163ea8e4eb560e01b815260040160405180910390fd5b5f610357610bd4565b90506201518081600b015461036c9190610d05565b42101561038c5760405163e10ceb1160e01b815260040160405180910390fd5b42600b82018190556040519081527f33774f379c2063e81904e4e67242b165586dfc117cb89f7baeb19e04ef39a3be9060200161030c565b5f6103cd610bd4565b80549091506001600160a01b031633146103fa5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166104215760405163e6c4247b60e01b815260040160405180910390fd5b5f61042a610bd4565b6008810180546001600160a01b0319166001600160a01b038616908117909155604051919250907f66c8ee4f501025a135e9b302cead3d51cc5bf10c9496086853c1c961e6d91ee8905f90a2505050565b5f610484610bd4565b80549091506001600160a01b031633146104b15760405163ea8e4eb560e01b815260040160405180910390fd5b5f6104ba610bd4565b90505f6104ca6202a30042610d05565b5f858152601c84016020526040908190208290555190915084907f610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b214634906105139084815260200190565b60405180910390a250505050565b5f61052a610bd4565b80549091506001600160a01b031633146105575760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b03821661057e5760405163e6c4247b60e01b815260040160405180910390fd5b5f610587610bd4565b90505f8360405160200161059b9190610d2a565b60408051601f1981840301815291815281516020928301205f818152601c86019093529120549091508015806105d057508042105b156105ee5760405163f800799b60e01b815260040160405180910390fd5b82546001600160a01b0319166001600160a01b0386161783555f828152601c840160205260408082208290555183917f1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f991a25050505050565b5f610650610bd4565b80549091506001600160a01b0316331461067d5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166106a45760405163e6c4247b60e01b815260040160405180910390fd5b5f6106ad610bd4565b6007810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fb72b4dd67ddcbcd61a6ebffbe1cca26d032c45f9d3a6f3c596e95e298717f746905f90a2505050565b5f610707610bd4565b80549091506001600160a01b031633146107345760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b03821661075b5760405163e6c4247b60e01b815260040160405180910390fd5b5f610764610bd4565b6009810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f905f90a2505050565b5f6107be610bd4565b80549091506001600160a01b031633146107eb5760405163ea8e4eb560e01b815260040160405180910390fd5b5f6107f4610bd4565b5f848152601c8201602052604090205490915080158061081357508042105b156108315760405163f800799b60e01b815260040160405180910390fd5b5f848152601c830160205260408082208290555185917f1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f991a250505050565b5f610879610bd4565b80549091506001600160a01b031633146108a65760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166108cd5760405163e6c4247b60e01b815260040160405180910390fd5b5f6108d6610bd4565b6005810180546001600160a01b0319166001600160a01b038616908117909155604051919250907f7a100de36a66305ed9ca3998196d0fb9a1806f6dc498d570393b88ab275ed4df905f90a2505050565b5f610930610bd4565b80549091506001600160a01b0316331461095d5760405163ea8e4eb560e01b815260040160405180910390fd5b5f610966610bd4565b60098101805460ff600160a81b808304821615810260ff60a81b1990931692909217928390556040519394507f19115828b11df7bf8355d95226507e6ed8d980fc277bdb99594291bf2a466dab9361030c9392909204161515815260200190565b5f6109d0610bd4565b80549091506001600160a01b031633146109fd5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b038216610a245760405163e6c4247b60e01b815260040160405180910390fd5b5f610a2d610bd4565b6006810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fd97b0528df15f8ae38af640ff9002c863e7dde420b1b18f78ae48f42f78dc5db905f90a2505050565b5f610a87610bd4565b80549091506001600160a01b03163314610ab45760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b038216610adb5760405163e6c4247b60e01b815260040160405180910390fd5b5f610ae4610bd4565b90505f83604051602001610af89190610d2a565b6040516020818303038152906040528051906020012090505f6202a30042610b209190610d05565b5f838152601c85016020526040908190208290555190915082907f610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b21463490610b699084815260200190565b60405180910390a25050505050565b60025f5403610bce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60025f55565b7f5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d5090565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c4a908490610c4f565b505050565b5f5f60205f8451602086015f885af180610c6e576040513d5f823e3d81fd5b50505f513d91508115610c85578060011415610c92565b6001600160a01b0384163b155b15610cbb57604051635274afe760e01b81526001600160a01b0385166004820152602401610bc5565b50505050565b5f60208284031215610cd1575f5ffd5b81356001600160a01b0381168114610ce7575f5ffd5b9392505050565b5f60208284031215610cfe575f5ffd5b5035919050565b80820180821115610d2457634e487b7160e01b5f52601160045260245ffd5b92915050565b7007472616e736665724f776e65727368697607c1b815260609190911b6bffffffffffffffffffffffff191660118201526025019056fea2646970667358221220f5e56854b590d1b62029c7040303bbc4758535b289728c98991ab766788dcc9364736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 SSTORE PUSH2 0xD97 DUP1 PUSH2 0x20 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8024E968 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD259AB42 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD259AB42 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xD907813C EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE458D453 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8024E968 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xCBAF2FA7 EQ PUSH2 0x148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x62776BF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x29175B8C EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x2F2A9165 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x37214AD0 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x617F3989 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x798B4739 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x927 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0xB78 JUMP JUMPDEST PUSH0 PUSH2 0x1AD PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD ADD SLOAD PUSH0 SUB PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4716DB35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x22C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x26A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x275 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2AB PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP PUSH32 0xF3017345AA4F4B1EDF82D1945BA8AAF39D9F284595B090260947F03BC53566F1 SWAP4 PUSH2 0x30C SWAP4 SWAP3 SWAP1 SWAP3 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x321 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x357 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP2 PUSH1 0xB ADD SLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE10CEB11 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xB DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x33774F379C2063E81904E4E67242B165586DFC117CB89F7BAEB19E04EF39A3BE SWAP1 PUSH1 0x20 ADD PUSH2 0x30C JUMP JUMPDEST PUSH0 PUSH2 0x3CD PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0x66C8EE4F501025A135E9B302CEAD3D51CC5BF10C9496086853C1C961E6D91EE8 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x484 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4CA PUSH3 0x2A300 TIMESTAMP PUSH2 0xD05 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x1C DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP DUP5 SWAP1 PUSH32 0x610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634 SWAP1 PUSH2 0x513 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x52A PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x587 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1C DUP7 ADD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x5D0 JUMPI POP DUP1 TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xF800799B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP4 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1C DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 SWAP2 PUSH32 0x1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9 SWAP2 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x650 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6AD PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xB72B4DD67DDCBCD61A6EBFFBE1CCA26D032C45F9D3A6F3C596E95E298717F746 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x707 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x764 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7BE PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7F4 PUSH2 0xBD4 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x1C DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x813 JUMPI POP DUP1 TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF800799B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x1C DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP6 SWAP2 PUSH32 0x1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9 SWAP2 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x879 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8D6 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0x7A100DE36A66305ED9CA3998196D0FB9A1806F6DC498D570393B88AB275ED4DF SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x966 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP PUSH32 0x19115828B11DF7BF8355D95226507E6ED8D980FC277BDB99594291BF2A466DAB SWAP4 PUSH2 0x30C SWAP4 SWAP3 SWAP1 SWAP3 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9D0 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA2D PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xD97B0528DF15F8AE38AF640FF9002C863E7DDE420B1B18F78AE48F42F78DC5DB SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA87 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAE4 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH3 0x2A300 TIMESTAMP PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1C DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP DUP3 SWAP1 PUSH32 0x610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634 SWAP1 PUSH2 0xB69 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH32 0x5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC4A SWAP1 DUP5 SWAP1 PUSH2 0xC4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xC85 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD24 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH17 0x7472616E736665724F776E65727368697 PUSH1 0x7C SHL DUP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x11 DUP3 ADD MSTORE PUSH1 0x25 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 JUMPF 0x6854 0xB5 SWAP1 DATALOADN 0xB620 0x29 0xC7 DIV SUB SUB 0xBB 0xC4 PUSH22 0x8535B289728C98991AB766788DCC9364736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "389:6708:7:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:3;1821:7;:22;389:6708:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_654": {
									"entryPoint": 3151,
									"id": 654,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_134": {
									"entryPoint": 2936,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collectAccumulatedFees_1103": {
									"entryPoint": 412,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@completeOwnershipTransfer_1353": {
									"entryPoint": 1313,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@executeOperation_1224": {
									"entryPoint": 1973,
									"id": 1224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStorage_1481": {
									"entryPoint": 3028,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@queueOperation_1178": {
									"entryPoint": 1147,
									"id": 1178,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@safeTransfer_277": {
									"entryPoint": 3064,
									"id": 277,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFeeCollector_990": {
									"entryPoint": 1790,
									"id": 990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setLidoWithdrawalAddress_842": {
									"entryPoint": 2503,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReceiverContract_916": {
									"entryPoint": 964,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSwapContract_953": {
									"entryPoint": 2160,
									"id": 953,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setWstETHAddress_879": {
									"entryPoint": 1607,
									"id": 879,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toggleDeposits_1046": {
									"entryPoint": 2343,
									"id": 1046,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toggleEmergencyShutdown_1018": {
									"entryPoint": 620,
									"id": 1018,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1281": {
									"entryPoint": 2686,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@triggerDailyUpdate_1141": {
									"entryPoint": 792,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2320:9",
										"nodeType": "YulBlock",
										"src": "0:2320:9",
										"statements": [
											{
												"nativeSrc": "6:3:9",
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:216:9",
													"nodeType": "YulBlock",
													"src": "84:216:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:9",
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:9",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:9",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nativeSrc": "132:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nativeSrc": "132:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nativeSrc": "101:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:9",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nativeSrc": "97:32:9",
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nativeSrc": "94:52:9",
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nativeSrc": "155:36:9",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:9"
																},
																"nativeSrc": "168:23:9",
																"nodeType": "YulFunctionCall",
																"src": "168:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:9",
																	"nodeType": "YulTypedName",
																	"src": "159:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:9",
																"nodeType": "YulBlock",
																"src": "254:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:9",
																					"nodeType": "YulLiteral",
																					"src": "263:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:9",
																					"nodeType": "YulLiteral",
																					"src": "266:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:9"
																			},
																			"nativeSrc": "256:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:9"
																		},
																		"nativeSrc": "256:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "239:3:9",
																										"nodeType": "YulLiteral",
																										"src": "239:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "244:1:9",
																										"nodeType": "YulLiteral",
																										"src": "244:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "235:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:9"
																								},
																								"nativeSrc": "235:11:9",
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:9"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "248:1:9",
																								"nodeType": "YulLiteral",
																								"src": "248:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "231:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:9"
																						},
																						"nativeSrc": "231:19:9",
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:9"
																				},
																				"nativeSrc": "220:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:9"
																		},
																		"nativeSrc": "210:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:9"
																},
																"nativeSrc": "203:50:9",
																"nodeType": "YulFunctionCall",
																"src": "203:50:9"
															},
															"nativeSrc": "200:70:9",
															"nodeType": "YulIf",
															"src": "200:70:9"
														},
														{
															"nativeSrc": "279:15:9",
															"nodeType": "YulAssignment",
															"src": "279:15:9",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:9",
																"nodeType": "YulIdentifier",
																"src": "289:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:286:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:9",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:9",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:9",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:286:9"
											},
											{
												"body": {
													"nativeSrc": "375:110:9",
													"nodeType": "YulBlock",
													"src": "375:110:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "421:16:9",
																"nodeType": "YulBlock",
																"src": "421:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:9",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "433:1:9",
																					"nodeType": "YulLiteral",
																					"src": "433:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "423:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nativeSrc": "423:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "423:12:9"
																		},
																		"nativeSrc": "423:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "396:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "396:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "405:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "405:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "392:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:9"
																		},
																		"nativeSrc": "392:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "392:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:2:9",
																		"nodeType": "YulLiteral",
																		"src": "417:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "388:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "388:3:9"
																},
																"nativeSrc": "388:32:9",
																"nodeType": "YulFunctionCall",
																"src": "388:32:9"
															},
															"nativeSrc": "385:52:9",
															"nodeType": "YulIf",
															"src": "385:52:9"
														},
														{
															"nativeSrc": "446:33:9",
															"nodeType": "YulAssignment",
															"src": "446:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "469:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "456:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:9"
																},
																"nativeSrc": "456:23:9",
																"nodeType": "YulFunctionCall",
																"src": "456:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "446:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "305:180:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "341:9:9",
														"nodeType": "YulTypedName",
														"src": "341:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "352:7:9",
														"nodeType": "YulTypedName",
														"src": "352:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "364:6:9",
														"nodeType": "YulTypedName",
														"src": "364:6:9",
														"type": ""
													}
												],
												"src": "305:180:9"
											},
											{
												"body": {
													"nativeSrc": "591:76:9",
													"nodeType": "YulBlock",
													"src": "591:76:9",
													"statements": [
														{
															"nativeSrc": "601:26:9",
															"nodeType": "YulAssignment",
															"src": "601:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "613:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "624:2:9",
																		"nodeType": "YulLiteral",
																		"src": "624:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "609:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:9"
																},
																"nativeSrc": "609:18:9",
																"nodeType": "YulFunctionCall",
																"src": "609:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "601:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "601:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "643:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:9"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "654:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "636:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:9"
																},
																"nativeSrc": "636:25:9",
																"nodeType": "YulFunctionCall",
																"src": "636:25:9"
															},
															"nativeSrc": "636:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "636:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "490:177:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "560:9:9",
														"nodeType": "YulTypedName",
														"src": "560:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "571:6:9",
														"nodeType": "YulTypedName",
														"src": "571:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "582:4:9",
														"nodeType": "YulTypedName",
														"src": "582:4:9",
														"type": ""
													}
												],
												"src": "490:177:9"
											},
											{
												"body": {
													"nativeSrc": "767:92:9",
													"nodeType": "YulBlock",
													"src": "767:92:9",
													"statements": [
														{
															"nativeSrc": "777:26:9",
															"nodeType": "YulAssignment",
															"src": "777:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "789:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "789:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "800:2:9",
																		"nodeType": "YulLiteral",
																		"src": "800:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "785:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:9"
																},
																"nativeSrc": "785:18:9",
																"nodeType": "YulFunctionCall",
																"src": "785:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "777:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "777:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "819:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "819:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "844:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "844:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "837:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "837:6:9"
																				},
																				"nativeSrc": "837:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "837:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "830:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "830:6:9"
																		},
																		"nativeSrc": "830:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "830:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "812:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "812:6:9"
																},
																"nativeSrc": "812:41:9",
																"nodeType": "YulFunctionCall",
																"src": "812:41:9"
															},
															"nativeSrc": "812:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "812:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "672:187:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "736:9:9",
														"nodeType": "YulTypedName",
														"src": "736:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "747:6:9",
														"nodeType": "YulTypedName",
														"src": "747:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "758:4:9",
														"nodeType": "YulTypedName",
														"src": "758:4:9",
														"type": ""
													}
												],
												"src": "672:187:9"
											},
											{
												"body": {
													"nativeSrc": "912:174:9",
													"nodeType": "YulBlock",
													"src": "912:174:9",
													"statements": [
														{
															"nativeSrc": "922:16:9",
															"nodeType": "YulAssignment",
															"src": "922:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "933:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "933:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "936:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "936:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "929:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:9"
																},
																"nativeSrc": "929:9:9",
																"nodeType": "YulFunctionCall",
																"src": "929:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "922:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "922:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "969:111:9",
																"nodeType": "YulBlock",
																"src": "969:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "990:1:9",
																					"nodeType": "YulLiteral",
																					"src": "990:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "997:3:9",
																							"nodeType": "YulLiteral",
																							"src": "997:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1002:10:9",
																							"nodeType": "YulLiteral",
																							"src": "1002:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "993:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "993:3:9"
																					},
																					"nativeSrc": "993:20:9",
																					"nodeType": "YulFunctionCall",
																					"src": "993:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "983:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "983:6:9"
																			},
																			"nativeSrc": "983:31:9",
																			"nodeType": "YulFunctionCall",
																			"src": "983:31:9"
																		},
																		"nativeSrc": "983:31:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "983:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1034:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1034:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1037:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1037:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1027:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1027:6:9"
																			},
																			"nativeSrc": "1027:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1027:15:9"
																		},
																		"nativeSrc": "1027:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1027:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1062:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1062:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1065:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1065:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1055:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1055:6:9"
																			},
																			"nativeSrc": "1055:15:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1055:15:9"
																		},
																		"nativeSrc": "1055:15:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1055:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "953:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "953:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "956:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "956:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "950:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "950:2:9"
																},
																"nativeSrc": "950:10:9",
																"nodeType": "YulFunctionCall",
																"src": "950:10:9"
															},
															"nativeSrc": "947:133:9",
															"nodeType": "YulIf",
															"src": "947:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "864:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "895:1:9",
														"nodeType": "YulTypedName",
														"src": "895:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "898:1:9",
														"nodeType": "YulTypedName",
														"src": "898:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "904:3:9",
														"nodeType": "YulTypedName",
														"src": "904:3:9",
														"type": ""
													}
												],
												"src": "864:222:9"
											},
											{
												"body": {
													"nativeSrc": "1311:160:9",
													"nodeType": "YulBlock",
													"src": "1311:160:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1328:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1328:3:9"
																	},
																	{
																		"hexValue": "7472616e736665724f776e657273686970",
																		"kind": "string",
																		"nativeSrc": "1333:19:9",
																		"nodeType": "YulLiteral",
																		"src": "1333:19:9",
																		"type": "",
																		"value": "transferOwnership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1321:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1321:6:9"
																},
																"nativeSrc": "1321:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1321:32:9"
															},
															"nativeSrc": "1321:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "1321:32:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1373:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1373:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1378:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1378:2:9",
																				"type": "",
																				"value": "17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1369:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:9"
																		},
																		"nativeSrc": "1369:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1369:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1391:2:9",
																						"nodeType": "YulLiteral",
																						"src": "1391:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "1395:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1395:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1387:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1387:3:9"
																				},
																				"nativeSrc": "1387:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1387:15:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1408:26:9",
																						"nodeType": "YulLiteral",
																						"src": "1408:26:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1404:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1404:3:9"
																				},
																				"nativeSrc": "1404:31:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1404:31:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1383:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:9"
																		},
																		"nativeSrc": "1383:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1383:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:9"
																},
																"nativeSrc": "1362:75:9",
																"nodeType": "YulFunctionCall",
																"src": "1362:75:9"
															},
															"nativeSrc": "1362:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "1362:75:9"
														},
														{
															"nativeSrc": "1446:19:9",
															"nodeType": "YulAssignment",
															"src": "1446:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1457:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1462:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1462:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1453:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:9"
																},
																"nativeSrc": "1453:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1453:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1446:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1091:380:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1287:3:9",
														"nodeType": "YulTypedName",
														"src": "1287:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1292:6:9",
														"nodeType": "YulTypedName",
														"src": "1292:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1303:3:9",
														"nodeType": "YulTypedName",
														"src": "1303:3:9",
														"type": ""
													}
												],
												"src": "1091:380:9"
											},
											{
												"body": {
													"nativeSrc": "1650:181:9",
													"nodeType": "YulBlock",
													"src": "1650:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1667:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1667:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1678:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1660:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:9"
																},
																"nativeSrc": "1660:21:9",
																"nodeType": "YulFunctionCall",
																"src": "1660:21:9"
															},
															"nativeSrc": "1660:21:9",
															"nodeType": "YulExpressionStatement",
															"src": "1660:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1701:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1701:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1712:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1712:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1697:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:9"
																		},
																		"nativeSrc": "1697:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1697:18:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1717:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1717:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1690:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:9"
																},
																"nativeSrc": "1690:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1690:30:9"
															},
															"nativeSrc": "1690:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "1690:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1740:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1740:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1751:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1751:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1736:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1736:3:9"
																		},
																		"nativeSrc": "1736:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1736:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "1756:33:9",
																		"nodeType": "YulLiteral",
																		"src": "1756:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:9"
																},
																"nativeSrc": "1729:61:9",
																"nodeType": "YulFunctionCall",
																"src": "1729:61:9"
															},
															"nativeSrc": "1729:61:9",
															"nodeType": "YulExpressionStatement",
															"src": "1729:61:9"
														},
														{
															"nativeSrc": "1799:26:9",
															"nodeType": "YulAssignment",
															"src": "1799:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1811:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1811:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1822:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1807:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1807:3:9"
																},
																"nativeSrc": "1807:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1807:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1799:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1799:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1476:355:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1627:9:9",
														"nodeType": "YulTypedName",
														"src": "1627:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1641:4:9",
														"nodeType": "YulTypedName",
														"src": "1641:4:9",
														"type": ""
													}
												],
												"src": "1476:355:9"
											},
											{
												"body": {
													"nativeSrc": "1965:145:9",
													"nodeType": "YulBlock",
													"src": "1965:145:9",
													"statements": [
														{
															"nativeSrc": "1975:26:9",
															"nodeType": "YulAssignment",
															"src": "1975:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1987:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1987:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1998:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1998:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nativeSrc": "1983:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1983:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1975:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1975:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2017:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2017:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2032:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2048:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2048:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2053:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2053:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2044:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2044:3:9"
																						},
																						"nativeSrc": "2044:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2044:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2057:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2057:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2040:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:9"
																				},
																				"nativeSrc": "2040:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2040:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2028:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:9"
																		},
																		"nativeSrc": "2028:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2010:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:9"
																},
																"nativeSrc": "2010:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2010:51:9"
															},
															"nativeSrc": "2010:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2010:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2081:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2081:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2092:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2092:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2077:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2077:3:9"
																		},
																		"nativeSrc": "2077:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2077:18:9"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2097:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2097:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2070:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:9"
																},
																"nativeSrc": "2070:34:9",
																"nodeType": "YulFunctionCall",
																"src": "2070:34:9"
															},
															"nativeSrc": "2070:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "2070:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1836:274:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1926:9:9",
														"nodeType": "YulTypedName",
														"src": "1926:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1937:6:9",
														"nodeType": "YulTypedName",
														"src": "1937:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1945:6:9",
														"nodeType": "YulTypedName",
														"src": "1945:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1956:4:9",
														"nodeType": "YulTypedName",
														"src": "1956:4:9",
														"type": ""
													}
												],
												"src": "1836:274:9"
											},
											{
												"body": {
													"nativeSrc": "2216:102:9",
													"nodeType": "YulBlock",
													"src": "2216:102:9",
													"statements": [
														{
															"nativeSrc": "2226:26:9",
															"nodeType": "YulAssignment",
															"src": "2226:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:9"
																},
																"nativeSrc": "2234:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2268:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2268:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2283:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2283:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2299:3:9",
																								"nodeType": "YulLiteral",
																								"src": "2299:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2304:1:9",
																								"nodeType": "YulLiteral",
																								"src": "2304:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2295:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2295:3:9"
																						},
																						"nativeSrc": "2295:11:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2295:11:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2308:1:9",
																						"nodeType": "YulLiteral",
																						"src": "2308:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2291:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2291:3:9"
																				},
																				"nativeSrc": "2291:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2291:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2279:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2279:3:9"
																		},
																		"nativeSrc": "2279:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2279:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2261:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2261:6:9"
																},
																"nativeSrc": "2261:51:9",
																"nodeType": "YulFunctionCall",
																"src": "2261:51:9"
															},
															"nativeSrc": "2261:51:9",
															"nodeType": "YulExpressionStatement",
															"src": "2261:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2115:203:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2185:9:9",
														"nodeType": "YulTypedName",
														"src": "2185:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2196:6:9",
														"nodeType": "YulTypedName",
														"src": "2196:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2207:4:9",
														"nodeType": "YulTypedName",
														"src": "2207:4:9",
														"type": ""
													}
												],
												"src": "2115:203:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"transferOwnership\")\n        mstore(add(pos, 17), and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 37)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100cb575f3560e01c80638024e96811610088578063d259ab4211610063578063d259ab421461015b578063d907813c1461016e578063e458d45314610176578063f2fde38b14610189575f5ffd5b80638024e96814610122578063a42dce8014610135578063cbaf2fa714610148575f5ffd5b8063062776bf146100cf57806329175b8c146100d95780632f2a9165146100e157806337214ad0146100e9578063617f3989146100fc578063798b47391461010f575b5f5ffd5b6100d761019c565b005b6100d761026c565b6100d7610318565b6100d76100f7366004610cc1565b6103c4565b6100d761010a366004610cee565b61047b565b6100d761011d366004610cc1565b610521565b6100d7610130366004610cc1565b610647565b6100d7610143366004610cc1565b6106fe565b6100d7610156366004610cee565b6107b5565b6100d7610169366004610cc1565b610870565b6100d7610927565b6100d7610184366004610cc1565b6109c7565b6100d7610197366004610cc1565b610a7e565b6101a4610b78565b5f6101ad610bd4565b60098101549091506001600160a01b031633146101dd5760405163ea8e4eb560e01b815260040160405180910390fd5b80600d01545f0361020157604051634716db3560e01b815260040160405180910390fd5b600d810180545f9091556009820154600483015461022c916001600160a01b03918216911683610bf8565b6040518181527f860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f9060200160405180910390a1505061026a60015f55565b565b5f610275610bd4565b80549091506001600160a01b031633146102a25760405163ea8e4eb560e01b815260040160405180910390fd5b5f6102ab610bd4565b60098101805460ff600160a01b808304821615810260ff60a01b1990931692909217928390556040519394507ff3017345aa4f4b1edf82d1945ba8aaf39d9f284595b090260947f03bc53566f19361030c9392909204161515815260200190565b60405180910390a15050565b5f610321610bd4565b80549091506001600160a01b0316331461034e5760405163ea8e4eb560e01b815260040160405180910390fd5b5f610357610bd4565b90506201518081600b015461036c9190610d05565b42101561038c5760405163e10ceb1160e01b815260040160405180910390fd5b42600b82018190556040519081527f33774f379c2063e81904e4e67242b165586dfc117cb89f7baeb19e04ef39a3be9060200161030c565b5f6103cd610bd4565b80549091506001600160a01b031633146103fa5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166104215760405163e6c4247b60e01b815260040160405180910390fd5b5f61042a610bd4565b6008810180546001600160a01b0319166001600160a01b038616908117909155604051919250907f66c8ee4f501025a135e9b302cead3d51cc5bf10c9496086853c1c961e6d91ee8905f90a2505050565b5f610484610bd4565b80549091506001600160a01b031633146104b15760405163ea8e4eb560e01b815260040160405180910390fd5b5f6104ba610bd4565b90505f6104ca6202a30042610d05565b5f858152601c84016020526040908190208290555190915084907f610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b214634906105139084815260200190565b60405180910390a250505050565b5f61052a610bd4565b80549091506001600160a01b031633146105575760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b03821661057e5760405163e6c4247b60e01b815260040160405180910390fd5b5f610587610bd4565b90505f8360405160200161059b9190610d2a565b60408051601f1981840301815291815281516020928301205f818152601c86019093529120549091508015806105d057508042105b156105ee5760405163f800799b60e01b815260040160405180910390fd5b82546001600160a01b0319166001600160a01b0386161783555f828152601c840160205260408082208290555183917f1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f991a25050505050565b5f610650610bd4565b80549091506001600160a01b0316331461067d5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166106a45760405163e6c4247b60e01b815260040160405180910390fd5b5f6106ad610bd4565b6007810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fb72b4dd67ddcbcd61a6ebffbe1cca26d032c45f9d3a6f3c596e95e298717f746905f90a2505050565b5f610707610bd4565b80549091506001600160a01b031633146107345760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b03821661075b5760405163e6c4247b60e01b815260040160405180910390fd5b5f610764610bd4565b6009810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f905f90a2505050565b5f6107be610bd4565b80549091506001600160a01b031633146107eb5760405163ea8e4eb560e01b815260040160405180910390fd5b5f6107f4610bd4565b5f848152601c8201602052604090205490915080158061081357508042105b156108315760405163f800799b60e01b815260040160405180910390fd5b5f848152601c830160205260408082208290555185917f1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f991a250505050565b5f610879610bd4565b80549091506001600160a01b031633146108a65760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b0382166108cd5760405163e6c4247b60e01b815260040160405180910390fd5b5f6108d6610bd4565b6005810180546001600160a01b0319166001600160a01b038616908117909155604051919250907f7a100de36a66305ed9ca3998196d0fb9a1806f6dc498d570393b88ab275ed4df905f90a2505050565b5f610930610bd4565b80549091506001600160a01b0316331461095d5760405163ea8e4eb560e01b815260040160405180910390fd5b5f610966610bd4565b60098101805460ff600160a81b808304821615810260ff60a81b1990931692909217928390556040519394507f19115828b11df7bf8355d95226507e6ed8d980fc277bdb99594291bf2a466dab9361030c9392909204161515815260200190565b5f6109d0610bd4565b80549091506001600160a01b031633146109fd5760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b038216610a245760405163e6c4247b60e01b815260040160405180910390fd5b5f610a2d610bd4565b6006810180546001600160a01b0319166001600160a01b038616908117909155604051919250907fd97b0528df15f8ae38af640ff9002c863e7dde420b1b18f78ae48f42f78dc5db905f90a2505050565b5f610a87610bd4565b80549091506001600160a01b03163314610ab45760405163ea8e4eb560e01b815260040160405180910390fd5b6001600160a01b038216610adb5760405163e6c4247b60e01b815260040160405180910390fd5b5f610ae4610bd4565b90505f83604051602001610af89190610d2a565b6040516020818303038152906040528051906020012090505f6202a30042610b209190610d05565b5f838152601c85016020526040908190208290555190915082907f610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b21463490610b699084815260200190565b60405180910390a25050505050565b60025f5403610bce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60025f55565b7f5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d5090565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610c4a908490610c4f565b505050565b5f5f60205f8451602086015f885af180610c6e576040513d5f823e3d81fd5b50505f513d91508115610c85578060011415610c92565b6001600160a01b0384163b155b15610cbb57604051635274afe760e01b81526001600160a01b0385166004820152602401610bc5565b50505050565b5f60208284031215610cd1575f5ffd5b81356001600160a01b0381168114610ce7575f5ffd5b9392505050565b5f60208284031215610cfe575f5ffd5b5035919050565b80820180821115610d2457634e487b7160e01b5f52601160045260245ffd5b92915050565b7007472616e736665724f776e65727368697607c1b815260609190911b6bffffffffffffffffffffffff191660118201526025019056fea2646970667358221220f5e56854b590d1b62029c7040303bbc4758535b289728c98991ab766788dcc9364736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8024E968 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xD259AB42 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xD259AB42 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xD907813C EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0xE458D453 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x8024E968 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xCBAF2FA7 EQ PUSH2 0x148 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x62776BF EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x29175B8C EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x2F2A9165 EQ PUSH2 0xE1 JUMPI DUP1 PUSH4 0x37214AD0 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x617F3989 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x798B4739 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7 PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD7 PUSH2 0x26C JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x318 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x47B JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x647 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x927 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0x9C7 JUMP JUMPDEST PUSH2 0xD7 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC1 JUMP JUMPDEST PUSH2 0xA7E JUMP JUMPDEST PUSH2 0x1A4 PUSH2 0xB78 JUMP JUMPDEST PUSH0 PUSH2 0x1AD PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD ADD SLOAD PUSH0 SUB PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4716DB35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD DUP2 ADD DUP1 SLOAD PUSH0 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH2 0x22C SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH2 0x26A PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x275 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x2AB PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP PUSH32 0xF3017345AA4F4B1EDF82D1945BA8AAF39D9F284595B090260947F03BC53566F1 SWAP4 PUSH2 0x30C SWAP4 SWAP3 SWAP1 SWAP3 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x321 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x357 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH3 0x15180 DUP2 PUSH1 0xB ADD SLOAD PUSH2 0x36C SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE10CEB11 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xB DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x33774F379C2063E81904E4E67242B165586DFC117CB89F7BAEB19E04EF39A3BE SWAP1 PUSH1 0x20 ADD PUSH2 0x30C JUMP JUMPDEST PUSH0 PUSH2 0x3CD PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x42A PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x8 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0x66C8EE4F501025A135E9B302CEAD3D51CC5BF10C9496086853C1C961E6D91EE8 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x484 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BA PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4CA PUSH3 0x2A300 TIMESTAMP PUSH2 0xD05 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x1C DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP DUP5 SWAP1 PUSH32 0x610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634 SWAP1 PUSH2 0x513 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x52A PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x587 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59B SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1C DUP7 ADD SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x5D0 JUMPI POP DUP1 TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH4 0xF800799B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR DUP4 SSTORE PUSH0 DUP3 DUP2 MSTORE PUSH1 0x1C DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP4 SWAP2 PUSH32 0x1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9 SWAP2 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x650 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6AD PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xB72B4DD67DDCBCD61A6EBFFBE1CCA26D032C45F9D3A6F3C596E95E298717F746 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x707 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x764 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7BE PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7F4 PUSH2 0xBD4 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x1C DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO DUP1 PUSH2 0x813 JUMPI POP DUP1 TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x831 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF800799B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x1C DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP3 SWAP1 SSTORE MLOAD DUP6 SWAP2 PUSH32 0x1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9 SWAP2 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x879 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8CD JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x8D6 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0x7A100DE36A66305ED9CA3998196D0FB9A1806F6DC498D570393B88AB275ED4DF SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x930 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x966 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x9 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 PUSH1 0xA8 SHL DUP1 DUP4 DIV DUP3 AND ISZERO DUP2 MUL PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP5 POP PUSH32 0x19115828B11DF7BF8355D95226507E6ED8D980FC277BDB99594291BF2A466DAB SWAP4 PUSH2 0x30C SWAP4 SWAP3 SWAP1 SWAP3 DIV AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9D0 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xA2D PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH32 0xD97B0528DF15F8AE38AF640FF9002C863E7DDE420B1B18F78AE48F42F78DC5DB SWAP1 PUSH0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA87 PUSH2 0xBD4 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEA8E4EB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAE4 PUSH2 0xBD4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAF8 SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH3 0x2A300 TIMESTAMP PUSH2 0xB20 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x1C DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD SWAP1 SWAP2 POP DUP3 SWAP1 PUSH32 0x610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634 SWAP1 PUSH2 0xB69 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH32 0x5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50 SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xC4A SWAP1 DUP5 SWAP1 PUSH2 0xC4F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC6E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0xC85 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0xCBB JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xBC5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCE7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xD24 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH17 0x7472616E736665724F776E65727368697 PUSH1 0x7C SHL DUP2 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x11 DUP3 ADD MSTORE PUSH1 0x25 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 JUMPF 0x6854 0xB5 SWAP1 DATALOADN 0xB620 0x29 0xC7 DIV SUB SUB 0xBB 0xC4 PUSH22 0x8535B289728C98991AB766788DCC9364736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "389:6708:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3721:527;;;:::i;:::-;;3187:258;;;:::i;4280:565::-;;;:::i;2197:311::-;;;;;;:::i;:::-;;:::i;4900:333::-;;;;;;:::i;:::-;;:::i;6368:726::-;;;;;;:::i;:::-;;:::i;1895:294::-;;;;;;:::i;:::-;;:::i;2839:315::-;;;;;;:::i;:::-;;:::i;5241:531::-;;;;;;:::i;:::-;;:::i;2516:315::-;;;;;;:::i;:::-;;:::i;3453:237::-;;;:::i;1521:366::-;;;;;;:::i;:::-;;:::i;5807:553::-;;;;;;:::i;:::-;;:::i;3721:527::-;2261:21:3;:19;:21::i;:::-;3788:36:7::1;3827:27;:25;:27::i;:::-;3885:15;::::0;::::1;::::0;;;-1:-1:-1;;;;;;3885:15:7::1;3871:10;:29;3867:57;;3909:15;;-1:-1:-1::0;;;3909:15:7::1;;;;;;;;;;;3867:57;3939:2;:18;;;3961:1;3939:23:::0;3935:46:::1;;3971:10;;-1:-1:-1::0;;;3971:10:7::1;;;;;;;;;;;3935:46;4018:18;::::0;::::1;::::0;;3994:21:::1;4047:22:::0;;;4140:15:::1;::::0;::::1;::::0;4089:22:::1;::::0;::::1;::::0;4082:112:::1;::::0;-1:-1:-1;;;;;4089:22:7;;::::1;::::0;4140:15:::1;4018:18:::0;4082:43:::1;:112::i;:::-;4212:28;::::0;636:25:9;;;4212:28:7::1;::::0;624:2:9;609:18;4212:28:7::1;;;;;;;3777:471;;2303:20:3::0;1716:1;2809:7;:22;2629:209;2303:20;3721:527:7:o;3187:258::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;3252:36:::1;3291:27;:25;:27::i;:::-;3353:20;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;3353:20:7;;::::1;::::0;::::1;3352:21;3329:44:::0;::::1;-1:-1:-1::0;;;;3329:44:7;;::::1;::::0;;;::::1;::::0;;;;3391:46:::1;::::0;3252:66;;-1:-1:-1;3391:46:7::1;::::0;::::1;::::0;3416:20;;;::::1;;837:14:9::0;830:22;812:41;;800:2;785:18;;672:187;3391:46:7::1;;;;;;;;3241:204;1331:158:::0;3187:258::o;4280:565::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;4340:36:::1;4379:27;:25;:27::i;:::-;4340:66;;589:6;4441:2;:18;;;:36;;;;:::i;:::-;4423:15;:54;4419:97;;;4499:17;;-1:-1:-1::0;;;4499:17:7::1;;;;;;;;;;;4419:97;4767:15;4746:18;::::0;::::1;:36:::0;;;4800:37:::1;::::0;636:25:9;;;4800:37:7::1;::::0;624:2:9;609:18;4800:37:7::1;490:177:9::0;2197:311:7;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;2279:23:7;::::1;2275:52;;2311:16;;-1:-1:-1::0;;;2311:16:7::1;;;;;;;;;;;2275:52;2340:36;2379:27;:25;:27::i;:::-;2417:19;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;2417:31:7::1;-1:-1:-1::0;;;;;2417:31:7;::::1;::::0;;::::1;::::0;;;2466:34:::1;::::0;2417:19;;-1:-1:-1;2417:31:7;2466:34:::1;::::0;-1:-1:-1;;2466:34:7::1;2264:244;1331:158:::0;2197:311;:::o;4900:333::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;4975:36:::1;5014:27;:25;:27::i;:::-;4975:66:::0;-1:-1:-1;5052:18:7::1;5073:35;533:6;5073:15;:35;:::i;:::-;5121:33;::::0;;;:20:::1;::::0;::::1;:33;::::0;;;;;;:46;;;5185:40;5052:56;;-1:-1:-1;5142:11:7;;5185:40:::1;::::0;::::1;::::0;5052:56;636:25:9;;624:2;609:18;;490:177;5185:40:7::1;;;;;;;;4964:269;;1331:158:::0;4900:333;:::o;6368:726::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;6455:22:7;::::1;6451:51;;6486:16;;-1:-1:-1::0;;;6486:16:7::1;;;;;;;;;;;6451:51;6515:36;6554:27;:25;:27::i;:::-;6515:66;;6638:19;6722:8;6684:47;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;6684:47:7;;::::1;::::0;;;;;;6660:82;;6684:47:::1;6660:82:::0;;::::1;::::0;6753:18:::1;6774:33:::0;;;:20:::1;::::0;::::1;:33:::0;;;;;;6660:82;;-1:-1:-1;6824:15:7;;;:47:::1;;;6861:10;6843:15;:28;6824:47;6820:92;;;6893:19;;-1:-1:-1::0;;;6893:19:7::1;;;;;;;;;;;6820:92;6968:19:::0;;-1:-1:-1;;;;;;6968:19:7::1;-1:-1:-1::0;;;;;6968:19:7;::::1;;::::0;;-1:-1:-1;7005:33:7;;;:20:::1;::::0;::::1;:33;::::0;;;;;6998:40;;;7056:30;7005:33;;7056:30:::1;::::0;::::1;6440:654;;;1331:158:::0;6368:726;:::o;1895:294::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;1972:21:7;::::1;1968:50;;2002:16;;-1:-1:-1::0;;;2002:16:7::1;;;;;;;;;;;1968:50;2031:36;2070:27;:25;:27::i;:::-;2108:16;::::0;::::1;:26:::0;;-1:-1:-1;;;;;;2108:26:7::1;-1:-1:-1::0;;;;;2108:26:7;::::1;::::0;;::::1;::::0;;;2152:29:::1;::::0;2108:16;;-1:-1:-1;2108:26:7;2152:29:::1;::::0;-1:-1:-1;;2152:29:7::1;1957:232;1331:158:::0;1895:294;:::o;2839:315::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;2921:27:7;::::1;2917:56;;2957:16;;-1:-1:-1::0;;;2957:16:7::1;;;;;;;;;;;2917:56;2986:36;3025:27;:25;:27::i;:::-;3063:15;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;3063:31:7::1;-1:-1:-1::0;;;;;3063:31:7;::::1;::::0;;::::1;::::0;;;3112:34:::1;::::0;3063:15;;-1:-1:-1;3063:31:7;3112:34:::1;::::0;-1:-1:-1;;3112:34:7::1;2906:248;1331:158:::0;2839:315;:::o;5241:531::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;5318:36:::1;5357:27;:25;:27::i;:::-;5395:18;5416:33:::0;;;:20:::1;::::0;::::1;:33;::::0;;;;;5318:66;;-1:-1:-1;5466:15:7;;;:47:::1;;;5503:10;5485:15;:28;5466:47;5462:92;;;5535:19;;-1:-1:-1::0;;;5535:19:7::1;;;;;;;;;;;5462:92;5614:33;::::0;;;:20:::1;::::0;::::1;:33;::::0;;;;;5607:40;;;5665:30;5635:11;;5665:30:::1;::::0;::::1;5307:465;;1331:158:::0;5241:531;:::o;2516:315::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;2598:27:7;::::1;2594:56;;2634:16;;-1:-1:-1::0;;;2634:16:7::1;;;;;;;;;;;2594:56;2663:36;2702:27;:25;:27::i;:::-;2740:15;::::0;::::1;:31:::0;;-1:-1:-1;;;;;;2740:31:7::1;-1:-1:-1::0;;;;;2740:31:7;::::1;::::0;;::::1;::::0;;;2789:34:::1;::::0;2740:15;;-1:-1:-1;2740:31:7;2789:34:::1;::::0;-1:-1:-1;;2789:34:7::1;2583:248;1331:158:::0;2516:315;:::o;3453:237::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;3509:36:::1;3548:27;:25;:27::i;:::-;3607:17;::::0;::::1;::::0;;::::1;-1:-1:-1::0;;;3607:17:7;;::::1;::::0;::::1;3606:18;3586:38:::0;::::1;-1:-1:-1::0;;;;3586:38:7;;::::1;::::0;;;::::1;::::0;;;;3642:40:::1;::::0;3509:66;;-1:-1:-1;3642:40:7::1;::::0;::::1;::::0;3664:17;;;::::1;;837:14:9::0;830:22;812:41;;800:2;785:18;;672:187;1521:366:7;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;1630:29:7;::::1;1626:58;;1668:16;;-1:-1:-1::0;;;1668:16:7::1;;;;;;;;;;;1626:58;1697:36;1736:27;:25;:27::i;:::-;1774:24;::::0;::::1;:42:::0;;-1:-1:-1;;;;;;1774:42:7::1;-1:-1:-1::0;;;;;1774:42:7;::::1;::::0;;::::1;::::0;;;1834:45:::1;::::0;1774:24;;-1:-1:-1;1774:42:7;1834:45:::1;::::0;-1:-1:-1;;1834:45:7::1;1615:272;1331:158:::0;1521:366;:::o;5807:553::-;1342:36;1381:27;:25;:27::i;:::-;1437:8;;;;-1:-1:-1;;;;;;1437:8:7;1423:10;:22;1419:50;;1454:15;;-1:-1:-1;;;1454:15:7;;;;;;;;;;;1419:50;-1:-1:-1;;;;;5886:22:7;::::1;5882:51;;5917:16;;-1:-1:-1::0;;;5917:16:7::1;;;;;;;;;;;5882:51;5946:36;5985:27;:25;:27::i;:::-;5946:66;;6066:19;6150:8;6112:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;6088:82;;;;;;6066:104;;6181:18;533:6;6202:15;:35;;;;:::i;:::-;6248:33;::::0;;;:20:::1;::::0;::::1;:33;::::0;;;;;;:46;;;6312:40;6181:56;;-1:-1:-1;6269:11:7;;6312:40:::1;::::0;::::1;::::0;6181:56;636:25:9;;624:2;609:18;;490:177;6312:40:7::1;;;;;;;;5871:489;;;1331:158:::0;5807:553;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:3;;1678:2:9;2460:63:3;;;1660:21:9;1717:2;1697:18;;;1690:30;1756:33;1736:18;;;1729:61;1807:18;;2460:63:3;;;;;;;;;1759:1;2598:7;:18;2336:287::o;2118:194:8:-;135:39;;2118:194::o;1219:160:5:-;1328:43;;;-1:-1:-1;;;;;2028:32:9;;1328:43:5;;;2010:51:9;2077:18;;;;2070:34;;;1328:43:5;;;;;;;;;;1983:18:9;;;;1328:43:5;;;;;;;;-1:-1:-1;;;;;1328:43:5;-1:-1:-1;;;1328:43:5;;;1301:71;;1321:5;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;-1:-1:-1;;8916:1:5;8910:8;8866:16;;-1:-1:-1;8942:15:5;;:68;;8994:11;9009:1;8994:16;;8942:68;;;-1:-1:-1;;;;;8960:26:5;;;:31;8942:68;8938:146;;;9033:40;;-1:-1:-1;;;9033:40:5;;-1:-1:-1;;;;;2279:32:9;;9033:40:5;;;2261:51:9;2234:18;;9033:40:5;2115:203:9;8938:146:5;8440:650;;8370:720;;:::o;14:286:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:9;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:9:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:9;;305:180;-1:-1:-1;305:180:9:o;864:222::-;929:9;;;950:10;;;947:133;;;1002:10;997:3;993:20;990:1;983:31;1037:4;1034:1;1027:15;1065:4;1062:1;1055:15;947:133;864:222;;;;:::o;1091:380::-;-1:-1:-1;;;1321:32:9;;1391:2;1387:15;;;;-1:-1:-1;;1383:53:9;1378:2;1369:12;;1362:75;1462:2;1453:12;;1091:380::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "695800",
								"executionCost": "22831",
								"totalCost": "718631"
							},
							"external": {
								"collectAccumulatedFees()": "infinite",
								"completeOwnershipTransfer(address)": "infinite",
								"executeOperation(bytes32)": "infinite",
								"queueOperation(bytes32)": "infinite",
								"setFeeCollector(address)": "infinite",
								"setLidoWithdrawalAddress(address)": "infinite",
								"setReceiverContract(address)": "infinite",
								"setSwapContract(address)": "infinite",
								"setWstETHAddress(address)": "infinite",
								"toggleDeposits()": "infinite",
								"toggleEmergencyShutdown()": "infinite",
								"transferOwnership(address)": "infinite",
								"triggerDailyUpdate()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 7097,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5e56854b590d1b62029c7040303bbc4758535b289728c98991ab766788dcc9364736f6c634300081d0033",
									".code": [
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "8024E968"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "D259AB42"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "D259AB42"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "D907813C"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "E458D453"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "8024E968"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "A42DCE80"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "CBAF2FA7"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "62776BF"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "29175B8C"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "2F2A9165"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "37214AD0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "617F3989"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "798B4739"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 7097,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3721,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3187,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4280,
											"end": 4845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2197,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2197,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4900,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4900,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 6368,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6368,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1895,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1895,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2839,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 5241,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5241,
											"end": 5772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2516,
											"end": 2831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2516,
											"end": 2831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3453,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1521,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1521,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5807,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5807,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3721,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3854,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3827,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3827,
											"end": 3854,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3854,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3827,
											"end": 3854,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3900,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3881,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3871,
											"end": 3900,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3867,
											"end": 3924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3909,
											"end": 3924,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3867,
											"end": 3924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3867,
											"end": 3924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 3939,
											"end": 3957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3957,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3961,
											"end": 3962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3962,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3935,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4716DB35"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3981,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3935,
											"end": 3981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3935,
											"end": 3981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3994,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4140,
											"end": 4155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4155,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4082,
											"end": 4194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4140,
											"end": 4155,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4018,
											"end": 4036,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4082,
											"end": 4194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4082,
											"end": 4194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4240,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 636,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "860C0AA5520013080C2F65981705FCDEA474D9F7C3DAF954656ED5E65D692D1F"
										},
										{
											"begin": 4212,
											"end": 4240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4240,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 4248,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 4248,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3721,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 3187,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3291,
											"end": 3316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3291,
											"end": 3318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 3291,
											"end": 3318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3373,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3373,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3318,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3252,
											"end": 3318,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "F3017345AA4F4B1EDF82D1945BA8AAF39D9F284595B090260947F03BC53566F1"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3391,
											"end": 3437,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 830,
											"end": 852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 812,
											"end": 853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 812,
											"end": 853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 800,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 785,
											"end": 803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 859,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3437,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 4280,
											"end": 4845,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4379,
											"end": 4404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4379,
											"end": 4406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4379,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4406,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 595,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4441,
											"end": 4443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4459,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 4441,
											"end": 4477,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4441,
											"end": 4477,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4438,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4423,
											"end": 4477,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4516,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4419,
											"end": 4516,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E10CEB11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4499,
											"end": 4516,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4419,
											"end": 4516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4419,
											"end": 4516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4782,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4746,
											"end": 4764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4782,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4800,
											"end": 4837,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 636,
											"end": 661,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "33774F379C2063E81904E4E67242B165586DFC117CB89F7BAEB19E04EF39A3BE"
										},
										{
											"begin": 4800,
											"end": 4837,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 490,
											"end": 667,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2275,
											"end": 2327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2327,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 2275,
											"end": 2327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2379,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2379,
											"end": 2406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 2379,
											"end": 2406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "66C8EE4F501025A135E9B302CEAD3D51CC5BF10C9496086853C1C961E6D91EE8"
										},
										{
											"begin": 2466,
											"end": 2500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2466,
											"end": 2500,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2264,
											"end": 2508,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5014,
											"end": 5039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5014,
											"end": 5041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5014,
											"end": 5041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 5041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5052,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 533,
											"end": 539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2A300"
										},
										{
											"begin": 5073,
											"end": 5088,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5073,
											"end": 5108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5073,
											"end": 5108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 5121,
											"end": 5141,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5141,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5154,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5167,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5108,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5142,
											"end": 5153,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5142,
											"end": 5153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634"
										},
										{
											"begin": 5185,
											"end": 5225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5185,
											"end": 5225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5108,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 636,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 609,
											"end": 627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 667,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5225,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 5233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 5233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6477,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6451,
											"end": 6502,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6502,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6451,
											"end": 6502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6554,
											"end": 6579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6554,
											"end": 6581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6554,
											"end": 6581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6684,
											"end": 6731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6753,
											"end": 6771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6794,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 6774,
											"end": 6794,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6794,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6807,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6660,
											"end": 6742,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6824,
											"end": 6839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6839,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6824,
											"end": 6871,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6861,
											"end": 6871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6858,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6871,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6824,
											"end": 6871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6912,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6820,
											"end": 6912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F800799B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6893,
											"end": 6912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6820,
											"end": 6912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 7005,
											"end": 7025,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7025,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6998,
											"end": 7038,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7038,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9"
										},
										{
											"begin": 7056,
											"end": 7086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7086,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 7094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 7094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6440,
											"end": 7094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 7094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 1993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1993,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1968,
											"end": 2018,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2018,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2018,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 1968,
											"end": 2018,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2070,
											"end": 2095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2070,
											"end": 2097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2070,
											"end": 2097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2108,
											"end": 2124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2124,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "B72B4DD67DDCBCD61A6EBFFBE1CCA26D032C45F9D3A6F3C596E95E298717F746"
										},
										{
											"begin": 2152,
											"end": 2181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2152,
											"end": 2181,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 2189,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2921,
											"end": 2948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2917,
											"end": 2973,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2957,
											"end": 2973,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2917,
											"end": 2973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2917,
											"end": 2973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2986,
											"end": 3022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3025,
											"end": 3050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3025,
											"end": 3052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3025,
											"end": 3052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 3025,
											"end": 3052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3078,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3112,
											"end": 3146,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3094,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F"
										},
										{
											"begin": 3112,
											"end": 3146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3112,
											"end": 3146,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 3154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5357,
											"end": 5382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5357,
											"end": 5384,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5357,
											"end": 5384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5395,
											"end": 5413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 5416,
											"end": 5436,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5449,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5384,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5318,
											"end": 5384,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5466,
											"end": 5481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5466,
											"end": 5513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5513,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5513,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5500,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5513,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5466,
											"end": 5513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5554,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5554,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5462,
											"end": 5554,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F800799B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5535,
											"end": 5554,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5462,
											"end": 5554,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5462,
											"end": 5554,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 5614,
											"end": 5634,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5647,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5647,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1277662F4B42B8A4069E99FB5E41CE8919D3C621156090AC08FB11ADBCEC66F9"
										},
										{
											"begin": 5665,
											"end": 5695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5695,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5307,
											"end": 5772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2625,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2594,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2650,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2594,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2702,
											"end": 2727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2702,
											"end": 2729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2702,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2823,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2740,
											"end": 2755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2740,
											"end": 2771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2789,
											"end": 2823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7A100DE36A66305ED9CA3998196D0FB9A1806F6DC498D570393B88AB275ED4DF"
										},
										{
											"begin": 2789,
											"end": 2823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2789,
											"end": 2823,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2831,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 3453,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3575,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3548,
											"end": 3573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3548,
											"end": 3575,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3575,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 3548,
											"end": 3575,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3624,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3624,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3682,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3575,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3575,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "19115828B11DF7BF8355D95226507E6ED8D980FC277BDB99594291BF2A466DAB"
										},
										{
											"begin": 3642,
											"end": 3682,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3682,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 3642,
											"end": 3682,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3681,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3681,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 830,
											"end": 852,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 812,
											"end": 853,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 812,
											"end": 853,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 800,
											"end": 802,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 785,
											"end": 803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 785,
											"end": 803,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 672,
											"end": 859,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1630,
											"end": 1659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1630,
											"end": 1659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1626,
											"end": 1684,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1684,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1626,
											"end": 1684,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 1626,
											"end": 1684,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1736,
											"end": 1761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1736,
											"end": 1763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 1736,
											"end": 1763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1798,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 1879,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1774,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1774,
											"end": 1816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D97B0528DF15F8AE38AF640FF9002C863E7DDE420B1B18F78AE48F42F78DC5DB"
										},
										{
											"begin": 1834,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1834,
											"end": 1879,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1887,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1342,
											"end": 1378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1381,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1381,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1381,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1445,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1433,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1423,
											"end": 1445,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA8E4EB5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 1419,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5886,
											"end": 5908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5886,
											"end": 5908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5882,
											"end": 5933,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6C4247B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5933,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5882,
											"end": 5933,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5985,
											"end": 6012,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5985,
											"end": 6010,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5985,
											"end": 6012,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5985,
											"end": 6012,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5985,
											"end": 6012,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 6012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 6012,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6158,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6112,
											"end": 6159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6170,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6170,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2A300"
										},
										{
											"begin": 6202,
											"end": 6217,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 6202,
											"end": 6237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6202,
											"end": 6237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 6248,
											"end": 6268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6281,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6294,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6294,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6237,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6237,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6269,
											"end": 6280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "610F97886F7C2CFA9F3CB01126B63839D9B9EE8DA397C06B368A98856B214634"
										},
										{
											"begin": 6312,
											"end": 6352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6312,
											"end": 6352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 636,
											"end": 661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 636,
											"end": 661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 609,
											"end": 627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 667,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6352,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5871,
											"end": 6360,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5807,
											"end": 6360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1681,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1719,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1697,
											"end": 1715,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1789,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2118,
											"end": 2312,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 174,
											"name": "PUSH",
											"source": 8,
											"value": "5D15B553C07BE9B4A8CF4265C997D4479F22E1843183FA58504508C561FB9D50"
										},
										{
											"begin": 135,
											"end": 174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2118,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2010,
											"end": 2061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2104,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2070,
											"end": 2104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2279,
											"end": 2311,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2279,
											"end": 2311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2115,
											"end": 2318,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 305,
											"end": 485,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 364,
											"end": 370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 396,
											"end": 403,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 392,
											"end": 415,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 388,
											"end": 420,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 437,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 385,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 435,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 385,
											"end": 437,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 456,
											"end": 479,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 929,
											"end": 938,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 929,
											"end": 938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 929,
											"end": 938,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 950,
											"end": 960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 950,
											"end": 960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 950,
											"end": 960,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 947,
											"end": 1080,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 947,
											"end": 1080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 947,
											"end": 1080,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1012,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 997,
											"end": 1000,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 993,
											"end": 1013,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 990,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1037,
											"end": 1041,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1034,
											"end": 1035,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1027,
											"end": 1042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1065,
											"end": 1069,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1062,
											"end": 1063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 947,
											"end": 1080,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 947,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 864,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1471,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1091,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7472616E736665724F776E65727368697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1402,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1436,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1380,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1369,
											"end": 1381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1369,
											"end": 1381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1362,
											"end": 1437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1453,
											"end": 1465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1453,
											"end": 1465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Vault_forge/src/Diamond/AdminFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"collectAccumulatedFees()": "062776bf",
							"completeOwnershipTransfer(address)": "798b4739",
							"executeOperation(bytes32)": "cbaf2fa7",
							"queueOperation(bytes32)": "617f3989",
							"setFeeCollector(address)": "a42dce80",
							"setLidoWithdrawalAddress(address)": "e458d453",
							"setReceiverContract(address)": "37214ad0",
							"setSwapContract(address)": "d259ab42",
							"setWstETHAddress(address)": "8024e968",
							"toggleDeposits()": "d907813c",
							"toggleEmergencyShutdown()": "29175b8c",
							"transferOwnership(address)": "f2fde38b",
							"triggerDailyUpdate()": "2f2a9165"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OperationNotReady\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooSoonToUpdate\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroFees\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DailyUpdateTriggered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"DepositsPausedToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"EmergencyShutdownToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"LidoWithdrawalAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"OperationExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"name\":\"OperationQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ReceiverContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"SwapContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"WstETHAddressUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"collectAccumulatedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"completeOwnershipTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operationId\",\"type\":\"bytes32\"}],\"name\":\"queueOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lidoWithdrawal\",\"type\":\"address\"}],\"name\":\"setLidoWithdrawalAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setReceiverContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_swapContract\",\"type\":\"address\"}],\"name\":\"setSwapContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wstETH\",\"type\":\"address\"}],\"name\":\"setWstETHAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toggleEmergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"triggerDailyUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/AdminFacet.sol\":\"AdminFacet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Vault_forge/src/Diamond/AdminFacet.sol\":{\"keccak256\":\"0x57d3a912e97fff0c8addd1ae8397d2a6723ede0709d01d5356e9370a143ad925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55c7f264436b2e7d80bf89dfd26d9ca174447efad06bcda873398ffb559dd9e9\",\"dweb:/ipfs/QmTkTgHUbJGzP4ZnmzhaEVE767NhbLh56d56b2cuuknMzi\"]},\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "Vault_forge/src/Diamond/AdminFacet.sol:AdminFacet",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"DiamondStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":61:2315  library DiamondStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Vault_forge/src/Diamond/DiamondStorage.sol\":61:2315  library DiamondStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a7b2bb1433f9ed404b5db58b93fd72aded8664483a28eddcff5586703bdc061764736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a7b2bb1433f9ed404b5db58b93fd72aded8664483a28eddcff5586703bdc061764736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xB2 0xBB EQ CALLER EXTDELEGATECALL 0xED BLOCKHASH 0x4B TSTORE 0xB5 DUP12 SWAP4 REVERT PUSH19 0xADED8664483A28EDDCFF5586703BDC06176473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "61:2254:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;61:2254:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a7b2bb1433f9ed404b5db58b93fd72aded8664483a28eddcff5586703bdc061764736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xB2 0xBB EQ CALLER EXTDELEGATECALL 0xED BLOCKHASH 0x4B TSTORE 0xB5 DUP12 SWAP4 REVERT PUSH19 0xADED8664483A28EDDCFF5586703BDC06176473 PUSH16 0x6C634300081D00330000000000000000 ",
							"sourceMap": "61:2254:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getStorage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 61,
									"end": 2315,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7b2bb1433f9ed404b5db58b93fd72aded8664483a28eddcff5586703bdc061764736f6c634300081d0033",
									".code": [
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 2315,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Vault_forge/src/Diamond/AdminFacet.sol",
								"Vault_forge/src/Diamond/DiamondStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Vault_forge/src/Diamond/DiamondStorage.sol\":\"DiamondStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Vault_forge/src/Diamond/DiamondStorage.sol\":{\"keccak256\":\"0x269cc1908b0659132f2104a5999207efbd4e8d43350a196b07887ee8e4be565b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b42abb16defb464fee2a6b85945441a82cd9b3ef11a825c2218a74a8b2f16c5\",\"dweb:/ipfs/QmVGYEN89TC3439qbGngKnJCt3Vg8kNnEmmpy7YoDKTyCJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							708
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								708,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 709,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 708,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 232,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 232,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 232,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 232,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 232,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 232,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 697,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 239,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 244,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "823:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:5"
									},
									"src": "792:46:5"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 253,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "959:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "976:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1002:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:5"
									},
									"src": "920:109:5"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1291:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 265,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "1321:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 268,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "1343:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1343:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 270,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 259,
																			"src": "1360:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 271,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1364:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 266,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 264,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1301:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:5"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1241:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 255,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1241:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1241:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1255:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:5"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:5"
									},
									"scope": 696,
									"src": "1219:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1708:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 291,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1738:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 294,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "1760:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1760:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 296,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 283,
																			"src": "1781:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 297,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1787:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1791:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 299,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 292,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 290,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "1718:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:5"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1644:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 279,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1644:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1644:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1658:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1672:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:5"
									},
									"scope": 696,
									"src": "1618:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2033:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2074:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 321,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "2096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "2096:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 323,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 310,
																			"src": "2113:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 324,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 312,
																			"src": "2117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 319,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 317,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2050:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 316,
												"id": 328,
												"nodeType": "Return",
												"src": "2043:82:5"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:5",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1968:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 306,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1968:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1968:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1982:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1994:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "2027:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:5"
									},
									"scope": 696,
									"src": "1943:189:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "2381:109:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 346,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "2422:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 349,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 334,
																		"src": "2444:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "2444:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 351,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 336,
																			"src": "2465:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 352,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "2471:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 353,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 340,
																			"src": "2475:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 354,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 347,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 345,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2398:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 357,
												"nodeType": "Return",
												"src": "2391:92:5"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:5",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2302:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2302:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2302:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2316:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2330:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 696,
									"src": "2273:217:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3232:139:5",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3242:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 376,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$696",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 374,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 378,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 372,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3265:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "3265:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "3327:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3334:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "3343:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 385,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "3358:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3314:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:5"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3177:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 362,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 361,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3177:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3177:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3191:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3208:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:5"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:5"
									},
									"scope": 696,
									"src": "3146:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4137:370:5",
										"statements": [
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:5",
												"statements": [
													{
														"assignments": [
															402
														],
														"declarations": [
															{
																"constant": false,
																"id": 402,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 431,
																"src": "4171:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 401,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 411,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 407,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$696",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 405,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 409,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4229:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4198:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "4198:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "4255:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 413,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "4274:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 422,
														"nodeType": "IfStatement",
														"src": "4251:160:5",
														"trueBody": {
															"id": 421,
															"nodeType": "Block",
															"src": "4293:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 416,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 396,
																				"src": "4351:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 417,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 402,
																				"src": "4360:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 418,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 398,
																				"src": "4378:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 415,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "4318:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 420,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 424,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "4437:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "4444:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 426,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "4453:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 427,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "4472:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 423,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "4424:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4070:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 392,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4070:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4070:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4101:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:5"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:5"
									},
									"scope": 696,
									"src": "4039:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "5161:303:5",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "5171:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 444,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 448,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "5214:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "5230:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "5239:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 452,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 446,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:5"
											},
											{
												"condition": {
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 456,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5286:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 457,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "5293:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 455,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5262:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "5257:201:5",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "5308:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 461,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5342:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 464,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 437,
																					"src": "5364:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "5364:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 466,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 439,
																						"src": "5380:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 467,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 468,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 462,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 460,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5322:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "5427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 474,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "5434:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 472,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "5407:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5106:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 436,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 435,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "5106:6:5"
													},
													"referencedDeclaration": 232,
													"src": "5106:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5120:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "5137:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:5"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:5"
									},
									"scope": 696,
									"src": "5084:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5911:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 493,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "5925:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 507,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "6034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 508,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6038:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 509,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "6045:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 505,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6012:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "6012:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 520,
													"nodeType": "IfStatement",
													"src": "6007:117:5",
													"trueBody": {
														"id": 519,
														"nodeType": "Block",
														"src": "6052:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 515,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 484,
																					"src": "6106:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 514,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 512,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6073:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 518,
																"nodeType": "RevertStatement",
																"src": "6066:47:5"
															}
														]
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5921:203:5",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5946:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 499,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 484,
																		"src": "5973:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 500,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 486,
																		"src": "5980:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 501,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 488,
																		"src": "5984:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 498,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "5960:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5840:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 482,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5840:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5840:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5856:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5883:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:5"
									},
									"scope": 696,
									"src": "5808:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "6649:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 538,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "6663:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "6786:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 554,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "6792:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 555,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6796:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 556,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "6803:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "6760:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6760:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 567,
													"nodeType": "IfStatement",
													"src": "6755:127:5",
													"trueBody": {
														"id": 566,
														"nodeType": "Block",
														"src": "6810:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 562,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "6864:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 559,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6831:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 565,
																"nodeType": "RevertStatement",
																"src": "6824:47:5"
															}
														]
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "6659:223:5",
												"trueBody": {
													"id": 550,
													"nodeType": "Block",
													"src": "6684:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 544,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "6715:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 545,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "6722:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 546,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "6728:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 547,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 533,
																		"src": "6732:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 543,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "6698:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6527:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 525,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6527:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6527:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6573:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6593:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "6616:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:5"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:5"
									},
									"scope": 696,
									"src": "6482:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "7655:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 583,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "7669:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "7777:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 598,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "7781:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 599,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "7788:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "7756:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7756:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 610,
													"nodeType": "IfStatement",
													"src": "7751:116:5",
													"trueBody": {
														"id": 609,
														"nodeType": "Block",
														"src": "7795:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 605,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 574,
																					"src": "7849:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 603,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 602,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "7816:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 608,
																"nodeType": "RevertStatement",
																"src": "7809:47:5"
															}
														]
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "7665:202:5",
												"trueBody": {
													"id": 594,
													"nodeType": "Block",
													"src": "7690:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 589,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "7717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 590,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "7724:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 591,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "7728:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "7704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 593,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7584:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "7584:8:5"
													},
													"referencedDeclaration": 81,
													"src": "7584:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7600:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7612:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "7627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:5"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:5"
									},
									"scope": 696,
									"src": "7553:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "8440:650:5",
										"statements": [
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8450:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:5"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "8478:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:5"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:5",
													"nodeType": "YulBlock",
													"src": "8532:396:5",
													"statements": [
														{
															"nativeSrc": "8546:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:5"
																		},
																		"nativeSrc": "8566:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:5",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:5"
																		},
																		"nativeSrc": "8583:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:5"
																		},
																		"nativeSrc": "8600:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:5"
																},
																"nativeSrc": "8561:60:5",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:5",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:5",
																"nodeType": "YulBlock",
																"src": "8682:157:5",
																"statements": [
																	{
																		"nativeSrc": "8700:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:5"
																			},
																			"nativeSrc": "8711:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:5"
																					},
																					"nativeSrc": "8762:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:5"
																			},
																			"nativeSrc": "8739:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:5"
																		},
																		"nativeSrc": "8739:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:5"
																					},
																					"nativeSrc": "8808:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:5"
																			},
																			"nativeSrc": "8796:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:5"
																		},
																		"nativeSrc": "8796:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:5"
																},
																"nativeSrc": "8666:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:5"
															},
															"nativeSrc": "8663:176:5",
															"nodeType": "YulIf",
															"src": "8663:176:5"
														},
														{
															"nativeSrc": "8852:30:5",
															"nodeType": "YulAssignment",
															"src": "8852:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:5"
																},
																"nativeSrc": "8866:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:5"
																}
															]
														},
														{
															"nativeSrc": "8895:23:5",
															"nodeType": "YulAssignment",
															"src": "8895:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:5"
																},
																"nativeSrc": "8910:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:5",
														"valueSize": 1
													},
													{
														"declaration": 623,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:5",
														"valueSize": 1
													},
													{
														"declaration": 626,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:5",
														"valueSize": 1
													},
													{
														"declaration": 617,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 628,
												"nodeType": "InlineAssembly",
												"src": "8507:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 629,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8942:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 640,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "8994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 634,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "8968:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 632,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "8938:146:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "9012:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "9066:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "9033:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "9026:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8399:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 615,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8399:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8399:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "8413:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:5"
									},
									"scope": 696,
									"src": "8370:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "9681:391:5",
										"statements": [
											{
												"assignments": [
													666
												],
												"declarations": [
													{
														"constant": false,
														"id": 666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9691:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:5"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9713:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 670,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:5"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "9741:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:5",
													"nodeType": "YulBlock",
													"src": "9795:174:5",
													"statements": [
														{
															"nativeSrc": "9809:71:5",
															"nodeType": "YulAssignment",
															"src": "9809:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:5"
																		},
																		"nativeSrc": "9825:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:5"
																		},
																		"nativeSrc": "9842:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:5"
																		},
																		"nativeSrc": "9859:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:5"
																},
																"nativeSrc": "9820:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:5"
																}
															]
														},
														{
															"nativeSrc": "9893:30:5",
															"nodeType": "YulAssignment",
															"src": "9893:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:5"
																},
																"nativeSrc": "9907:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:5"
																}
															]
														},
														{
															"nativeSrc": "9936:23:5",
															"nodeType": "YulAssignment",
															"src": "9936:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:5"
																},
																"nativeSrc": "9951:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:5",
														"valueSize": 1
													},
													{
														"declaration": 660,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:5",
														"valueSize": 1
													},
													{
														"declaration": 669,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:5",
														"valueSize": 1
													},
													{
														"declaration": 672,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:5",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:5",
														"valueSize": 1
													},
													{
														"declaration": 658,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 674,
												"nodeType": "InlineAssembly",
												"src": "9770:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "9985:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "9997:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 687,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "10048:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 681,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 658,
																						"src": "10023:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 679,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 691,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 664,
												"id": 693,
												"nodeType": "Return",
												"src": "9978:87:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9625:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "9625:6:5"
													},
													"referencedDeclaration": 232,
													"src": "9625:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9639:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 659,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:5"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "9675:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:5"
									},
									"scope": 696,
									"src": "9592:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 697,
							"src": "698:9376:5",
							"usedErrors": [
								244,
								253
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 698,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 699,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC165",
							"nameLocation": "432:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "818:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 701,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:6"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "861:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:6"
									},
									"scope": 708,
									"src": "791:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "422:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:6"
				},
				"id": 6
			},
			"Vault_forge/src/Diamond/AdminFacet.sol": {
				"ast": {
					"absolutePath": "Vault_forge/src/Diamond/AdminFacet.sol",
					"exportedSymbols": {
						"AdminFacet": [
							1354
						],
						"DiamondStorage": [
							1482
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"InvalidAddress": [
							717
						],
						"NotAuthorized": [
							715
						],
						"OperationNotReady": [
							725
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							696
						],
						"TooSoonToUpdate": [
							723
						],
						"ZeroAmount": [
							719
						],
						"ZeroFees": [
							721
						]
					},
					"id": 1355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "Vault_forge/src/Diamond/DiamondStorage.sol",
							"file": "./DiamondStorage.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 1483,
							"src": "61:30:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 697,
							"src": "93:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1355,
							"sourceUnit": 155,
							"src": "160:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "ea8e4eb5",
							"id": 715,
							"name": "NotAuthorized",
							"nameLocation": "250:13:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 714,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "263:2:7"
							},
							"src": "244:22:7"
						},
						{
							"errorSelector": "e6c4247b",
							"id": 717,
							"name": "InvalidAddress",
							"nameLocation": "274:14:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 716,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "288:2:7"
							},
							"src": "268:23:7"
						},
						{
							"errorSelector": "1f2a2005",
							"id": 719,
							"name": "ZeroAmount",
							"nameLocation": "299:10:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 718,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "309:2:7"
							},
							"src": "293:19:7"
						},
						{
							"errorSelector": "4716db35",
							"id": 721,
							"name": "ZeroFees",
							"nameLocation": "320:8:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 720,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "328:2:7"
							},
							"src": "314:17:7"
						},
						{
							"errorSelector": "e10ceb11",
							"id": 723,
							"name": "TooSoonToUpdate",
							"nameLocation": "339:15:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 722,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "354:2:7"
							},
							"src": "333:24:7"
						},
						{
							"errorSelector": "f800799b",
							"id": 725,
							"name": "OperationNotReady",
							"nameLocation": "365:17:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 724,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "382:2:7"
							},
							"src": "359:26:7"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"412:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "412:15:7"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "412:15:7"
								}
							],
							"canonicalName": "AdminFacet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354,
								154
							],
							"name": "AdminFacet",
							"nameLocation": "398:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 731,
									"libraryName": {
										"id": 728,
										"name": "SafeERC20",
										"nameLocations": [
											"441:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "441:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "435:27:7",
									"typeName": {
										"id": 730,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 729,
											"name": "IERC20",
											"nameLocations": [
												"455:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 232,
											"src": "455:6:7"
										},
										"referencedDeclaration": 232,
										"src": "455:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$232",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"id": 734,
									"mutability": "constant",
									"name": "TIMELOCK_DURATION",
									"nameLocation": "513:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1354,
									"src": "488:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 732,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 733,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "533:6:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_172800_by_1",
											"typeString": "int_const 172800"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 737,
									"mutability": "constant",
									"name": "UPDATE_INTERVAL",
									"nameLocation": "571:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1354,
									"src": "546:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "546:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 736,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "589:6:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "d97b0528df15f8ae38af640ff9002c863e7dde420b1b18f78ae48f42f78dc5db",
									"id": 741,
									"name": "LidoWithdrawalAddressUpdated",
									"nameLocation": "625:28:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "670:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "654:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:28:7"
									},
									"src": "619:63:7"
								},
								{
									"anonymous": false,
									"eventSelector": "b72b4dd67ddcbcd61a6ebffbe1cca26d032c45f9d3a6f3c596e95e298717f746",
									"id": 745,
									"name": "WstETHAddressUpdated",
									"nameLocation": "694:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "731:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "715:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:28:7"
									},
									"src": "688:55:7"
								},
								{
									"anonymous": false,
									"eventSelector": "66c8ee4f501025a135e9b302cead3d51cc5bf10c9496086853c1c961e6d91ee8",
									"id": 749,
									"name": "ReceiverContractUpdated",
									"nameLocation": "755:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "795:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "779:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:28:7"
									},
									"src": "749:58:7"
								},
								{
									"anonymous": false,
									"eventSelector": "7a100de36a66305ed9ca3998196d0fb9a1806f6dc498d570393b88ab275ed4df",
									"id": 753,
									"name": "SwapContractUpdated",
									"nameLocation": "819:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "855:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "839:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:28:7"
									},
									"src": "813:54:7"
								},
								{
									"anonymous": false,
									"eventSelector": "e5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f",
									"id": 757,
									"name": "FeeCollectorUpdated",
									"nameLocation": "879:19:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeCollector",
												"nameLocation": "915:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "899:31:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:33:7"
									},
									"src": "873:59:7"
								},
								{
									"anonymous": false,
									"eventSelector": "860c0aa5520013080c2f65981705fcdea474d9f7c3daf954656ed5e65d692d1f",
									"id": 761,
									"name": "FeesCollected",
									"nameLocation": "944:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "966:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "958:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:16:7"
									},
									"src": "938:36:7"
								},
								{
									"anonymous": false,
									"eventSelector": "f3017345aa4f4b1edf82d1945ba8aaf39d9f284595b090260947f03bc53566f1",
									"id": 765,
									"name": "EmergencyShutdownToggled",
									"nameLocation": "986:24:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"indexed": false,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "1016:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1011:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1011:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:14:7"
									},
									"src": "980:45:7"
								},
								{
									"anonymous": false,
									"eventSelector": "19115828b11df7bf8355d95226507e6ed8d980fc277bdb99594291bf2a466dab",
									"id": 769,
									"name": "DepositsPausedToggled",
									"nameLocation": "1037:21:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"indexed": false,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "1064:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1059:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1059:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:13:7"
									},
									"src": "1031:41:7"
								},
								{
									"anonymous": false,
									"eventSelector": "33774f379c2063e81904e4e67242b165586dfc117cb89f7baeb19e04ef39a3be",
									"id": 773,
									"name": "DailyUpdateTriggered",
									"nameLocation": "1084:20:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1113:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1105:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:19:7"
									},
									"src": "1078:46:7"
								},
								{
									"anonymous": false,
									"eventSelector": "610f97886f7c2cfa9f3cb01126b63839d9b9ee8da397c06b368a98856b214634",
									"id": 779,
									"name": "OperationQueued",
									"nameLocation": "1136:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"indexed": true,
												"mutability": "mutable",
												"name": "operationId",
												"nameLocation": "1168:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1152:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"indexed": false,
												"mutability": "mutable",
												"name": "unlockTime",
												"nameLocation": "1189:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "1181:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:49:7"
									},
									"src": "1130:71:7"
								},
								{
									"anonymous": false,
									"eventSelector": "1277662f4b42b8a4069e99fb5e41ce8919d3c621156090ac08fb11adbcec66f9",
									"id": 783,
									"name": "OperationExecuted",
									"nameLocation": "1213:17:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "operationId",
												"nameLocation": "1247:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1231:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 780,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:29:7"
									},
									"src": "1207:53:7"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "1331:158:7",
										"statements": [
											{
												"assignments": [
													789
												],
												"declarations": [
													{
														"constant": false,
														"id": 789,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "1376:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 804,
														"src": "1342:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 788,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 787,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"1342:14:7",
																	"1357:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "1342:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "1342:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 793,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 790,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "1381:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1396:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "1381:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1342:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 794,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1423:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1427:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1423:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 796,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "1437:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1440:5:7",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "1437:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1423:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "1419:50:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 799,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "1454:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1454:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 801,
													"nodeType": "RevertStatement",
													"src": "1447:22:7"
												}
											},
											{
												"id": 803,
												"nodeType": "PlaceholderStatement",
												"src": "1480:1:7"
											}
										]
									},
									"id": 805,
									"name": "onlyOwner",
									"nameLocation": "1319:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:7"
									},
									"src": "1310:179:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1615:272:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 812,
														"name": "_lidoWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1630:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1657:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1649:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 813,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1649:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1649:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1630:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "1626:58:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 818,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1668:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1668:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 820,
													"nodeType": "RevertStatement",
													"src": "1661:23:7"
												}
											},
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "1731:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "1697:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 825,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 824,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"1697:14:7",
																	"1712:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "1697:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "1697:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 827,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "1736:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1751:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "1736:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1697:66:7"
											},
											{
												"expression": {
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 831,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "1774:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1777:21:7",
														"memberName": "lidoWithdrawalAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "1774:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 834,
														"name": "_lidoWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1801:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1774:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "1774:42:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 838,
															"name": "_lidoWithdrawal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1863:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 837,
														"name": "LidoWithdrawalAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1834:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "EmitStatement",
												"src": "1829:50:7"
											}
										]
									},
									"functionSelector": "e458d453",
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 809,
												"name": "onlyOwner",
												"nameLocations": [
													"1605:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "1605:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1605:9:7"
										}
									],
									"name": "setLidoWithdrawalAddress",
									"nameLocation": "1530:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "_lidoWithdrawal",
												"nameLocation": "1573:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1565:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:41:7"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1615:0:7"
									},
									"scope": 1354,
									"src": "1521:366:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "1957:232:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 849,
														"name": "_wstETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "1972:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1991:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1983:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 850,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1983:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1972:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 858,
												"nodeType": "IfStatement",
												"src": "1968:50:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 855,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2002:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2002:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 857,
													"nodeType": "RevertStatement",
													"src": "1995:23:7"
												}
											},
											{
												"assignments": [
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "2065:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 878,
														"src": "2031:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 862,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 861,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"2031:14:7",
																	"2046:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "2031:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "2031:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 867,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 864,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2070:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2085:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "2070:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2031:66:7"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 868,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2108:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2111:13:7",
														"memberName": "wstETHAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1386,
														"src": "2108:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 871,
														"name": "_wstETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "2127:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2108:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2108:26:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 875,
															"name": "_wstETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "2173:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 874,
														"name": "WstETHAddressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "2152:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:29:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "EmitStatement",
												"src": "2147:34:7"
											}
										]
									},
									"functionSelector": "8024e968",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 847,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 846,
												"name": "onlyOwner",
												"nameLocations": [
													"1947:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "1947:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1947:9:7"
										}
									],
									"name": "setWstETHAddress",
									"nameLocation": "1904:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_wstETH",
												"nameLocation": "1929:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "1921:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:17:7"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:0:7"
									},
									"scope": 1354,
									"src": "1895:294:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "2264:244:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "_receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "2279:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2300:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2292:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2292:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2292:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2279:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "2275:52:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 892,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2311:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2311:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 894,
													"nodeType": "RevertStatement",
													"src": "2304:23:7"
												}
											},
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "2374:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "2340:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 899,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 898,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"2340:14:7",
																	"2355:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "2340:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "2340:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 901,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2379:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2394:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "2379:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2340:66:7"
											},
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 905,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "2417:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2420:16:7",
														"memberName": "receiverContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1388,
														"src": "2417:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 908,
														"name": "_receiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "2439:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2417:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "2417:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 912,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "2490:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 911,
														"name": "ReceiverContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "2466:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "EmitStatement",
												"src": "2461:39:7"
											}
										]
									},
									"functionSelector": "37214ad0",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 883,
												"name": "onlyOwner",
												"nameLocations": [
													"2254:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "2254:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2254:9:7"
										}
									],
									"name": "setReceiverContract",
									"nameLocation": "2206:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "2234:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "2226:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:19:7"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2264:0:7"
									},
									"scope": 1354,
									"src": "2197:311:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "2583:248:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "_swapContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2598:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2623:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2615:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2615:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2615:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2598:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "2594:56:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 929,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2634:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2634:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 931,
													"nodeType": "RevertStatement",
													"src": "2627:23:7"
												}
											},
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "2697:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "2663:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 936,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 935,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"2663:14:7",
																	"2678:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "2663:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "2663:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 938,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2702:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2717:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "2702:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2663:66:7"
											},
											{
												"expression": {
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 942,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2740:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2743:12:7",
														"memberName": "swapContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "2740:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 945,
														"name": "_swapContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2758:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2740:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "2740:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 949,
															"name": "_swapContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2809:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 948,
														"name": "SwapContractUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "2789:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2789:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "EmitStatement",
												"src": "2784:39:7"
											}
										]
									},
									"functionSelector": "d259ab42",
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 921,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 920,
												"name": "onlyOwner",
												"nameLocations": [
													"2573:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "2573:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2573:9:7"
										}
									],
									"name": "setSwapContract",
									"nameLocation": "2525:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "_swapContract",
												"nameLocation": "2549:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "2541:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2540:23:7"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2583:0:7"
									},
									"scope": 1354,
									"src": "2516:315:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "2906:248:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "_feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "2921:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2946:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 961,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2938:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2938:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2921:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "2917:56:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 966,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2957:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2957:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 968,
													"nodeType": "RevertStatement",
													"src": "2950:23:7"
												}
											},
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3020:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "2986:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 973,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 972,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"2986:14:7",
																	"3001:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "2986:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "2986:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 975,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3025:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3040:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "3025:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3025:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2986:66:7"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 979,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "3063:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3066:12:7",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "3063:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "_feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3081:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3063:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "3063:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 986,
															"name": "_feeCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3132:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "FeeCollectorUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "3112:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3112:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "EmitStatement",
												"src": "3107:39:7"
											}
										]
									},
									"functionSelector": "a42dce80",
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 958,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 957,
												"name": "onlyOwner",
												"nameLocations": [
													"2896:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "2896:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2896:9:7"
										}
									],
									"name": "setFeeCollector",
									"nameLocation": "2848:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "2872:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "2864:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2864:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:23:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:0:7"
									},
									"scope": 1354,
									"src": "2839:315:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "3241:204:7",
										"statements": [
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3286:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "3252:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 998,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 997,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"3252:14:7",
																	"3267:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "3252:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "3252:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1000,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3291:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3306:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "3291:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3252:66:7"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1004,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "3329:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3332:17:7",
														"memberName": "emergencyShutdown",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1392,
														"src": "3329:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3352:21:7",
														"subExpression": {
															"expression": {
																"id": 1007,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "3353:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3356:17:7",
															"memberName": "emergencyShutdown",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1392,
															"src": "3353:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3329:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "3329:44:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1013,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "3416:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3419:17:7",
															"memberName": "emergencyShutdown",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1392,
															"src": "3416:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1012,
														"name": "EmergencyShutdownToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "3391:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "EmitStatement",
												"src": "3386:51:7"
											}
										]
									},
									"functionSelector": "29175b8c",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 993,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "onlyOwner",
												"nameLocations": [
													"3231:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "3231:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3231:9:7"
										}
									],
									"name": "toggleEmergencyShutdown",
									"nameLocation": "3196:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:2:7"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3241:0:7"
									},
									"scope": 1354,
									"src": "3187:258:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "3498:192:7",
										"statements": [
											{
												"assignments": [
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3543:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "3509:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1026,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1025,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"3509:14:7",
																	"3524:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "3509:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "3509:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1028,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3548:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3563:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "3548:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3548:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3509:66:7"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1032,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "3586:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3589:14:7",
														"memberName": "depositsPaused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1394,
														"src": "3586:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3606:18:7",
														"subExpression": {
															"expression": {
																"id": 1035,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3607:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3610:14:7",
															"memberName": "depositsPaused",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1394,
															"src": "3607:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3586:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "3586:38:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1041,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "3664:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3667:14:7",
															"memberName": "depositsPaused",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1394,
															"src": "3664:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1040,
														"name": "DepositsPausedToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "3642:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3642:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "3637:45:7"
											}
										]
									},
									"functionSelector": "d907813c",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1020,
												"name": "onlyOwner",
												"nameLocations": [
													"3488:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "3488:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3488:9:7"
										}
									],
									"name": "toggleDeposits",
									"nameLocation": "3462:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3476:2:7"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:0:7"
									},
									"scope": 1354,
									"src": "3453:237:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "3777:471:7",
										"statements": [
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "3822:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "3788:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1054,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1053,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"3788:14:7",
																	"3803:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "3788:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "3788:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1056,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "3827:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3842:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "3827:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3827:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3788:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1060,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3871:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3875:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3871:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1062,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3885:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3888:12:7",
														"memberName": "feeCollector",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "3885:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3871:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "3867:57:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1065,
															"name": "NotAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3909:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3909:15:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1067,
													"nodeType": "RevertStatement",
													"src": "3902:22:7"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1069,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3939:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3942:15:7",
														"memberName": "accumulatedFees",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "3939:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3961:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3939:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "3935:46:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1073,
															"name": "ZeroFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "3971:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3971:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1075,
													"nodeType": "RevertStatement",
													"src": "3964:17:7"
												}
											},
											{
												"assignments": [
													1078
												],
												"declarations": [
													{
														"constant": false,
														"id": 1078,
														"mutability": "mutable",
														"name": "feesToCollect",
														"nameLocation": "4002:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1102,
														"src": "3994:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3994:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1081,
												"initialValue": {
													"expression": {
														"id": 1079,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "4018:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState storage pointer"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4021:15:7",
													"memberName": "accumulatedFees",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1402,
													"src": "4018:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3994:42:7"
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1082,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "4047:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4050:15:7",
														"memberName": "accumulatedFees",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "4047:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4068:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4047:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "4047:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1093,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "4140:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4143:12:7",
															"memberName": "feeCollector",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1390,
															"src": "4140:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "feesToCollect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "4170:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1089,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "4089:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																			"typeString": "struct DiamondStorage.VaultState storage pointer"
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4092:19:7",
																	"memberName": "ASSET_TOKEN_ADDRESS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1380,
																	"src": "4089:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1088,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "4082:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4082:30:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4113:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "4082:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:112:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "4082:112:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1099,
															"name": "feesToCollect",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "4226:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "FeesCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "4212:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4212:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "EmitStatement",
												"src": "4207:33:7"
											}
										]
									},
									"functionSelector": "062776bf",
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1049,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1048,
												"name": "nonReentrant",
												"nameLocations": [
													"3764:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "3764:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3764:12:7"
										}
									],
									"name": "collectAccumulatedFees",
									"nameLocation": "3730:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3777:0:7"
									},
									"scope": 1354,
									"src": "3721:527:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "4329:516:7",
										"statements": [
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "4374:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1140,
														"src": "4340:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1111,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1110,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"4340:14:7",
																	"4355:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "4340:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "4340:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1113,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "4379:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4394:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "4379:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4340:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1117,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4423:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4429:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4423:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1119,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "4441:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4444:15:7",
															"memberName": "lastDailyUpdate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "4441:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1121,
															"name": "UPDATE_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4462:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4441:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4423:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "4419:97:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1124,
															"name": "TooSoonToUpdate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "4499:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4499:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1126,
													"nodeType": "RevertStatement",
													"src": "4492:24:7"
												}
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1128,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "4746:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4749:15:7",
														"memberName": "lastDailyUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1398,
														"src": "4746:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1131,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4767:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4773:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4767:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4746:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "4746:36:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1136,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4821:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4821:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "DailyUpdateTriggered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "4800:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "EmitStatement",
												"src": "4795:42:7"
											}
										]
									},
									"functionSelector": "2f2a9165",
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"4319:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "4319:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4319:9:7"
										}
									],
									"name": "triggerDailyUpdate",
									"nameLocation": "4289:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4307:2:7"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4329:0:7"
									},
									"scope": 1354,
									"src": "4280:565:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "4964:269:7",
										"statements": [
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5009:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "4975:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1151,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1150,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"4975:14:7",
																	"4990:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "4975:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "4975:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1153,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5014:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5029:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "5014:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4975:66:7"
											},
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "5060:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "5052:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5052:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1159,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5073:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5079:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5073:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1161,
														"name": "TIMELOCK_DURATION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "5091:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5073:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5052:56:7"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1164,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "5121:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5124:17:7",
															"memberName": "pendingOperations",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "5121:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1168,
														"indexExpression": {
															"id": 1166,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "5142:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5121:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "5157:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5121:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "5121:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1173,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "5201:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1174,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "5214:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1172,
														"name": "OperationQueued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5185:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5185:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "EmitStatement",
												"src": "5180:45:7"
											}
										]
									},
									"functionSelector": "617f3989",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "onlyOwner",
												"nameLocations": [
													"4954:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "4954:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4954:9:7"
										}
									],
									"name": "queueOperation",
									"nameLocation": "4909:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "operationId",
												"nameLocation": "4932:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "4924:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4923:21:7"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4964:0:7"
									},
									"scope": 1354,
									"src": "4900:333:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1223,
										"nodeType": "Block",
										"src": "5307:465:7",
										"statements": [
											{
												"assignments": [
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5352:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "5318:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1188,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1187,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"5318:14:7",
																	"5333:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "5318:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "5318:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1193,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1190,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5357:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5372:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "5357:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5318:66:7"
											},
											{
												"assignments": [
													1195
												],
												"declarations": [
													{
														"constant": false,
														"id": 1195,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "5403:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1223,
														"src": "5395:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5395:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1196,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "5416:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5419:17:7",
														"memberName": "pendingOperations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1462,
														"src": "5416:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1199,
													"indexExpression": {
														"id": 1198,
														"name": "operationId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "5437:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5416:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5395:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1201,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "5466:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5480:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5466:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1204,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5485:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5491:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5485:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1206,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "5503:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5485:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5466:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "5462:92:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1209,
															"name": "OperationNotReady",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "5535:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5535:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1211,
													"nodeType": "RevertStatement",
													"src": "5528:26:7"
												}
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5607:40:7",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1213,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1189,
																"src": "5614:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5617:17:7",
															"memberName": "pendingOperations",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "5614:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1216,
														"indexExpression": {
															"id": 1215,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5635:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5614:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "5607:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1220,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "5683:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1219,
														"name": "OperationExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "5665:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5665:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "EmitStatement",
												"src": "5660:35:7"
											}
										]
									},
									"functionSelector": "cbaf2fa7",
									"id": 1224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1182,
												"name": "onlyOwner",
												"nameLocations": [
													"5297:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "5297:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5297:9:7"
										}
									],
									"name": "executeOperation",
									"nameLocation": "5250:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "operationId",
												"nameLocation": "5275:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "5267:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5266:21:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5307:0:7"
									},
									"scope": 1354,
									"src": "5241:531:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "5871:489:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "5886:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5906:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5898:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1232,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5898:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5898:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5886:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "5882:51:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1237,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "5917:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5917:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1239,
													"nodeType": "RevertStatement",
													"src": "5910:23:7"
												}
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "5980:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "5946:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1244,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1243,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"5946:14:7",
																	"5961:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "5946:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "5946:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1246,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5985:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6000:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "5985:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5985:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5946:66:7"
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "operationId",
														"nameLocation": "6074:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "6066:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1250,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6066:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1259,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "7472616e736665724f776e657273686970",
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6129:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f",
																		"typeString": "literal_string \"transferOwnership\""
																	},
																	"value": "transferOwnership"
																},
																{
																	"id": 1256,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "6150:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f",
																		"typeString": "literal_string \"transferOwnership\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1253,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6112:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6116:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "6112:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6112:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1252,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6088:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6088:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6066:104:7"
											},
											{
												"assignments": [
													1261
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "6189:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1280,
														"src": "6181:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6181:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1262,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6202:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6208:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6202:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1264,
														"name": "TIMELOCK_DURATION",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "6220:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6202:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6181:56:7"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 1267,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "6248:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6251:17:7",
															"memberName": "pendingOperations",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "6248:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"id": 1269,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6269:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6248:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1272,
														"name": "unlockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "6284:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6248:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "6248:46:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1276,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "6328:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1277,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "6341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1275,
														"name": "OperationQueued",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "6312:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6312:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1279,
												"nodeType": "EmitStatement",
												"src": "6307:45:7"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1228,
												"name": "onlyOwner",
												"nameLocations": [
													"5861:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "5861:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5861:9:7"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "5816:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5842:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "5834:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5834:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:18:7"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5871:0:7"
									},
									"scope": 1354,
									"src": "5807:553:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "6440:654:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1288,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "6455:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6475:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6467:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1289,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6467:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6467:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6455:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "6451:51:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1294,
															"name": "InvalidAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "6486:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6486:16:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1296,
													"nodeType": "RevertStatement",
													"src": "6479:23:7"
												}
											},
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "ds",
														"nameLocation": "6549:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "6515:36:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
															"typeString": "struct DiamondStorage.VaultState"
														},
														"typeName": {
															"id": 1301,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1300,
																"name": "DiamondStorage.VaultState",
																"nameLocations": [
																	"6515:14:7",
																	"6530:10:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1469,
																"src": "6515:25:7"
															},
															"referencedDeclaration": 1469,
															"src": "6515:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1303,
															"name": "DiamondStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "6554:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondStorage_$1482_$",
																"typeString": "type(library DiamondStorage)"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6569:10:7",
														"memberName": "getStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1481,
														"src": "6554:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_VaultState_$1469_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondStorage.VaultState storage pointer)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6515:66:7"
											},
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "operationId",
														"nameLocation": "6646:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "6638:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1307,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6638:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "7472616e736665724f776e657273686970",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6701:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f",
																		"typeString": "literal_string \"transferOwnership\""
																	},
																	"value": "transferOwnership"
																},
																{
																	"id": 1313,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "6722:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_1d4a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f",
																		"typeString": "literal_string \"transferOwnership\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1310,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6688:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "6684:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6684:47:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1309,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6660:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6660:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6638:104:7"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "6761:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "6753:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6753:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1323,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1319,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6774:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1320,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6777:17:7",
														"memberName": "pendingOperations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1462,
														"src": "6774:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1322,
													"indexExpression": {
														"id": 1321,
														"name": "operationId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "6795:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6774:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6753:54:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1324,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "6824:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6838:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6824:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1327,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6843:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6849:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6843:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1329,
															"name": "unlockTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "6861:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6843:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6824:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "6820:92:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1332,
															"name": "OperationNotReady",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "6893:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6893:19:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1334,
													"nodeType": "RevertStatement",
													"src": "6886:26:7"
												}
											},
											{
												"expression": {
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1336,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6968:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																"typeString": "struct DiamondStorage.VaultState storage pointer"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6971:5:7",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1372,
														"src": "6968:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1339,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1283,
														"src": "6979:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6968:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "6968:19:7"
											},
											{
												"expression": {
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6998:40:7",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1342,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "7005:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
																	"typeString": "struct DiamondStorage.VaultState storage pointer"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7008:17:7",
															"memberName": "pendingOperations",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1462,
															"src": "7005:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1345,
														"indexExpression": {
															"id": 1344,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "7026:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7005:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "6998:40:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1349,
															"name": "operationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "7074:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1348,
														"name": "OperationExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "7056:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "EmitStatement",
												"src": "7051:35:7"
											}
										]
									},
									"functionSelector": "798b4739",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1285,
												"name": "onlyOwner",
												"nameLocations": [
													"6430:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 805,
												"src": "6430:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6430:9:7"
										}
									],
									"name": "completeOwnershipTransfer",
									"nameLocation": "6377:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6411:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "6403:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6403:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6402:18:7"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6440:0:7"
									},
									"scope": 1354,
									"src": "6368:726:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1355,
							"src": "389:6708:7",
							"usedErrors": [
								244,
								715,
								717,
								721,
								723,
								725
							],
							"usedEvents": [
								741,
								745,
								749,
								753,
								757,
								761,
								765,
								769,
								773,
								779,
								783
							]
						}
					],
					"src": "33:7066:7"
				},
				"id": 7
			},
			"Vault_forge/src/Diamond/DiamondStorage.sol": {
				"ast": {
					"absolutePath": "Vault_forge/src/Diamond/DiamondStorage.sol",
					"exportedSymbols": {
						"DiamondStorage": [
							1482
						]
					},
					"id": 1483,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DiamondStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1482,
							"linearizedBaseContracts": [
								1482
							],
							"name": "DiamondStorage",
							"nameLocation": "69:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1361,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nameLocation": "108:24:8",
									"nodeType": "VariableDeclaration",
									"scope": 1482,
									"src": "91:83:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1357,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "91:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e73746f726167652e7969656c642e62756c6c",
												"id": 1359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "145:28:8",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50",
													"typeString": "literal_string \"diamond.storage.yield.bull\""
												},
												"value": "diamond.storage.yield.bull"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_5d15b553c07be9b4a8cf4265c997d4479f22e1843183fa58504508c561fb9d50",
													"typeString": "literal_string \"diamond.storage.yield.bull\""
												}
											],
											"id": 1358,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "135:9:8",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "135:39:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "DiamondStorage.StakedDeposit",
									"id": 1370,
									"members": [
										{
											"constant": false,
											"id": 1363,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "288:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1370,
											"src": "280:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "280:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1365,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "313:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1370,
											"src": "305:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1364,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "305:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1367,
											"mutability": "mutable",
											"name": "wstETHAmount",
											"nameLocation": "341:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1370,
											"src": "333:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1366,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "333:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1369,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "369:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1370,
											"src": "364:14:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1368,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "364:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedDeposit",
									"nameLocation": "255:13:8",
									"nodeType": "StructDefinition",
									"scope": 1482,
									"src": "248:138:8",
									"visibility": "public"
								},
								{
									"canonicalName": "DiamondStorage.VaultState",
									"id": 1469,
									"members": [
										{
											"constant": false,
											"id": 1372,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "468:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "460:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1371,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "460:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1374,
											"mutability": "mutable",
											"name": "totalAssets",
											"nameLocation": "492:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "484:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "484:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1376,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "522:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "514:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "514:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1378,
											"mutability": "mutable",
											"name": "totalStakedValue",
											"nameLocation": "552:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "544:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1377,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "544:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "ASSET_TOKEN_ADDRESS",
											"nameLocation": "625:19:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "617:27:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1379,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "swapContract",
											"nameLocation": "663:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "655:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1381,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "655:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "lidoWithdrawalAddress",
											"nameLocation": "694:21:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "686:29:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1383,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "686:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "wstETHAddress",
											"nameLocation": "734:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "726:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "726:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1388,
											"mutability": "mutable",
											"name": "receiverContract",
											"nameLocation": "766:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "758:24:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1387,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "758:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "feeCollector",
											"nameLocation": "801:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "793:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1389,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "793:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1392,
											"mutability": "mutable",
											"name": "emergencyShutdown",
											"nameLocation": "864:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "859:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1391,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "859:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1394,
											"mutability": "mutable",
											"name": "depositsPaused",
											"nameLocation": "897:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "892:19:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1393,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "892:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "971:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "963:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1395,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "963:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1398,
											"mutability": "mutable",
											"name": "lastDailyUpdate",
											"nameLocation": "1004:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "996:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "996:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1400,
											"mutability": "mutable",
											"name": "lastProcessedUserIndex",
											"nameLocation": "1038:22:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1030:30:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1030:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1402,
											"mutability": "mutable",
											"name": "accumulatedFees",
											"nameLocation": "1079:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1071:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1071:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1405,
											"mutability": "mutable",
											"name": "userAddresses",
											"nameLocation": "1147:13:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1137:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1404,
												"nodeType": "ArrayTypeName",
												"src": "1137:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1409,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "1230:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1202:36:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1408,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1210:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1202:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1413,
											"mutability": "mutable",
											"name": "userDeposits",
											"nameLocation": "1277:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1249:40:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1412,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1257:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1249:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1417,
											"mutability": "mutable",
											"name": "depositTimestamps",
											"nameLocation": "1328:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1300:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1416,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1300:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1421,
											"mutability": "mutable",
											"name": "stakedPortions",
											"nameLocation": "1384:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1356:42:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1420,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1356:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1425,
											"mutability": "mutable",
											"name": "lockedAssets",
											"nameLocation": "1437:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1409:40:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1424,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1409:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1429,
											"mutability": "mutable",
											"name": "isExistingUser",
											"nameLocation": "1485:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1460:39:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1428,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1460:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1479:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1433,
											"mutability": "mutable",
											"name": "userWstETHBalance",
											"nameLocation": "1538:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1510:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1432,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1510:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1437,
											"mutability": "mutable",
											"name": "withdrawalInProgress",
											"nameLocation": "1591:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1566:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 1436,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1566:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1585:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "withdrawalRequestIds",
											"nameLocation": "1650:20:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1622:48:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1440,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1622:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "largeDepositUnlockTime",
											"nameLocation": "1709:22:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1681:50:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1444,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1681:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "pendingEthStakes",
											"nameLocation": "1770:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1742:44:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 1448,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1742:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1454,
											"mutability": "mutable",
											"name": "stakeBatches",
											"nameLocation": "1866:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1836:42:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_address_$dyn_storage_$",
												"typeString": "mapping(bytes32 => address[])"
											},
											"typeName": {
												"id": 1453,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1450,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1836:29:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_address_$dyn_storage_$",
													"typeString": "mapping(bytes32 => address[])"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"baseType": {
														"id": 1451,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1855:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1452,
													"nodeType": "ArrayTypeName",
													"src": "1855:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1458,
											"mutability": "mutable",
											"name": "processedBatches",
											"nameLocation": "1914:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1889:41:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"typeName": {
												"id": 1457,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1455,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1889:24:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
													"typeString": "mapping(bytes32 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1462,
											"mutability": "mutable",
											"name": "pendingOperations",
											"nameLocation": "1969:17:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "1941:45:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1461,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1941:27:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1468,
											"mutability": "mutable",
											"name": "userStakedDeposits",
											"nameLocation": "2080:18:8",
											"nodeType": "VariableDeclaration",
											"scope": 1469,
											"src": "2044:54:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakedDeposit_$1370_storage_$dyn_storage_$",
												"typeString": "mapping(address => struct DiamondStorage.StakedDeposit[])"
											},
											"typeName": {
												"id": 1467,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2044:35:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakedDeposit_$1370_storage_$dyn_storage_$",
													"typeString": "mapping(address => struct DiamondStorage.StakedDeposit[])"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"baseType": {
														"id": 1465,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1464,
															"name": "StakedDeposit",
															"nameLocations": [
																"2063:13:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1370,
															"src": "2063:13:8"
														},
														"referencedDeclaration": 1370,
														"src": "2063:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedDeposit_$1370_storage_ptr",
															"typeString": "struct DiamondStorage.StakedDeposit"
														}
													},
													"id": 1466,
													"nodeType": "ArrayTypeName",
													"src": "2063:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedDeposit_$1370_storage_$dyn_storage_ptr",
														"typeString": "struct DiamondStorage.StakedDeposit[]"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultState",
									"nameLocation": "405:10:8",
									"nodeType": "StructDefinition",
									"scope": 1482,
									"src": "398:1708:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "2186:126:8",
										"statements": [
											{
												"assignments": [
													1476
												],
												"declarations": [
													{
														"constant": false,
														"id": 1476,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2205:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1480,
														"src": "2197:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2197:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"id": 1477,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1361,
													"src": "2216:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2197:43:8"
											},
											{
												"AST": {
													"nativeSrc": "2260:45:8",
													"nodeType": "YulBlock",
													"src": "2260:45:8",
													"statements": [
														{
															"nativeSrc": "2275:19:8",
															"nodeType": "YulAssignment",
															"src": "2275:19:8",
															"value": {
																"name": "position",
																"nativeSrc": "2286:8:8",
																"nodeType": "YulIdentifier",
																"src": "2286:8:8"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nativeSrc": "2275:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2275:7:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1473,
														"isOffset": false,
														"isSlot": true,
														"src": "2275:7:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1476,
														"isOffset": false,
														"isSlot": false,
														"src": "2286:8:8",
														"valueSize": 1
													}
												],
												"id": 1479,
												"nodeType": "InlineAssembly",
												"src": "2251:54:8"
											}
										]
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStorage",
									"nameLocation": "2127:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2137:2:8"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "ds",
												"nameLocation": "2182:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2163:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
													"typeString": "struct DiamondStorage.VaultState"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "VaultState",
														"nameLocations": [
															"2163:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1469,
														"src": "2163:10:8"
													},
													"referencedDeclaration": 1469,
													"src": "2163:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultState_$1469_storage_ptr",
														"typeString": "struct DiamondStorage.VaultState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2162:23:8"
									},
									"scope": 1482,
									"src": "2118:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1483,
							"src": "61:2254:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2282:8"
				},
				"id": 8
			}
		}
	}
}